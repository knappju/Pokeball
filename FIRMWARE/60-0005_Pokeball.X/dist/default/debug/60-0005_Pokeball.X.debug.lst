

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Dec 27 15:12:31 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F26Q10
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47  0000                     
    48                           ; Version 2.30
    49                           ; Generated 20/08/2020 GMT
    50                           ; 
    51                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F26Q10 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     
    84                           	psect	nvCOMRAM
    85  000031                     __pnvCOMRAM:
    86                           	callstack 0
    87  000031                     _TMR4_InterruptHandler:
    88                           	callstack 0
    89  000031                     	ds	2
    90  000033                     _TMR0_InterruptHandler:
    91                           	callstack 0
    92  000033                     	ds	2
    93  000035                     _timer0ReloadVal16bit:
    94                           	callstack 0
    95  000035                     	ds	2
    96  0000                     _PIR4bits	set	3785
    97  0000                     _PIE4bits	set	3777
    98  0000                     _PIR0bits	set	3781
    99  0000                     _PIE0bits	set	3773
   100  0000                     _PMD5	set	3809
   101  0000                     _PMD4	set	3808
   102  0000                     _PMD3	set	3807
   103  0000                     _PMD2	set	3806
   104  0000                     _PMD1	set	3805
   105  0000                     _PMD0	set	3804
   106  0000                     _OSCTUNE	set	3800
   107  0000                     _OSCFRQ	set	3801
   108  0000                     _OSCEN	set	3799
   109  0000                     _OSCCON3	set	3797
   110  0000                     _OSCCON1	set	3795
   111  0000                     _RC5PPS	set	3831
   112  0000                     _RC1PPS	set	3827
   113  0000                     _RC3PPS	set	3829
   114  0000                     _INLVLE	set	3877
   115  0000                     _INLVLC	set	3864
   116  0000                     _INLVLB	set	3856
   117  0000                     _INLVLA	set	3848
   118  0000                     _SLRCONC	set	3865
   119  0000                     _SLRCONB	set	3857
   120  0000                     _SLRCONA	set	3849
   121  0000                     _ODCONC	set	3866
   122  0000                     _ODCONB	set	3858
   123  0000                     _ODCONA	set	3850
   124  0000                     _WPUC	set	3867
   125  0000                     _WPUA	set	3851
   126  0000                     _WPUB	set	3859
   127  0000                     _WPUE	set	3880
   128  0000                     _ANSELA	set	3852
   129  0000                     _ANSELB	set	3860
   130  0000                     _ANSELC	set	3868
   131  0000                     _PORTAbits	set	3980
   132  0000                     _PR4	set	4021
   133  0000                     _TMR4	set	4020
   134  0000                     _T4CONbits	set	4022
   135  0000                     _T4RSTbits	set	4025
   136  0000                     _T4HLTbits	set	4023
   137  0000                     _T4CON	set	4022
   138  0000                     _T4TMR	set	4020
   139  0000                     _T4PR	set	4021
   140  0000                     _T4RST	set	4025
   141  0000                     _T4HLT	set	4023
   142  0000                     _T4CLKCON	set	4024
   143  0000                     _PWM4DCL	set	3999
   144  0000                     _PWM4DCH	set	4000
   145  0000                     _PWM4CON	set	4001
   146  0000                     _PWM3DCL	set	4002
   147  0000                     _PWM3DCH	set	4003
   148  0000                     _PWM3CON	set	4004
   149  0000                     _CCP1CONbits	set	4011
   150  0000                     _CCPTMRSbits	set	4013
   151  0000                     _CCPR1L	set	4009
   152  0000                     _CCPR1H	set	4010
   153  0000                     _CCP1CON	set	4011
   154  0000                     _T0CON0bits	set	4052
   155  0000                     _T0CON0	set	4052
   156  0000                     _TMR0L	set	4050
   157  0000                     _TMR0H	set	4051
   158  0000                     _T0CON1	set	4053
   159  0000                     _INTCONbits	set	4082
   160  0000                     _TRISC	set	3977
   161  0000                     _TRISB	set	3976
   162  0000                     _TRISA	set	3975
   163  0000                     _LATC	set	3972
   164  0000                     _LATB	set	3971
   165  0000                     _LATA	set	3970
   166                           
   167                           ; #config settings
   168                           
   169                           	psect	cinit
   170  0006FC                     __pcinit:
   171                           	callstack 0
   172  0006FC                     start_initialization:
   173                           	callstack 0
   174  0006FC                     __initialization:
   175                           	callstack 0
   176                           
   177                           ; Clear objects allocated to COMRAM (36 bytes)
   178  0006FC  EE00  F001         	lfsr	0,__pbssCOMRAM
   179  000700  0E24               	movlw	36
   180  000702                     clear_0:
   181  000702  6AEE               	clrf	postinc0,c
   182  000704  06E8               	decf	wreg,f,c
   183  000706  E1FD               	bnz	clear_0
   184  000708                     end_of_initialization:
   185                           	callstack 0
   186  000708                     __end_of__initialization:
   187                           	callstack 0
   188  000708  9037               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   189  00070A  9237               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   190  00070C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   191  00070E  6EF8               	movwf	tblptru,c
   192  000710  0100               	movlb	0
   193  000712  EF62  F003         	goto	_main	;jump to C main() function
   194                           
   195                           	psect	bssCOMRAM
   196  000001                     __pbssCOMRAM:
   197                           	callstack 0
   198  000001                     _cButton:
   199                           	callstack 0
   200  000001                     	ds	18
   201  000013                     _msTicks:
   202                           	callstack 0
   203  000013                     	ds	8
   204  00001B                     rgbButtonHandler@debounceBuffer:
   205                           	callstack 0
   206  00001B                     	ds	2
   207  00001D                     appHandler@state:
   208                           	callstack 0
   209  00001D                     	ds	2
   210  00001F                     appHandler@blueValue:
   211                           	callstack 0
   212  00001F                     	ds	2
   213  000021                     appHandler@redValue:
   214                           	callstack 0
   215  000021                     	ds	2
   216  000023                     appHandler@greenValue:
   217                           	callstack 0
   218  000023                     	ds	2
   219                           
   220                           	psect	cstackCOMRAM
   221  000025                     __pcstackCOMRAM:
   222                           	callstack 0
   223  000025                     ??_INTERRUPT_InterruptManager:
   224  000025                     
   225                           ; 1 bytes @ 0x0
   226  000025                     	ds	2
   227  000027                     ??_rgbButtonHandler:
   228  000027                     TMR0_SetInterruptHandler@InterruptHandler:
   229                           	callstack 0
   230  000027                     PWM1_LoadDutyValue@dutyValue:
   231                           	callstack 0
   232  000027                     PWM3_LoadDutyValue@dutyValue:
   233                           	callstack 0
   234  000027                     PWM4_LoadDutyValue@dutyValue:
   235                           	callstack 0
   236  000027                     TMR4_SetInterruptHandler@InterruptHandler:
   237                           	callstack 0
   238                           
   239                           ; 2 bytes @ 0x2
   240  000027                     	ds	2
   241  000029                     ??_TMR0_Initialize:
   242  000029                     ??_PWM3_LoadDutyValue:
   243  000029                     ??_PWM4_LoadDutyValue:
   244  000029                     setBlue@value:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0x4
   248  000029                     	ds	2
   249  00002B                     ??_setBlue:
   250  00002B                     setRed@value:
   251                           	callstack 0
   252  00002B                     setGreen@value:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0x6
   256  00002B                     	ds	2
   257  00002D                     ??_setGreen:
   258  00002D                     ??_setRed:
   259                           
   260                           ; 1 bytes @ 0x8
   261  00002D                     	ds	2
   262  00002F                     ??_appHandler:
   263                           
   264                           ; 1 bytes @ 0xA
   265  00002F                     	ds	2
   266  000031                     
   267                           ; 1 bytes @ 0xC
   268 ;;
   269 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   270 ;;
   271 ;; *************** function _main *****************
   272 ;; Defined at:
   273 ;;		line 52 in file "main.c"
   274 ;; Parameters:    Size  Location     Type
   275 ;;		None
   276 ;; Auto vars:     Size  Location     Type
   277 ;;		None
   278 ;; Return value:  Size  Location     Type
   279 ;;                  1    wreg      void 
   280 ;; Registers used:
   281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   282 ;; Tracked objects:
   283 ;;		On entry : 0/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   291 ;;Total ram usage:        0 bytes
   292 ;; Hardware stack levels required when called: 8
   293 ;; This function calls:
   294 ;;		_SYSTEM_Initialize
   295 ;;		_TMR4_StartTimer
   296 ;;		_appHandler
   297 ;;		_appInit
   298 ;; This function is called by:
   299 ;;		Startup code after reset
   300 ;; This function uses a non-reentrant model
   301 ;;
   302                           
   303                           	psect	text0
   304  0006C4                     __ptext0:
   305                           	callstack 0
   306  0006C4                     _main:
   307                           	callstack 23
   308  0006C4                     
   309                           ;main.c: 55:     SYSTEM_Initialize();
   310  0006C4  EC3C  F003         	call	_SYSTEM_Initialize	;wreg free
   311  0006C8                     
   312                           ;main.c: 56:     TMR4_StartTimer();
   313  0006C8  ECD5  F003         	call	_TMR4_StartTimer	;wreg free
   314  0006CC                     
   315                           ;main.c: 57:     appInit();
   316  0006CC  EC11  F003         	call	_appInit	;wreg free
   317  0006D0                     
   318                           ;main.c: 64:     (INTCONbits.GIE = 1);
   319  0006D0  8EF2               	bsf	242,7,c	;volatile
   320  0006D2                     
   321                           ;main.c: 70:     (INTCONbits.PEIE = 1);
   322  0006D2  8CF2               	bsf	242,6,c	;volatile
   323  0006D4                     l1662:
   324                           
   325                           ;main.c: 78:     {;main.c: 79:         appHandler();
   326  0006D4  EC3D  F000         	call	_appHandler	;wreg free
   327  0006D8  EF6A  F003         	goto	l1662
   328  0006DC  EF3B  F000         	goto	start
   329  0006E0                     __end_of_main:
   330                           	callstack 0
   331                           
   332 ;; *************** function _appInit *****************
   333 ;; Defined at:
   334 ;;		line 45 in file "app.c"
   335 ;; Parameters:    Size  Location     Type
   336 ;;		None
   337 ;; Auto vars:     Size  Location     Type
   338 ;;		None
   339 ;; Return value:  Size  Location     Type
   340 ;;                  1    wreg      void 
   341 ;; Registers used:
   342 ;;		wreg, status,2, status,0, cstack
   343 ;; Tracked objects:
   344 ;;		On entry : 0/0
   345 ;;		On exit  : 0/0
   346 ;;		Unchanged: 0/0
   347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   352 ;;Total ram usage:        0 bytes
   353 ;; Hardware stack levels used: 1
   354 ;; Hardware stack levels required when called: 6
   355 ;; This function calls:
   356 ;;		_PWM1_LoadDutyValue
   357 ;;		_PWM3_LoadDutyValue
   358 ;;		_PWM4_LoadDutyValue
   359 ;;		_TMR0_SetInterruptHandler
   360 ;; This function is called by:
   361 ;;		_main
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365                           	psect	text1
   366  000622                     __ptext1:
   367                           	callstack 0
   368  000622                     _appInit:
   369                           	callstack 24
   370  000622                     
   371                           ;app.c: 46:     TMR0_SetInterruptHandler(msTick);
   372  000622  0E16               	movlw	low _msTick
   373  000624  6E27               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
   374  000626  0E07               	movlw	high _msTick
   375  000628  6E28               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
   376  00062A  ECD0  F003         	call	_TMR0_SetInterruptHandler	;wreg free
   377                           
   378                           ;app.c: 48:     PWM4_LoadDutyValue(0xFFFF);
   379  00062E  0EFF               	movlw	255
   380  000630  6E28               	movwf	(PWM4_LoadDutyValue@dutyValue+1)^0,c
   381  000632  6827               	setf	PWM4_LoadDutyValue@dutyValue^0,c
   382  000634  ECB0  F002         	call	_PWM4_LoadDutyValue	;wreg free
   383                           
   384                           ;app.c: 49:     PWM3_LoadDutyValue(0xFFFF);
   385  000638  0EFF               	movlw	255
   386  00063A  6E28               	movwf	(PWM3_LoadDutyValue@dutyValue+1)^0,c
   387  00063C  6827               	setf	PWM3_LoadDutyValue@dutyValue^0,c
   388  00063E  EC96  F002         	call	_PWM3_LoadDutyValue	;wreg free
   389                           
   390                           ;app.c: 50:     PWM1_LoadDutyValue(0xFFFF);
   391  000642  0EFF               	movlw	255
   392  000644  6E28               	movwf	(PWM1_LoadDutyValue@dutyValue+1)^0,c
   393  000646  6827               	setf	PWM1_LoadDutyValue@dutyValue^0,c
   394  000648  ECE3  F002         	call	_PWM1_LoadDutyValue	;wreg free
   395  00064C  0012               	return		;funcret
   396  00064E                     __end_of_appInit:
   397                           	callstack 0
   398                           
   399 ;; *************** function _appHandler *****************
   400 ;; Defined at:
   401 ;;		line 53 in file "app.c"
   402 ;; Parameters:    Size  Location     Type
   403 ;;		None
   404 ;; Auto vars:     Size  Location     Type
   405 ;;		None
   406 ;; Return value:  Size  Location     Type
   407 ;;                  1    wreg      void 
   408 ;; Registers used:
   409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   410 ;; Tracked objects:
   411 ;;		On entry : 0/0
   412 ;;		On exit  : 0/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   417 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   418 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   419 ;;Total ram usage:        2 bytes
   420 ;; Hardware stack levels used: 1
   421 ;; Hardware stack levels required when called: 7
   422 ;; This function calls:
   423 ;;		_rgbButtonHandler
   424 ;;		_setBlue
   425 ;;		_setGreen
   426 ;;		_setRed
   427 ;; This function is called by:
   428 ;;		_main
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           
   432                           	psect	text2
   433  00007A                     __ptext2:
   434                           	callstack 0
   435  00007A                     _appHandler:
   436                           	callstack 23
   437  00007A                     
   438                           ;app.c: 54:     static uint16_t greenValue = 0;;app.c: 55:     static uint16_t redValue 
      +                          = 0;;app.c: 56:     static uint16_t blueValue = 0;;app.c: 57:     static int state = 0;;
      +                          app.c: 70:     rgbButtonHandler();
   439  00007A  EC75  F001         	call	_rgbButtonHandler	;wreg free
   440  00007E                     
   441                           ;app.c: 73:     if(msTicks >= 50){
   442  00007E  501A               	movf	(_msTicks+7)^0,w,c
   443  000080  1019               	iorwf	(_msTicks+6)^0,w,c
   444  000082  1018               	iorwf	(_msTicks+5)^0,w,c
   445  000084  1017               	iorwf	(_msTicks+4)^0,w,c
   446  000086  1016               	iorwf	(_msTicks+3)^0,w,c
   447  000088  1015               	iorwf	(_msTicks+2)^0,w,c
   448  00008A  1014               	iorwf	(_msTicks+1)^0,w,c
   449  00008C  E109               	bnz	u400
   450  00008E  0E32               	movlw	50
   451  000090  5C13               	subwf	_msTicks^0,w,c
   452  000092  A0D8               	btfss	status,0,c
   453  000094  EF4E  F000         	goto	u401
   454  000098  EF50  F000         	goto	u400
   455  00009C                     u401:
   456  00009C  EF74  F001         	goto	l393
   457  0000A0                     u400:
   458  0000A0                     
   459                           ;app.c: 74:         msTicks = 0;
   460  0000A0  EE20  F013         	lfsr	2,_msTicks
   461  0000A4  0E07               	movlw	7
   462  0000A6                     u411:
   463  0000A6  6ADE               	clrf	postinc2,c
   464  0000A8  06E8               	decf	wreg,f,c
   465  0000AA  E2FD               	bc	u411
   466                           
   467                           ;app.c: 76:         switch(state){
   468  0000AC  EF34  F001         	goto	l1644
   469  0000B0                     l1586:
   470                           
   471                           ;app.c: 78:                 greenValue += 4;
   472  0000B0  0E04               	movlw	4
   473  0000B2  2623               	addwf	appHandler@greenValue^0,f,c
   474  0000B4  0E00               	movlw	0
   475  0000B6  2224               	addwfc	(appHandler@greenValue+1)^0,f,c
   476  0000B8                     
   477                           ;app.c: 79:                 redValue = 0;
   478  0000B8  0E00               	movlw	0
   479  0000BA  6E22               	movwf	(appHandler@redValue+1)^0,c
   480  0000BC  0E00               	movlw	0
   481  0000BE  6E21               	movwf	appHandler@redValue^0,c
   482  0000C0                     
   483                           ;app.c: 80:                 blueValue = 0;
   484  0000C0  0E00               	movlw	0
   485  0000C2  6E20               	movwf	(appHandler@blueValue+1)^0,c
   486  0000C4  0E00               	movlw	0
   487  0000C6  6E1F               	movwf	appHandler@blueValue^0,c
   488                           
   489                           ;app.c: 81:                 if(greenValue >= 255){
   490  0000C8  5024               	movf	(appHandler@greenValue+1)^0,w,c
   491  0000CA  E108               	bnz	u420
   492  0000CC  2823               	incf	appHandler@greenValue^0,w,c
   493  0000CE  A0D8               	btfss	status,0,c
   494  0000D0  EF6C  F000         	goto	u421
   495  0000D4  EF6E  F000         	goto	u420
   496  0000D8                     u421:
   497  0000D8  EF62  F001         	goto	l1646
   498  0000DC                     u420:
   499  0000DC                     
   500                           ;app.c: 82:                     state = 1;
   501  0000DC  0E00               	movlw	0
   502  0000DE  6E1E               	movwf	(appHandler@state+1)^0,c
   503  0000E0  0E01               	movlw	1
   504  0000E2  6E1D               	movwf	appHandler@state^0,c
   505  0000E4  EF62  F001         	goto	l1646
   506  0000E8                     l1594:
   507                           
   508                           ;app.c: 86:                 greenValue -= 4;
   509  0000E8  0E04               	movlw	4
   510  0000EA  5E23               	subwf	appHandler@greenValue^0,f,c
   511  0000EC  0E00               	movlw	0
   512  0000EE  5A24               	subwfb	(appHandler@greenValue+1)^0,f,c
   513  0000F0                     
   514                           ;app.c: 87:                 redValue = 0;
   515  0000F0  0E00               	movlw	0
   516  0000F2  6E22               	movwf	(appHandler@redValue+1)^0,c
   517  0000F4  0E00               	movlw	0
   518  0000F6  6E21               	movwf	appHandler@redValue^0,c
   519  0000F8                     
   520                           ;app.c: 88:                 blueValue = 0;
   521  0000F8  0E00               	movlw	0
   522  0000FA  6E20               	movwf	(appHandler@blueValue+1)^0,c
   523  0000FC  0E00               	movlw	0
   524  0000FE  6E1F               	movwf	appHandler@blueValue^0,c
   525                           
   526                           ;app.c: 89:                 if(greenValue <= 0){
   527  000100  5023               	movf	appHandler@greenValue^0,w,c
   528  000102  1024               	iorwf	(appHandler@greenValue+1)^0,w,c
   529  000104  A4D8               	btfss	status,2,c
   530  000106  EF87  F000         	goto	u431
   531  00010A  EF89  F000         	goto	u430
   532  00010E                     u431:
   533  00010E  EF62  F001         	goto	l1646
   534  000112                     u430:
   535  000112                     
   536                           ;app.c: 90:                     state = 2;
   537  000112  0E00               	movlw	0
   538  000114  6E1E               	movwf	(appHandler@state+1)^0,c
   539  000116  0E02               	movlw	2
   540  000118  6E1D               	movwf	appHandler@state^0,c
   541  00011A  EF62  F001         	goto	l1646
   542  00011E                     l1602:
   543                           
   544                           ;app.c: 94:                 redValue += 4;
   545  00011E  0E04               	movlw	4
   546  000120  2621               	addwf	appHandler@redValue^0,f,c
   547  000122  0E00               	movlw	0
   548  000124  2222               	addwfc	(appHandler@redValue+1)^0,f,c
   549  000126                     
   550                           ;app.c: 95:                 greenValue = 0;
   551  000126  0E00               	movlw	0
   552  000128  6E24               	movwf	(appHandler@greenValue+1)^0,c
   553  00012A  0E00               	movlw	0
   554  00012C  6E23               	movwf	appHandler@greenValue^0,c
   555  00012E                     
   556                           ;app.c: 96:                 blueValue = 0;
   557  00012E  0E00               	movlw	0
   558  000130  6E20               	movwf	(appHandler@blueValue+1)^0,c
   559  000132  0E00               	movlw	0
   560  000134  6E1F               	movwf	appHandler@blueValue^0,c
   561                           
   562                           ;app.c: 97:                 if(redValue >= 255){
   563  000136  5022               	movf	(appHandler@redValue+1)^0,w,c
   564  000138  E108               	bnz	u440
   565  00013A  2821               	incf	appHandler@redValue^0,w,c
   566  00013C  A0D8               	btfss	status,0,c
   567  00013E  EFA3  F000         	goto	u441
   568  000142  EFA5  F000         	goto	u440
   569  000146                     u441:
   570  000146  EF62  F001         	goto	l1646
   571  00014A                     u440:
   572  00014A                     
   573                           ;app.c: 98:                     state = 3;
   574  00014A  0E00               	movlw	0
   575  00014C  6E1E               	movwf	(appHandler@state+1)^0,c
   576  00014E  0E03               	movlw	3
   577  000150  6E1D               	movwf	appHandler@state^0,c
   578  000152  EF62  F001         	goto	l1646
   579  000156                     l1610:
   580                           
   581                           ;app.c: 102:                 redValue -= 4;
   582  000156  0E04               	movlw	4
   583  000158  5E21               	subwf	appHandler@redValue^0,f,c
   584  00015A  0E00               	movlw	0
   585  00015C  5A22               	subwfb	(appHandler@redValue+1)^0,f,c
   586  00015E                     
   587                           ;app.c: 103:                 greenValue = 0;
   588  00015E  0E00               	movlw	0
   589  000160  6E24               	movwf	(appHandler@greenValue+1)^0,c
   590  000162  0E00               	movlw	0
   591  000164  6E23               	movwf	appHandler@greenValue^0,c
   592  000166                     
   593                           ;app.c: 104:                 blueValue = 0;
   594  000166  0E00               	movlw	0
   595  000168  6E20               	movwf	(appHandler@blueValue+1)^0,c
   596  00016A  0E00               	movlw	0
   597  00016C  6E1F               	movwf	appHandler@blueValue^0,c
   598                           
   599                           ;app.c: 105:                 if(redValue <= 0){
   600  00016E  5021               	movf	appHandler@redValue^0,w,c
   601  000170  1022               	iorwf	(appHandler@redValue+1)^0,w,c
   602  000172  A4D8               	btfss	status,2,c
   603  000174  EFBE  F000         	goto	u451
   604  000178  EFC0  F000         	goto	u450
   605  00017C                     u451:
   606  00017C  EF62  F001         	goto	l1646
   607  000180                     u450:
   608  000180                     
   609                           ;app.c: 106:                     state = 4;
   610  000180  0E00               	movlw	0
   611  000182  6E1E               	movwf	(appHandler@state+1)^0,c
   612  000184  0E04               	movlw	4
   613  000186  6E1D               	movwf	appHandler@state^0,c
   614  000188  EF62  F001         	goto	l1646
   615  00018C                     l1618:
   616                           
   617                           ;app.c: 110:                 blueValue += 4;
   618  00018C  0E04               	movlw	4
   619  00018E  261F               	addwf	appHandler@blueValue^0,f,c
   620  000190  0E00               	movlw	0
   621  000192  2220               	addwfc	(appHandler@blueValue+1)^0,f,c
   622  000194                     
   623                           ;app.c: 111:                 greenValue = 0;
   624  000194  0E00               	movlw	0
   625  000196  6E24               	movwf	(appHandler@greenValue+1)^0,c
   626  000198  0E00               	movlw	0
   627  00019A  6E23               	movwf	appHandler@greenValue^0,c
   628  00019C                     
   629                           ;app.c: 112:                 redValue = 0;
   630  00019C  0E00               	movlw	0
   631  00019E  6E22               	movwf	(appHandler@redValue+1)^0,c
   632  0001A0  0E00               	movlw	0
   633  0001A2  6E21               	movwf	appHandler@redValue^0,c
   634                           
   635                           ;app.c: 113:                 if(blueValue >= 255){
   636  0001A4  5020               	movf	(appHandler@blueValue+1)^0,w,c
   637  0001A6  E108               	bnz	u460
   638  0001A8  281F               	incf	appHandler@blueValue^0,w,c
   639  0001AA  A0D8               	btfss	status,0,c
   640  0001AC  EFDA  F000         	goto	u461
   641  0001B0  EFDC  F000         	goto	u460
   642  0001B4                     u461:
   643  0001B4  EF62  F001         	goto	l1646
   644  0001B8                     u460:
   645  0001B8                     
   646                           ;app.c: 114:                     state = 5;
   647  0001B8  0E00               	movlw	0
   648  0001BA  6E1E               	movwf	(appHandler@state+1)^0,c
   649  0001BC  0E05               	movlw	5
   650  0001BE  6E1D               	movwf	appHandler@state^0,c
   651  0001C0  EF62  F001         	goto	l1646
   652  0001C4                     l1626:
   653                           
   654                           ;app.c: 118:                 blueValue -= 4;
   655  0001C4  0E04               	movlw	4
   656  0001C6  5E1F               	subwf	appHandler@blueValue^0,f,c
   657  0001C8  0E00               	movlw	0
   658  0001CA  5A20               	subwfb	(appHandler@blueValue+1)^0,f,c
   659  0001CC                     
   660                           ;app.c: 119:                 greenValue = 0;
   661  0001CC  0E00               	movlw	0
   662  0001CE  6E24               	movwf	(appHandler@greenValue+1)^0,c
   663  0001D0  0E00               	movlw	0
   664  0001D2  6E23               	movwf	appHandler@greenValue^0,c
   665  0001D4                     
   666                           ;app.c: 120:                 redValue = 0;
   667  0001D4  0E00               	movlw	0
   668  0001D6  6E22               	movwf	(appHandler@redValue+1)^0,c
   669  0001D8  0E00               	movlw	0
   670  0001DA  6E21               	movwf	appHandler@redValue^0,c
   671                           
   672                           ;app.c: 121:                 if(blueValue <= 0){
   673  0001DC  501F               	movf	appHandler@blueValue^0,w,c
   674  0001DE  1020               	iorwf	(appHandler@blueValue+1)^0,w,c
   675  0001E0  A4D8               	btfss	status,2,c
   676  0001E2  EFF5  F000         	goto	u471
   677  0001E6  EFF7  F000         	goto	u470
   678  0001EA                     u471:
   679  0001EA  EF62  F001         	goto	l1646
   680  0001EE                     u470:
   681  0001EE                     
   682                           ;app.c: 122:                     state = 6;
   683  0001EE  0E00               	movlw	0
   684  0001F0  6E1E               	movwf	(appHandler@state+1)^0,c
   685  0001F2  0E06               	movlw	6
   686  0001F4  6E1D               	movwf	appHandler@state^0,c
   687  0001F6  EF62  F001         	goto	l1646
   688  0001FA                     l1634:
   689                           
   690                           ;app.c: 126:                 blueValue += 4;
   691  0001FA  0E04               	movlw	4
   692  0001FC  261F               	addwf	appHandler@blueValue^0,f,c
   693  0001FE  0E00               	movlw	0
   694  000200  2220               	addwfc	(appHandler@blueValue+1)^0,f,c
   695                           
   696                           ;app.c: 127:                 greenValue += 4;
   697  000202  0E04               	movlw	4
   698  000204  2623               	addwf	appHandler@greenValue^0,f,c
   699  000206  0E00               	movlw	0
   700  000208  2224               	addwfc	(appHandler@greenValue+1)^0,f,c
   701                           
   702                           ;app.c: 128:                 redValue += 4;
   703  00020A  0E04               	movlw	4
   704  00020C  2621               	addwf	appHandler@redValue^0,f,c
   705  00020E  0E00               	movlw	0
   706  000210  2222               	addwfc	(appHandler@redValue+1)^0,f,c
   707                           
   708                           ;app.c: 129:                 if(blueValue >= 255){
   709  000212  5020               	movf	(appHandler@blueValue+1)^0,w,c
   710  000214  E108               	bnz	u480
   711  000216  281F               	incf	appHandler@blueValue^0,w,c
   712  000218  A0D8               	btfss	status,0,c
   713  00021A  EF11  F001         	goto	u481
   714  00021E  EF13  F001         	goto	u480
   715  000222                     u481:
   716  000222  EF62  F001         	goto	l1646
   717  000226                     u480:
   718  000226                     
   719                           ;app.c: 130:                     state = 7;
   720  000226  0E00               	movlw	0
   721  000228  6E1E               	movwf	(appHandler@state+1)^0,c
   722  00022A  0E07               	movlw	7
   723  00022C  6E1D               	movwf	appHandler@state^0,c
   724  00022E  EF62  F001         	goto	l1646
   725  000232                     l1638:
   726                           
   727                           ;app.c: 134:                 blueValue -= 4;
   728  000232  0E04               	movlw	4
   729  000234  5E1F               	subwf	appHandler@blueValue^0,f,c
   730  000236  0E00               	movlw	0
   731  000238  5A20               	subwfb	(appHandler@blueValue+1)^0,f,c
   732                           
   733                           ;app.c: 135:                 greenValue -= 4;
   734  00023A  0E04               	movlw	4
   735  00023C  5E23               	subwf	appHandler@greenValue^0,f,c
   736  00023E  0E00               	movlw	0
   737  000240  5A24               	subwfb	(appHandler@greenValue+1)^0,f,c
   738                           
   739                           ;app.c: 136:                 redValue -= 4;
   740  000242  0E04               	movlw	4
   741  000244  5E21               	subwf	appHandler@redValue^0,f,c
   742  000246  0E00               	movlw	0
   743  000248  5A22               	subwfb	(appHandler@redValue+1)^0,f,c
   744                           
   745                           ;app.c: 137:                 if(blueValue <= 0){
   746  00024A  501F               	movf	appHandler@blueValue^0,w,c
   747  00024C  1020               	iorwf	(appHandler@blueValue+1)^0,w,c
   748  00024E  A4D8               	btfss	status,2,c
   749  000250  EF2C  F001         	goto	u491
   750  000254  EF2E  F001         	goto	u490
   751  000258                     u491:
   752  000258  EF62  F001         	goto	l1646
   753  00025C                     u490:
   754  00025C                     
   755                           ;app.c: 138:                     state = 0;
   756  00025C  0E00               	movlw	0
   757  00025E  6E1E               	movwf	(appHandler@state+1)^0,c
   758  000260  0E00               	movlw	0
   759  000262  6E1D               	movwf	appHandler@state^0,c
   760  000264  EF62  F001         	goto	l1646
   761  000268                     l1644:
   762  000268  C01D  F02F         	movff	appHandler@state,??_appHandler
   763  00026C  C01E  F030         	movff	appHandler@state+1,??_appHandler+1
   764                           
   765                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   766                           ; Switch size 1, requested type "simple"
   767                           ; Number of cases is 1, Range of values is 0 to 0
   768                           ; switch strategies available:
   769                           ; Name         Instructions Cycles
   770                           ; simple_byte            4     3 (average)
   771                           ;	Chosen strategy is simple_byte
   772  000270  5030               	movf	(??_appHandler+1)^0,w,c
   773  000272  0A00               	xorlw	0	; case 0
   774  000274  B4D8               	btfsc	status,2,c
   775  000276  EF3F  F001         	goto	l1698
   776  00027A  EF62  F001         	goto	l1646
   777  00027E                     l1698:
   778                           
   779                           ; Switch size 1, requested type "simple"
   780                           ; Number of cases is 8, Range of values is 0 to 7
   781                           ; switch strategies available:
   782                           ; Name         Instructions Cycles
   783                           ; simple_byte           25    13 (average)
   784                           ;	Chosen strategy is simple_byte
   785  00027E  502F               	movf	??_appHandler^0,w,c
   786  000280  0A00               	xorlw	0	; case 0
   787  000282  B4D8               	btfsc	status,2,c
   788  000284  EF58  F000         	goto	l1586
   789  000288  0A01               	xorlw	1	; case 1
   790  00028A  B4D8               	btfsc	status,2,c
   791  00028C  EF74  F000         	goto	l1594
   792  000290  0A03               	xorlw	3	; case 2
   793  000292  B4D8               	btfsc	status,2,c
   794  000294  EF8F  F000         	goto	l1602
   795  000298  0A01               	xorlw	1	; case 3
   796  00029A  B4D8               	btfsc	status,2,c
   797  00029C  EFAB  F000         	goto	l1610
   798  0002A0  0A07               	xorlw	7	; case 4
   799  0002A2  B4D8               	btfsc	status,2,c
   800  0002A4  EFC6  F000         	goto	l1618
   801  0002A8  0A01               	xorlw	1	; case 5
   802  0002AA  B4D8               	btfsc	status,2,c
   803  0002AC  EFE2  F000         	goto	l1626
   804  0002B0  0A03               	xorlw	3	; case 6
   805  0002B2  B4D8               	btfsc	status,2,c
   806  0002B4  EFFD  F000         	goto	l1634
   807  0002B8  0A01               	xorlw	1	; case 7
   808  0002BA  B4D8               	btfsc	status,2,c
   809  0002BC  EF19  F001         	goto	l1638
   810  0002C0  EF62  F001         	goto	l1646
   811  0002C4                     l1646:
   812                           
   813                           ;app.c: 142:         setGreen(greenValue);
   814  0002C4  C023  F02B         	movff	appHandler@greenValue,setGreen@value
   815  0002C8  C024  F02C         	movff	appHandler@greenValue+1,setGreen@value+1
   816  0002CC  EC31  F002         	call	_setGreen	;wreg free
   817                           
   818                           ;app.c: 143:         setRed(redValue);
   819  0002D0  C021  F02B         	movff	appHandler@redValue,setRed@value
   820  0002D4  C022  F02C         	movff	appHandler@redValue+1,setRed@value+1
   821  0002D8  EC0D  F002         	call	_setRed	;wreg free
   822                           
   823                           ;app.c: 144:         setBlue(blueValue);
   824  0002DC  C01F  F029         	movff	appHandler@blueValue,setBlue@value
   825  0002E0  C020  F02A         	movff	appHandler@blueValue+1,setBlue@value+1
   826  0002E4  EC55  F002         	call	_setBlue	;wreg free
   827  0002E8                     l393:
   828  0002E8  0012               	return		;funcret
   829  0002EA                     __end_of_appHandler:
   830                           	callstack 0
   831                           
   832 ;; *************** function _setRed *****************
   833 ;; Defined at:
   834 ;;		line 152 in file "app.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;  value           2    6[COMRAM] unsigned short 
   837 ;; Auto vars:     Size  Location     Type
   838 ;;		None
   839 ;; Return value:  Size  Location     Type
   840 ;;                  1    wreg      void 
   841 ;; Registers used:
   842 ;;		wreg, status,2, status,0, cstack
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   848 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   850 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   851 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   852 ;;Total ram usage:        4 bytes
   853 ;; Hardware stack levels used: 1
   854 ;; Hardware stack levels required when called: 6
   855 ;; This function calls:
   856 ;;		_PWM3_LoadDutyValue
   857 ;; This function is called by:
   858 ;;		_appHandler
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862                           	psect	text3
   863  00041A                     __ptext3:
   864                           	callstack 0
   865  00041A                     _setRed:
   866                           	callstack 23
   867  00041A                     
   868                           ;app.c: 153:     if(value > 255){
   869  00041A  042C               	decf	(setRed@value+1)^0,w,c
   870  00041C  A0D8               	btfss	status,0,c
   871  00041E  EF13  F002         	goto	u381
   872  000422  EF15  F002         	goto	u380
   873  000426                     u381:
   874  000426  EF18  F002         	goto	l1548
   875  00042A                     u380:
   876  00042A                     
   877                           ;app.c: 154:         value = 255;
   878  00042A  0E00               	movlw	0
   879  00042C  6E2C               	movwf	(setRed@value+1)^0,c
   880  00042E  682B               	setf	setRed@value^0,c
   881  000430                     l1548:
   882                           
   883                           ;app.c: 156:     value = (255 - value) * 4;
   884  000430  0EFF               	movlw	255
   885  000432  6E2D               	movwf	??_setRed^0,c
   886  000434  0E00               	movlw	0
   887  000436  6E2E               	movwf	(??_setRed+1)^0,c
   888  000438  502B               	movf	setRed@value^0,w,c
   889  00043A  5E2D               	subwf	??_setRed^0,f,c
   890  00043C  502C               	movf	(setRed@value+1)^0,w,c
   891  00043E  5A2E               	subwfb	(??_setRed+1)^0,f,c
   892  000440  90D8               	bcf	status,0,c
   893  000442  362D               	rlcf	??_setRed^0,f,c
   894  000444  362E               	rlcf	(??_setRed+1)^0,f,c
   895  000446  90D8               	bcf	status,0,c
   896  000448  362D               	rlcf	??_setRed^0,f,c
   897  00044A  362E               	rlcf	(??_setRed+1)^0,f,c
   898  00044C  C02D  F02B         	movff	??_setRed,setRed@value
   899  000450  C02E  F02C         	movff	??_setRed+1,setRed@value+1
   900  000454                     
   901                           ;app.c: 157:     PWM3_LoadDutyValue(value);
   902  000454  C02B  F027         	movff	setRed@value,PWM3_LoadDutyValue@dutyValue
   903  000458  C02C  F028         	movff	setRed@value+1,PWM3_LoadDutyValue@dutyValue+1
   904  00045C  EC96  F002         	call	_PWM3_LoadDutyValue	;wreg free
   905  000460  0012               	return		;funcret
   906  000462                     __end_of_setRed:
   907                           	callstack 0
   908                           
   909 ;; *************** function _PWM3_LoadDutyValue *****************
   910 ;; Defined at:
   911 ;;		line 74 in file "mcc_generated_files/pwm3.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;  dutyValue       2    2[COMRAM] unsigned short 
   914 ;; Auto vars:     Size  Location     Type
   915 ;;		None
   916 ;; Return value:  Size  Location     Type
   917 ;;                  1    wreg      void 
   918 ;; Registers used:
   919 ;;		wreg, status,2, status,0
   920 ;; Tracked objects:
   921 ;;		On entry : 0/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   925 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   927 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   928 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   929 ;;Total ram usage:        4 bytes
   930 ;; Hardware stack levels used: 1
   931 ;; Hardware stack levels required when called: 5
   932 ;; This function calls:
   933 ;;		Nothing
   934 ;; This function is called by:
   935 ;;		_appInit
   936 ;;		_setRed
   937 ;;		_updateColor
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           	psect	text4
   942  00052C                     __ptext4:
   943                           	callstack 0
   944  00052C                     _PWM3_LoadDutyValue:
   945                           	callstack 24
   946  00052C                     
   947                           ;mcc_generated_files/pwm3.c: 74:  void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm3.c: 75:  {;mcc_generated_files/pwm3.c: 77:      PWM3DCH = (dutyValue & 0x0
      +                          3FC)>>2;
   948  00052C  C027  F029         	movff	PWM3_LoadDutyValue@dutyValue,??_PWM3_LoadDutyValue
   949  000530  C028  F02A         	movff	PWM3_LoadDutyValue@dutyValue+1,??_PWM3_LoadDutyValue+1
   950  000534  90D8               	bcf	status,0,c
   951  000536  322A               	rrcf	(??_PWM3_LoadDutyValue+1)^0,f,c
   952  000538  3229               	rrcf	??_PWM3_LoadDutyValue^0,f,c
   953  00053A  90D8               	bcf	status,0,c
   954  00053C  322A               	rrcf	(??_PWM3_LoadDutyValue+1)^0,f,c
   955  00053E  3229               	rrcf	??_PWM3_LoadDutyValue^0,f,c
   956  000540  5029               	movf	??_PWM3_LoadDutyValue^0,w,c
   957  000542  6EA3               	movwf	163,c	;volatile
   958                           
   959                           ;mcc_generated_files/pwm3.c: 80:      PWM3DCL = (dutyValue & 0x0003)<<6;
   960  000544  C027  F029         	movff	PWM3_LoadDutyValue@dutyValue,??_PWM3_LoadDutyValue
   961  000548  0E03               	movlw	3
   962  00054A  1629               	andwf	??_PWM3_LoadDutyValue^0,f,c
   963  00054C  0E06               	movlw	6
   964  00054E  6E2A               	movwf	(??_PWM3_LoadDutyValue+1)^0,c
   965  000550                     u355:
   966  000550  90D8               	bcf	status,0,c
   967  000552  3629               	rlcf	??_PWM3_LoadDutyValue^0,f,c
   968  000554  2E2A               	decfsz	(??_PWM3_LoadDutyValue+1)^0,f,c
   969  000556  EFA8  F002         	goto	u355
   970  00055A  5029               	movf	??_PWM3_LoadDutyValue^0,w,c
   971  00055C  6EA2               	movwf	162,c	;volatile
   972  00055E  0012               	return		;funcret
   973  000560                     __end_of_PWM3_LoadDutyValue:
   974                           	callstack 0
   975                           
   976 ;; *************** function _setGreen *****************
   977 ;; Defined at:
   978 ;;		line 159 in file "app.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;  value           2    6[COMRAM] unsigned short 
   981 ;; Auto vars:     Size  Location     Type
   982 ;;		None
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      void 
   985 ;; Registers used:
   986 ;;		wreg, status,2, status,0, cstack
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   992 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   994 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   995 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   996 ;;Total ram usage:        4 bytes
   997 ;; Hardware stack levels used: 1
   998 ;; Hardware stack levels required when called: 6
   999 ;; This function calls:
  1000 ;;		_PWM4_LoadDutyValue
  1001 ;; This function is called by:
  1002 ;;		_appHandler
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           	psect	text5
  1007  000462                     __ptext5:
  1008                           	callstack 0
  1009  000462                     _setGreen:
  1010                           	callstack 23
  1011  000462                     
  1012                           ;app.c: 160:     if(value > 255){
  1013  000462  042C               	decf	(setGreen@value+1)^0,w,c
  1014  000464  A0D8               	btfss	status,0,c
  1015  000466  EF37  F002         	goto	u371
  1016  00046A  EF39  F002         	goto	u370
  1017  00046E                     u371:
  1018  00046E  EF3C  F002         	goto	l1540
  1019  000472                     u370:
  1020  000472                     
  1021                           ;app.c: 161:         value = 255;
  1022  000472  0E00               	movlw	0
  1023  000474  6E2C               	movwf	(setGreen@value+1)^0,c
  1024  000476  682B               	setf	setGreen@value^0,c
  1025  000478                     l1540:
  1026                           
  1027                           ;app.c: 163:     value = (255 - value) * 4;
  1028  000478  0EFF               	movlw	255
  1029  00047A  6E2D               	movwf	??_setGreen^0,c
  1030  00047C  0E00               	movlw	0
  1031  00047E  6E2E               	movwf	(??_setGreen+1)^0,c
  1032  000480  502B               	movf	setGreen@value^0,w,c
  1033  000482  5E2D               	subwf	??_setGreen^0,f,c
  1034  000484  502C               	movf	(setGreen@value+1)^0,w,c
  1035  000486  5A2E               	subwfb	(??_setGreen+1)^0,f,c
  1036  000488  90D8               	bcf	status,0,c
  1037  00048A  362D               	rlcf	??_setGreen^0,f,c
  1038  00048C  362E               	rlcf	(??_setGreen+1)^0,f,c
  1039  00048E  90D8               	bcf	status,0,c
  1040  000490  362D               	rlcf	??_setGreen^0,f,c
  1041  000492  362E               	rlcf	(??_setGreen+1)^0,f,c
  1042  000494  C02D  F02B         	movff	??_setGreen,setGreen@value
  1043  000498  C02E  F02C         	movff	??_setGreen+1,setGreen@value+1
  1044  00049C                     
  1045                           ;app.c: 164:     PWM4_LoadDutyValue(value);
  1046  00049C  C02B  F027         	movff	setGreen@value,PWM4_LoadDutyValue@dutyValue
  1047  0004A0  C02C  F028         	movff	setGreen@value+1,PWM4_LoadDutyValue@dutyValue+1
  1048  0004A4  ECB0  F002         	call	_PWM4_LoadDutyValue	;wreg free
  1049  0004A8  0012               	return		;funcret
  1050  0004AA                     __end_of_setGreen:
  1051                           	callstack 0
  1052                           
  1053 ;; *************** function _PWM4_LoadDutyValue *****************
  1054 ;; Defined at:
  1055 ;;		line 74 in file "mcc_generated_files/pwm4.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;  dutyValue       2    2[COMRAM] unsigned short 
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;		None
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  1    wreg      void 
  1062 ;; Registers used:
  1063 ;;		wreg, status,2, status,0
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1069 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1071 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1072 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1073 ;;Total ram usage:        4 bytes
  1074 ;; Hardware stack levels used: 1
  1075 ;; Hardware stack levels required when called: 5
  1076 ;; This function calls:
  1077 ;;		Nothing
  1078 ;; This function is called by:
  1079 ;;		_appInit
  1080 ;;		_setGreen
  1081 ;;		_updateColor
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           	psect	text6
  1086  000560                     __ptext6:
  1087                           	callstack 0
  1088  000560                     _PWM4_LoadDutyValue:
  1089                           	callstack 24
  1090  000560                     
  1091                           ;mcc_generated_files/pwm4.c: 74:  void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm4.c: 75:  {;mcc_generated_files/pwm4.c: 77:      PWM4DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  1092  000560  C027  F029         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
  1093  000564  C028  F02A         	movff	PWM4_LoadDutyValue@dutyValue+1,??_PWM4_LoadDutyValue+1
  1094  000568  90D8               	bcf	status,0,c
  1095  00056A  322A               	rrcf	(??_PWM4_LoadDutyValue+1)^0,f,c
  1096  00056C  3229               	rrcf	??_PWM4_LoadDutyValue^0,f,c
  1097  00056E  90D8               	bcf	status,0,c
  1098  000570  322A               	rrcf	(??_PWM4_LoadDutyValue+1)^0,f,c
  1099  000572  3229               	rrcf	??_PWM4_LoadDutyValue^0,f,c
  1100  000574  5029               	movf	??_PWM4_LoadDutyValue^0,w,c
  1101  000576  6EA0               	movwf	160,c	;volatile
  1102                           
  1103                           ;mcc_generated_files/pwm4.c: 80:      PWM4DCL = (dutyValue & 0x0003)<<6;
  1104  000578  C027  F029         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
  1105  00057C  0E03               	movlw	3
  1106  00057E  1629               	andwf	??_PWM4_LoadDutyValue^0,f,c
  1107  000580  0E06               	movlw	6
  1108  000582  6E2A               	movwf	(??_PWM4_LoadDutyValue+1)^0,c
  1109  000584                     u365:
  1110  000584  90D8               	bcf	status,0,c
  1111  000586  3629               	rlcf	??_PWM4_LoadDutyValue^0,f,c
  1112  000588  2E2A               	decfsz	(??_PWM4_LoadDutyValue+1)^0,f,c
  1113  00058A  EFC2  F002         	goto	u365
  1114  00058E  5029               	movf	??_PWM4_LoadDutyValue^0,w,c
  1115  000590  6E9F               	movwf	159,c	;volatile
  1116  000592  0012               	return		;funcret
  1117  000594                     __end_of_PWM4_LoadDutyValue:
  1118                           	callstack 0
  1119                           
  1120 ;; *************** function _setBlue *****************
  1121 ;; Defined at:
  1122 ;;		line 166 in file "app.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;  value           2    4[COMRAM] unsigned short 
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;		None
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  1    wreg      void 
  1129 ;; Registers used:
  1130 ;;		wreg, status,2, status,0, cstack
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1136 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1138 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1139 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1140 ;;Total ram usage:        4 bytes
  1141 ;; Hardware stack levels used: 1
  1142 ;; Hardware stack levels required when called: 6
  1143 ;; This function calls:
  1144 ;;		_PWM1_LoadDutyValue
  1145 ;; This function is called by:
  1146 ;;		_appHandler
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           	psect	text7
  1151  0004AA                     __ptext7:
  1152                           	callstack 0
  1153  0004AA                     _setBlue:
  1154                           	callstack 23
  1155  0004AA                     
  1156                           ;app.c: 167:     if(value > 255){
  1157  0004AA  042A               	decf	(setBlue@value+1)^0,w,c
  1158  0004AC  A0D8               	btfss	status,0,c
  1159  0004AE  EF5B  F002         	goto	u391
  1160  0004B2  EF5D  F002         	goto	u390
  1161  0004B6                     u391:
  1162  0004B6  EF60  F002         	goto	l1556
  1163  0004BA                     u390:
  1164  0004BA                     
  1165                           ;app.c: 168:         value = 255;
  1166  0004BA  0E00               	movlw	0
  1167  0004BC  6E2A               	movwf	(setBlue@value+1)^0,c
  1168  0004BE  6829               	setf	setBlue@value^0,c
  1169  0004C0                     l1556:
  1170                           
  1171                           ;app.c: 170:     value = (255 - value) * 4;
  1172  0004C0  0EFF               	movlw	255
  1173  0004C2  6E2B               	movwf	??_setBlue^0,c
  1174  0004C4  0E00               	movlw	0
  1175  0004C6  6E2C               	movwf	(??_setBlue+1)^0,c
  1176  0004C8  5029               	movf	setBlue@value^0,w,c
  1177  0004CA  5E2B               	subwf	??_setBlue^0,f,c
  1178  0004CC  502A               	movf	(setBlue@value+1)^0,w,c
  1179  0004CE  5A2C               	subwfb	(??_setBlue+1)^0,f,c
  1180  0004D0  90D8               	bcf	status,0,c
  1181  0004D2  362B               	rlcf	??_setBlue^0,f,c
  1182  0004D4  362C               	rlcf	(??_setBlue+1)^0,f,c
  1183  0004D6  90D8               	bcf	status,0,c
  1184  0004D8  362B               	rlcf	??_setBlue^0,f,c
  1185  0004DA  362C               	rlcf	(??_setBlue+1)^0,f,c
  1186  0004DC  C02B  F029         	movff	??_setBlue,setBlue@value
  1187  0004E0  C02C  F02A         	movff	??_setBlue+1,setBlue@value+1
  1188  0004E4                     
  1189                           ;app.c: 171:     PWM1_LoadDutyValue(value);
  1190  0004E4  C029  F027         	movff	setBlue@value,PWM1_LoadDutyValue@dutyValue
  1191  0004E8  C02A  F028         	movff	setBlue@value+1,PWM1_LoadDutyValue@dutyValue+1
  1192  0004EC  ECE3  F002         	call	_PWM1_LoadDutyValue	;wreg free
  1193  0004F0  0012               	return		;funcret
  1194  0004F2                     __end_of_setBlue:
  1195                           	callstack 0
  1196                           
  1197 ;; *************** function _PWM1_LoadDutyValue *****************
  1198 ;; Defined at:
  1199 ;;		line 82 in file "mcc_generated_files/pwm1.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;  dutyValue       2    2[COMRAM] unsigned short 
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;		None
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      void 
  1206 ;; Registers used:
  1207 ;;		wreg, status,2, status,0
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1213 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1216 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1217 ;;Total ram usage:        2 bytes
  1218 ;; Hardware stack levels used: 1
  1219 ;; Hardware stack levels required when called: 5
  1220 ;; This function calls:
  1221 ;;		Nothing
  1222 ;; This function is called by:
  1223 ;;		_appInit
  1224 ;;		_setBlue
  1225 ;;		_updateColor
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           	psect	text8
  1230  0005C6                     __ptext8:
  1231                           	callstack 0
  1232  0005C6                     _PWM1_LoadDutyValue:
  1233                           	callstack 24
  1234  0005C6                     
  1235                           ;mcc_generated_files/pwm1.c: 82: void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm1.c: 83: {;mcc_generated_files/pwm1.c: 84:     dutyValue &= 0x03FF;
  1236  0005C6  0EFF               	movlw	255
  1237  0005C8  1627               	andwf	PWM1_LoadDutyValue@dutyValue^0,f,c
  1238  0005CA  0E03               	movlw	3
  1239  0005CC  1628               	andwf	(PWM1_LoadDutyValue@dutyValue+1)^0,f,c
  1240  0005CE                     
  1241                           ;mcc_generated_files/pwm1.c: 87:     if(CCP1CONbits.FMT)
  1242  0005CE  A8AB               	btfss	171,4,c	;volatile
  1243  0005D0  EFEC  F002         	goto	u331
  1244  0005D4  EFEE  F002         	goto	u330
  1245  0005D8                     u331:
  1246  0005D8  EFF5  F002         	goto	l1498
  1247  0005DC                     u330:
  1248  0005DC                     
  1249                           ;mcc_generated_files/pwm1.c: 88:     {;mcc_generated_files/pwm1.c: 89:         dutyValue
      +                           <<= 6;
  1250  0005DC  0E06               	movlw	6
  1251  0005DE                     u345:
  1252  0005DE  90D8               	bcf	status,0,c
  1253  0005E0  3627               	rlcf	PWM1_LoadDutyValue@dutyValue^0,f,c
  1254  0005E2  3628               	rlcf	(PWM1_LoadDutyValue@dutyValue+1)^0,f,c
  1255  0005E4  2EE8               	decfsz	wreg,f,c
  1256  0005E6  EFEF  F002         	goto	u345
  1257  0005EA                     l1498:
  1258                           
  1259                           ;mcc_generated_files/pwm1.c: 90:         CCPR1H = dutyValue >> 8;
  1260  0005EA  5028               	movf	(PWM1_LoadDutyValue@dutyValue+1)^0,w,c
  1261  0005EC  6EAA               	movwf	170,c	;volatile
  1262  0005EE                     
  1263                           ;mcc_generated_files/pwm1.c: 91:         CCPR1L = dutyValue;
  1264  0005EE  C027  FFA9         	movff	PWM1_LoadDutyValue@dutyValue,4009	;volatile
  1265  0005F2  0012               	return		;funcret
  1266  0005F4                     __end_of_PWM1_LoadDutyValue:
  1267                           	callstack 0
  1268                           
  1269 ;; *************** function _rgbButtonHandler *****************
  1270 ;; Defined at:
  1271 ;;		line 20 in file "rgbButton.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;		None
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;		None
  1276 ;; Return value:  Size  Location     Type
  1277 ;;                  1    wreg      void 
  1278 ;; Registers used:
  1279 ;;		wreg, status,2, status,0
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1287 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1288 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1289 ;;Total ram usage:        2 bytes
  1290 ;; Hardware stack levels used: 1
  1291 ;; Hardware stack levels required when called: 5
  1292 ;; This function calls:
  1293 ;;		Nothing
  1294 ;; This function is called by:
  1295 ;;		_appHandler
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           	psect	text9
  1300  0002EA                     __ptext9:
  1301                           	callstack 0
  1302  0002EA                     _rgbButtonHandler:
  1303                           	callstack 24
  1304  0002EA                     
  1305                           ;rgbButton.c: 21:     static uint16_t debounceBuffer = 0x0000;;rgbButton.c: 24:     if(c
      +                          Button.ticks.colorRefreshTicks >= 50){
  1306  0002EA  500F               	movf	(_cButton+14)^0,w,c
  1307  0002EC  100E               	iorwf	(_cButton+13)^0,w,c
  1308  0002EE  100D               	iorwf	(_cButton+12)^0,w,c
  1309  0002F0  E109               	bnz	u70
  1310  0002F2  0E32               	movlw	50
  1311  0002F4  5C0C               	subwf	(_cButton+11)^0,w,c
  1312  0002F6  A0D8               	btfss	status,0,c
  1313  0002F8  EF80  F001         	goto	u71
  1314  0002FC  EF82  F001         	goto	u70
  1315  000300                     u71:
  1316  000300  EF8A  F001         	goto	l1222
  1317  000304                     u70:
  1318  000304                     
  1319                           ;rgbButton.c: 25:         cButton.ticks.colorRefreshTicks = 0;
  1320  000304  0E00               	movlw	0
  1321  000306  6E0C               	movwf	(_cButton+11)^0,c
  1322  000308  0E00               	movlw	0
  1323  00030A  6E0D               	movwf	(_cButton+12)^0,c
  1324  00030C  0E00               	movlw	0
  1325  00030E  6E0E               	movwf	(_cButton+13)^0,c
  1326  000310  0E00               	movlw	0
  1327  000312  6E0F               	movwf	(_cButton+14)^0,c
  1328  000314                     l1222:
  1329                           
  1330                           ;rgbButton.c: 30:     if(cButton.ticks.debounceTicks >= 1){
  1331  000314  5008               	movf	(_cButton+7)^0,w,c
  1332  000316  1009               	iorwf	(_cButton+8)^0,w,c
  1333  000318  100A               	iorwf	(_cButton+9)^0,w,c
  1334  00031A  100B               	iorwf	(_cButton+10)^0,w,c
  1335  00031C  B4D8               	btfsc	status,2,c
  1336  00031E  EF93  F001         	goto	u81
  1337  000322  EF95  F001         	goto	u80
  1338  000326                     u81:
  1339  000326  EFDF  F001         	goto	l429
  1340  00032A                     u80:
  1341  00032A                     
  1342                           ;rgbButton.c: 31:         cButton.ticks.debounceTicks = 0;
  1343  00032A  0E00               	movlw	0
  1344  00032C  6E08               	movwf	(_cButton+7)^0,c
  1345  00032E  0E00               	movlw	0
  1346  000330  6E09               	movwf	(_cButton+8)^0,c
  1347  000332  0E00               	movlw	0
  1348  000334  6E0A               	movwf	(_cButton+9)^0,c
  1349  000336  0E00               	movlw	0
  1350  000338  6E0B               	movwf	(_cButton+10)^0,c
  1351  00033A                     
  1352                           ;rgbButton.c: 32:         cButton.buttonStates.lastIsPressed = cButton.buttonStates.isPr
      +                          essed;
  1353  00033A  C001  F002         	movff	_cButton,_cButton+1
  1354  00033E                     
  1355                           ;rgbButton.c: 34:         debounceBuffer = (debounceBuffer << 1) | !PORTAbits.RA6 | 0xFF
      +                          E0;
  1356  00033E  AC8C               	btfss	140,6,c	;volatile
  1357  000340  EFA4  F001         	goto	u91
  1358  000344  EFA7  F001         	goto	u90
  1359  000348                     u91:
  1360  000348  0E01               	movlw	1
  1361  00034A  EFA8  F001         	goto	u100
  1362  00034E                     u90:
  1363  00034E  0E00               	movlw	0
  1364  000350                     u100:
  1365  000350  C01B  F027         	movff	rgbButtonHandler@debounceBuffer,??_rgbButtonHandler
  1366  000354  C01C  F028         	movff	rgbButtonHandler@debounceBuffer+1,??_rgbButtonHandler+1
  1367  000358  90D8               	bcf	status,0,c
  1368  00035A  3627               	rlcf	??_rgbButtonHandler^0,f,c
  1369  00035C  3628               	rlcf	(??_rgbButtonHandler+1)^0,f,c
  1370  00035E  1227               	iorwf	??_rgbButtonHandler^0,f,c
  1371  000360  0E00               	movlw	0
  1372  000362  1228               	iorwf	(??_rgbButtonHandler+1)^0,f,c
  1373  000364  0EE0               	movlw	224
  1374  000366  1027               	iorwf	??_rgbButtonHandler^0,w,c
  1375  000368  6E1B               	movwf	rgbButtonHandler@debounceBuffer^0,c
  1376  00036A  0EFF               	movlw	255
  1377  00036C  1028               	iorwf	(??_rgbButtonHandler+1)^0,w,c
  1378  00036E  6E1C               	movwf	(rgbButtonHandler@debounceBuffer+1)^0,c
  1379  000370                     
  1380                           ;rgbButton.c: 36:         if(debounceBuffer == 0xffff){
  1381  000370  281B               	incf	rgbButtonHandler@debounceBuffer^0,w,c
  1382  000372  E106               	bnz	u111
  1383  000374  281C               	incf	(rgbButtonHandler@debounceBuffer+1)^0,w,c
  1384  000376  A4D8               	btfss	status,2,c
  1385  000378  EFC0  F001         	goto	u111
  1386  00037C  EFC2  F001         	goto	u110
  1387  000380                     u111:
  1388  000380  EFC6  F001         	goto	l1234
  1389  000384                     u110:
  1390  000384                     
  1391                           ;rgbButton.c: 37:             cButton.buttonStates.isPressed = 1;
  1392  000384  0E01               	movlw	1
  1393  000386  6E01               	movwf	_cButton^0,c
  1394                           
  1395                           ;rgbButton.c: 38:         }
  1396  000388  EFC8  F001         	goto	l1236
  1397  00038C                     l1234:
  1398                           
  1399                           ;rgbButton.c: 40:             cButton.buttonStates.isPressed = 0;
  1400  00038C  0E00               	movlw	0
  1401  00038E  6E01               	movwf	_cButton^0,c
  1402  000390                     l1236:
  1403                           
  1404                           ;rgbButton.c: 42:         if(cButton.buttonStates.isPressed != cButton.buttonStates.last
      +                          IsPressed){
  1405  000390  5001               	movf	_cButton^0,w,c
  1406  000392  1802               	xorwf	(_cButton+1)^0,w,c
  1407  000394  B4D8               	btfsc	status,2,c
  1408  000396  EFCF  F001         	goto	u121
  1409  00039A  EFD1  F001         	goto	u120
  1410  00039E                     u121:
  1411  00039E  EFDD  F001         	goto	l1240
  1412  0003A2                     u120:
  1413  0003A2                     
  1414                           ;rgbButton.c: 43:             cButton.buttonStates.changing = 1;
  1415  0003A2  0E01               	movlw	1
  1416  0003A4  6E03               	movwf	(_cButton+2)^0,c
  1417                           
  1418                           ;rgbButton.c: 44:             cButton.ticks.buttonPressedTicks = 0;
  1419  0003A6  0E00               	movlw	0
  1420  0003A8  6E04               	movwf	(_cButton+3)^0,c
  1421  0003AA  0E00               	movlw	0
  1422  0003AC  6E05               	movwf	(_cButton+4)^0,c
  1423  0003AE  0E00               	movlw	0
  1424  0003B0  6E06               	movwf	(_cButton+5)^0,c
  1425  0003B2  0E00               	movlw	0
  1426  0003B4  6E07               	movwf	(_cButton+6)^0,c
  1427                           
  1428                           ;rgbButton.c: 45:         }
  1429  0003B6  EFDF  F001         	goto	l429
  1430  0003BA                     l1240:
  1431                           
  1432                           ;rgbButton.c: 47:             cButton.buttonStates.changing = 0;
  1433  0003BA  0E00               	movlw	0
  1434  0003BC  6E03               	movwf	(_cButton+2)^0,c
  1435  0003BE                     l429:
  1436  0003BE  0012               	return		;funcret
  1437  0003C0                     __end_of_rgbButtonHandler:
  1438                           	callstack 0
  1439                           
  1440 ;; *************** function _TMR4_StartTimer *****************
  1441 ;; Defined at:
  1442 ;;		line 114 in file "mcc_generated_files/tmr4.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;		None
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;		None
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  1    wreg      void 
  1449 ;; Registers used:
  1450 ;;		cstack
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1460 ;;Total ram usage:        0 bytes
  1461 ;; Hardware stack levels used: 1
  1462 ;; Hardware stack levels required when called: 6
  1463 ;; This function calls:
  1464 ;;		_TMR4_Start
  1465 ;; This function is called by:
  1466 ;;		_main
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470                           	psect	text10
  1471  0007AA                     __ptext10:
  1472                           	callstack 0
  1473  0007AA                     _TMR4_StartTimer:
  1474                           	callstack 24
  1475  0007AA                     
  1476                           ;mcc_generated_files/tmr4.c: 116:     TMR4_Start();
  1477  0007AA  ECD8  F003         	call	_TMR4_Start	;wreg free
  1478  0007AE  0012               	return		;funcret
  1479  0007B0                     __end_of_TMR4_StartTimer:
  1480                           	callstack 0
  1481                           
  1482 ;; *************** function _TMR4_Start *****************
  1483 ;; Defined at:
  1484 ;;		line 108 in file "mcc_generated_files/tmr4.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;		None
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;		None
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  1    wreg      void 
  1491 ;; Registers used:
  1492 ;;		None
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1502 ;;Total ram usage:        0 bytes
  1503 ;; Hardware stack levels used: 1
  1504 ;; Hardware stack levels required when called: 5
  1505 ;; This function calls:
  1506 ;;		Nothing
  1507 ;; This function is called by:
  1508 ;;		_TMR4_StartTimer
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           	psect	text11
  1513  0007B0                     __ptext11:
  1514                           	callstack 0
  1515  0007B0                     _TMR4_Start:
  1516                           	callstack 24
  1517  0007B0                     
  1518                           ;mcc_generated_files/tmr4.c: 111:     T4CONbits.TMR4ON = 1;
  1519  0007B0  8EB6               	bsf	182,7,c	;volatile
  1520  0007B2  0012               	return		;funcret
  1521  0007B4                     __end_of_TMR4_Start:
  1522                           	callstack 0
  1523                           
  1524 ;; *************** function _SYSTEM_Initialize *****************
  1525 ;; Defined at:
  1526 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;		None
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;		None
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      void 
  1533 ;; Registers used:
  1534 ;;		wreg, status,2, status,0, cstack
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1544 ;;Total ram usage:        0 bytes
  1545 ;; Hardware stack levels used: 1
  1546 ;; Hardware stack levels required when called: 7
  1547 ;; This function calls:
  1548 ;;		_INTERRUPT_Initialize
  1549 ;;		_OSCILLATOR_Initialize
  1550 ;;		_PIN_MANAGER_Initialize
  1551 ;;		_PMD_Initialize
  1552 ;;		_PWM1_Initialize
  1553 ;;		_PWM3_Initialize
  1554 ;;		_PWM4_Initialize
  1555 ;;		_TMR0_Initialize
  1556 ;;		_TMR4_Initialize
  1557 ;; This function is called by:
  1558 ;;		_main
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           	psect	text12
  1563  000678                     __ptext12:
  1564                           	callstack 0
  1565  000678                     _SYSTEM_Initialize:
  1566                           	callstack 23
  1567  000678                     
  1568                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  1569  000678  ECDA  F003         	call	_INTERRUPT_Initialize	;wreg free
  1570  00067C                     
  1571                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  1572  00067C  EC70  F003         	call	_PMD_Initialize	;wreg free
  1573  000680                     
  1574                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1575  000680  ECE0  F001         	call	_PIN_MANAGER_Initialize	;wreg free
  1576  000684                     
  1577                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1578  000684  EC98  F003         	call	_OSCILLATOR_Initialize	;wreg free
  1579  000688                     
  1580                           ;mcc_generated_files/mcc.c: 56:     PWM1_Initialize();
  1581  000688  ECB8  F003         	call	_PWM1_Initialize	;wreg free
  1582  00068C                     
  1583                           ;mcc_generated_files/mcc.c: 57:     PWM4_Initialize();
  1584  00068C  ECA4  F003         	call	_PWM4_Initialize	;wreg free
  1585  000690                     
  1586                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  1587  000690  EC27  F003         	call	_TMR4_Initialize	;wreg free
  1588  000694                     
  1589                           ;mcc_generated_files/mcc.c: 59:     PWM3_Initialize();
  1590  000694  ECAE  F003         	call	_PWM3_Initialize	;wreg free
  1591  000698                     
  1592                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  1593  000698  EC79  F002         	call	_TMR0_Initialize	;wreg free
  1594  00069C  0012               	return		;funcret
  1595  00069E                     __end_of_SYSTEM_Initialize:
  1596                           	callstack 0
  1597                           
  1598 ;; *************** function _TMR4_Initialize *****************
  1599 ;; Defined at:
  1600 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;		None
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;		None
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  1    wreg      void 
  1607 ;; Registers used:
  1608 ;;		wreg, status,2, status,0, cstack
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1618 ;;Total ram usage:        0 bytes
  1619 ;; Hardware stack levels used: 1
  1620 ;; Hardware stack levels required when called: 6
  1621 ;; This function calls:
  1622 ;;		_TMR4_SetInterruptHandler
  1623 ;; This function is called by:
  1624 ;;		_SYSTEM_Initialize
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           	psect	text13
  1629  00064E                     __ptext13:
  1630                           	callstack 0
  1631  00064E                     _TMR4_Initialize:
  1632                           	callstack 23
  1633  00064E                     
  1634                           ;mcc_generated_files/tmr4.c: 69:     T4CLKCON = 0x01;
  1635  00064E  0E01               	movlw	1
  1636  000650  6EB8               	movwf	184,c	;volatile
  1637                           
  1638                           ;mcc_generated_files/tmr4.c: 72:     T4HLT = 0x20;
  1639  000652  0E20               	movlw	32
  1640  000654  6EB7               	movwf	183,c	;volatile
  1641                           
  1642                           ;mcc_generated_files/tmr4.c: 75:     T4RST = 0x00;
  1643  000656  0E00               	movlw	0
  1644  000658  6EB9               	movwf	185,c	;volatile
  1645  00065A                     
  1646                           ;mcc_generated_files/tmr4.c: 78:     T4PR = 0xFF;
  1647  00065A  68B5               	setf	181,c	;volatile
  1648                           
  1649                           ;mcc_generated_files/tmr4.c: 81:     T4TMR = 0x00;
  1650  00065C  0E00               	movlw	0
  1651  00065E  6EB4               	movwf	180,c	;volatile
  1652  000660                     
  1653                           ;mcc_generated_files/tmr4.c: 84:     PIR4bits.TMR4IF = 0;
  1654  000660  010E               	movlb	14	; () banked
  1655  000662  97C9               	bcf	201,3,b	;volatile
  1656  000664                     
  1657                           ; BSR set to: 14
  1658                           ;mcc_generated_files/tmr4.c: 87:     PIE4bits.TMR4IE = 1;
  1659  000664  87C1               	bsf	193,3,b	;volatile
  1660  000666                     
  1661                           ; BSR set to: 14
  1662                           ;mcc_generated_files/tmr4.c: 90:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  1663  000666  0EB8               	movlw	low _TMR4_DefaultInterruptHandler
  1664  000668  6E27               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1665  00066A  0E07               	movlw	high _TMR4_DefaultInterruptHandler
  1666  00066C  6E28               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1667  00066E  ECCB  F003         	call	_TMR4_SetInterruptHandler	;wreg free
  1668  000672                     
  1669                           ;mcc_generated_files/tmr4.c: 93:     T4CON = 0xF0;
  1670  000672  0EF0               	movlw	240
  1671  000674  6EB6               	movwf	182,c	;volatile
  1672  000676  0012               	return		;funcret
  1673  000678                     __end_of_TMR4_Initialize:
  1674                           	callstack 0
  1675                           
  1676 ;; *************** function _TMR4_SetInterruptHandler *****************
  1677 ;; Defined at:
  1678 ;;		line 178 in file "mcc_generated_files/tmr4.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  1681 ;;		 -> TMR4_DefaultInterruptHandler(1), 
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;		None
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  1    wreg      void 
  1686 ;; Registers used:
  1687 ;;		wreg, status,2, status,0
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1693 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1696 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1697 ;;Total ram usage:        2 bytes
  1698 ;; Hardware stack levels used: 1
  1699 ;; Hardware stack levels required when called: 5
  1700 ;; This function calls:
  1701 ;;		Nothing
  1702 ;; This function is called by:
  1703 ;;		_TMR4_Initialize
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           	psect	text14
  1708  000796                     __ptext14:
  1709                           	callstack 0
  1710  000796                     _TMR4_SetInterruptHandler:
  1711                           	callstack 23
  1712  000796                     
  1713                           ;mcc_generated_files/tmr4.c: 179:     TMR4_InterruptHandler = InterruptHandler;
  1714  000796  C027  F031         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
  1715  00079A  C028  F032         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
  1716  00079E  0012               	return		;funcret
  1717  0007A0                     __end_of_TMR4_SetInterruptHandler:
  1718                           	callstack 0
  1719                           
  1720 ;; *************** function _TMR0_Initialize *****************
  1721 ;; Defined at:
  1722 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;		None
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;		None
  1727 ;; Return value:  Size  Location     Type
  1728 ;;                  1    wreg      void 
  1729 ;; Registers used:
  1730 ;;		wreg, status,2, status,0, cstack
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1738 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1739 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1740 ;;Total ram usage:        2 bytes
  1741 ;; Hardware stack levels used: 1
  1742 ;; Hardware stack levels required when called: 6
  1743 ;; This function calls:
  1744 ;;		_TMR0_SetInterruptHandler
  1745 ;; This function is called by:
  1746 ;;		_SYSTEM_Initialize
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text15
  1751  0004F2                     __ptext15:
  1752                           	callstack 0
  1753  0004F2                     _TMR0_Initialize:
  1754                           	callstack 23
  1755  0004F2                     
  1756                           ;mcc_generated_files/tmr0.c: 71:     T0CON1 = 0x40;
  1757  0004F2  0E40               	movlw	64
  1758  0004F4  6ED5               	movwf	213,c	;volatile
  1759                           
  1760                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0xC1;
  1761  0004F6  0EC1               	movlw	193
  1762  0004F8  6ED3               	movwf	211,c	;volatile
  1763                           
  1764                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0x80;
  1765  0004FA  0E80               	movlw	128
  1766  0004FC  6ED2               	movwf	210,c	;volatile
  1767  0004FE                     
  1768                           ;mcc_generated_files/tmr0.c: 80:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  1769  0004FE  50D2               	movf	210,w,c	;volatile
  1770  000500  CFD3 F029          	movff	4051,??_TMR0_Initialize	;volatile
  1771  000504  6A2A               	clrf	(??_TMR0_Initialize+1)^0,c
  1772  000506  C029  F02A         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  1773  00050A  6A29               	clrf	??_TMR0_Initialize^0,c
  1774  00050C  1029               	iorwf	??_TMR0_Initialize^0,w,c
  1775  00050E  6E35               	movwf	_timer0ReloadVal16bit^0,c	;volatile
  1776  000510  502A               	movf	(??_TMR0_Initialize+1)^0,w,c
  1777  000512  6E36               	movwf	(_timer0ReloadVal16bit+1)^0,c	;volatile
  1778  000514                     
  1779                           ;mcc_generated_files/tmr0.c: 83:     PIR0bits.TMR0IF = 0;
  1780  000514  010E               	movlb	14	; () banked
  1781  000516  9BC5               	bcf	197,5,b	;volatile
  1782  000518                     
  1783                           ; BSR set to: 14
  1784                           ;mcc_generated_files/tmr0.c: 86:     PIE0bits.TMR0IE = 1;
  1785  000518  8BBD               	bsf	189,5,b	;volatile
  1786  00051A                     
  1787                           ; BSR set to: 14
  1788                           ;mcc_generated_files/tmr0.c: 89:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  1789  00051A  0EBA               	movlw	low _TMR0_DefaultInterruptHandler
  1790  00051C  6E27               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1791  00051E  0E07               	movlw	high _TMR0_DefaultInterruptHandler
  1792  000520  6E28               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1793  000522  ECD0  F003         	call	_TMR0_SetInterruptHandler	;wreg free
  1794  000526                     
  1795                           ;mcc_generated_files/tmr0.c: 92:     T0CON0 = 0x90;
  1796  000526  0E90               	movlw	144
  1797  000528  6ED4               	movwf	212,c	;volatile
  1798  00052A  0012               	return		;funcret
  1799  00052C                     __end_of_TMR0_Initialize:
  1800                           	callstack 0
  1801                           
  1802 ;; *************** function _TMR0_SetInterruptHandler *****************
  1803 ;; Defined at:
  1804 ;;		line 159 in file "mcc_generated_files/tmr0.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  1807 ;;		 -> msTick(1), TMR0_DefaultInterruptHandler(1), 
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;		None
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      void 
  1812 ;; Registers used:
  1813 ;;		wreg, status,2, status,0
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1819 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1822 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1823 ;;Total ram usage:        2 bytes
  1824 ;; Hardware stack levels used: 1
  1825 ;; Hardware stack levels required when called: 5
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		_TMR0_Initialize
  1830 ;;		_appInit
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           	psect	text16
  1835  0007A0                     __ptext16:
  1836                           	callstack 0
  1837  0007A0                     _TMR0_SetInterruptHandler:
  1838                           	callstack 24
  1839  0007A0                     
  1840                           ;mcc_generated_files/tmr0.c: 160:     TMR0_InterruptHandler = InterruptHandler;
  1841  0007A0  C027  F033         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1842  0007A4  C028  F034         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1843  0007A8  0012               	return		;funcret
  1844  0007AA                     __end_of_TMR0_SetInterruptHandler:
  1845                           	callstack 0
  1846                           
  1847 ;; *************** function _PWM4_Initialize *****************
  1848 ;; Defined at:
  1849 ;;		line 58 in file "mcc_generated_files/pwm4.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;		None
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;		None
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  1    wreg      void 
  1856 ;; Registers used:
  1857 ;;		wreg, status,2
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1867 ;;Total ram usage:        0 bytes
  1868 ;; Hardware stack levels used: 1
  1869 ;; Hardware stack levels required when called: 5
  1870 ;; This function calls:
  1871 ;;		Nothing
  1872 ;; This function is called by:
  1873 ;;		_SYSTEM_Initialize
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           	psect	text17
  1878  000748                     __ptext17:
  1879                           	callstack 0
  1880  000748                     _PWM4_Initialize:
  1881                           	callstack 24
  1882  000748                     
  1883                           ;mcc_generated_files/pwm4.c: 62:     PWM4CON = 0x80;
  1884  000748  0E80               	movlw	128
  1885  00074A  6EA1               	movwf	161,c	;volatile
  1886  00074C                     
  1887                           ;mcc_generated_files/pwm4.c: 65:     PWM4DCH = 0xFF;
  1888  00074C  68A0               	setf	160,c	;volatile
  1889                           
  1890                           ;mcc_generated_files/pwm4.c: 68:     PWM4DCL = 0xC0;
  1891  00074E  0EC0               	movlw	192
  1892  000750  6E9F               	movwf	159,c	;volatile
  1893                           
  1894                           ;mcc_generated_files/pwm4.c: 71:     CCPTMRSbits.P4TSEL = 2;
  1895  000752  50AD               	movf	173,w,c	;volatile
  1896  000754  0B3F               	andlw	-193
  1897  000756  0980               	iorlw	128
  1898  000758  6EAD               	movwf	173,c	;volatile
  1899  00075A  0012               	return		;funcret
  1900  00075C                     __end_of_PWM4_Initialize:
  1901                           	callstack 0
  1902                           
  1903 ;; *************** function _PWM3_Initialize *****************
  1904 ;; Defined at:
  1905 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;		None
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;		None
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  1    wreg      void 
  1912 ;; Registers used:
  1913 ;;		wreg, status,2
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1923 ;;Total ram usage:        0 bytes
  1924 ;; Hardware stack levels used: 1
  1925 ;; Hardware stack levels required when called: 5
  1926 ;; This function calls:
  1927 ;;		Nothing
  1928 ;; This function is called by:
  1929 ;;		_SYSTEM_Initialize
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           	psect	text18
  1934  00075C                     __ptext18:
  1935                           	callstack 0
  1936  00075C                     _PWM3_Initialize:
  1937                           	callstack 24
  1938  00075C                     
  1939                           ;mcc_generated_files/pwm3.c: 62:     PWM3CON = 0x80;
  1940  00075C  0E80               	movlw	128
  1941  00075E  6EA4               	movwf	164,c	;volatile
  1942  000760                     
  1943                           ;mcc_generated_files/pwm3.c: 65:     PWM3DCH = 0xFF;
  1944  000760  68A3               	setf	163,c	;volatile
  1945                           
  1946                           ;mcc_generated_files/pwm3.c: 68:     PWM3DCL = 0xC0;
  1947  000762  0EC0               	movlw	192
  1948  000764  6EA2               	movwf	162,c	;volatile
  1949                           
  1950                           ;mcc_generated_files/pwm3.c: 71:     CCPTMRSbits.P3TSEL = 2;
  1951  000766  50AD               	movf	173,w,c	;volatile
  1952  000768  0BCF               	andlw	-49
  1953  00076A  0920               	iorlw	32
  1954  00076C  6EAD               	movwf	173,c	;volatile
  1955  00076E  0012               	return		;funcret
  1956  000770                     __end_of_PWM3_Initialize:
  1957                           	callstack 0
  1958                           
  1959 ;; *************** function _PWM1_Initialize *****************
  1960 ;; Defined at:
  1961 ;;		line 64 in file "mcc_generated_files/pwm1.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;		None
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;		None
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      void 
  1968 ;; Registers used:
  1969 ;;		wreg, status,2
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1979 ;;Total ram usage:        0 bytes
  1980 ;; Hardware stack levels used: 1
  1981 ;; Hardware stack levels required when called: 5
  1982 ;; This function calls:
  1983 ;;		Nothing
  1984 ;; This function is called by:
  1985 ;;		_SYSTEM_Initialize
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text19
  1990  000770                     __ptext19:
  1991                           	callstack 0
  1992  000770                     _PWM1_Initialize:
  1993                           	callstack 24
  1994  000770                     
  1995                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8C;
  1996  000770  0E8C               	movlw	140
  1997  000772  6EAB               	movwf	171,c	;volatile
  1998                           
  1999                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x03;
  2000  000774  0E03               	movlw	3
  2001  000776  6EAA               	movwf	170,c	;volatile
  2002  000778                     
  2003                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0xFF;
  2004  000778  68A9               	setf	169,c	;volatile
  2005                           
  2006                           ;mcc_generated_files/pwm1.c: 78:  CCPTMRSbits.C1TSEL = 0x2;
  2007  00077A  50AD               	movf	173,w,c	;volatile
  2008  00077C  0BFC               	andlw	-4
  2009  00077E  0902               	iorlw	2
  2010  000780  6EAD               	movwf	173,c	;volatile
  2011  000782  0012               	return		;funcret
  2012  000784                     __end_of_PWM1_Initialize:
  2013                           	callstack 0
  2014                           
  2015 ;; *************** function _PMD_Initialize *****************
  2016 ;; Defined at:
  2017 ;;		line 77 in file "mcc_generated_files/mcc.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;		None
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;		None
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		wreg, status,2
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2035 ;;Total ram usage:        0 bytes
  2036 ;; Hardware stack levels used: 1
  2037 ;; Hardware stack levels required when called: 5
  2038 ;; This function calls:
  2039 ;;		Nothing
  2040 ;; This function is called by:
  2041 ;;		_SYSTEM_Initialize
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           	psect	text20
  2046  0006E0                     __ptext20:
  2047                           	callstack 0
  2048  0006E0                     _PMD_Initialize:
  2049                           	callstack 24
  2050  0006E0                     
  2051                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
  2052  0006E0  0E00               	movlw	0
  2053  0006E2  010E               	movlb	14	; () banked
  2054  0006E4  6FDC               	movwf	220,b	;volatile
  2055                           
  2056                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
  2057  0006E6  0E00               	movlw	0
  2058  0006E8  6FDD               	movwf	221,b	;volatile
  2059                           
  2060                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
  2061  0006EA  0E00               	movlw	0
  2062  0006EC  6FDE               	movwf	222,b	;volatile
  2063                           
  2064                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
  2065  0006EE  0E00               	movlw	0
  2066  0006F0  6FDF               	movwf	223,b	;volatile
  2067                           
  2068                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
  2069  0006F2  0E00               	movlw	0
  2070  0006F4  6FE0               	movwf	224,b	;volatile
  2071                           
  2072                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
  2073  0006F6  0E00               	movlw	0
  2074  0006F8  6FE1               	movwf	225,b	;volatile
  2075  0006FA                     
  2076                           ; BSR set to: 14
  2077  0006FA  0012               	return		;funcret
  2078  0006FC                     __end_of_PMD_Initialize:
  2079                           	callstack 0
  2080                           
  2081 ;; *************** function _PIN_MANAGER_Initialize *****************
  2082 ;; Defined at:
  2083 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;		None
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;		None
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  1    wreg      void 
  2090 ;; Registers used:
  2091 ;;		wreg, status,2
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2101 ;;Total ram usage:        0 bytes
  2102 ;; Hardware stack levels used: 1
  2103 ;; Hardware stack levels required when called: 5
  2104 ;; This function calls:
  2105 ;;		Nothing
  2106 ;; This function is called by:
  2107 ;;		_SYSTEM_Initialize
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           	psect	text21
  2112  0003C0                     __ptext21:
  2113                           	callstack 0
  2114  0003C0                     _PIN_MANAGER_Initialize:
  2115                           	callstack 24
  2116  0003C0                     
  2117                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2118  0003C0  0E00               	movlw	0
  2119  0003C2  6E82               	movwf	130,c	;volatile
  2120                           
  2121                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2122  0003C4  0E00               	movlw	0
  2123  0003C6  6E83               	movwf	131,c	;volatile
  2124                           
  2125                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x02;
  2126  0003C8  0E02               	movlw	2
  2127  0003CA  6E84               	movwf	132,c	;volatile
  2128  0003CC                     
  2129                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  2130  0003CC  6887               	setf	135,c	;volatile
  2131  0003CE                     
  2132                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  2133  0003CE  6888               	setf	136,c	;volatile
  2134                           
  2135                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xD5;
  2136  0003D0  0ED5               	movlw	213
  2137  0003D2  6E89               	movwf	137,c	;volatile
  2138  0003D4                     
  2139                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
  2140  0003D4  010F               	movlb	15	; () banked
  2141  0003D6  691C               	setf	28,b	;volatile
  2142  0003D8                     
  2143                           ; BSR set to: 15
  2144                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xFF;
  2145  0003D8  6914               	setf	20,b	;volatile
  2146                           
  2147                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xBF;
  2148  0003DA  0EBF               	movlw	191
  2149  0003DC  6F0C               	movwf	12,b	;volatile
  2150                           
  2151                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
  2152  0003DE  0E00               	movlw	0
  2153  0003E0  6F28               	movwf	40,b	;volatile
  2154                           
  2155                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
  2156  0003E2  0E00               	movlw	0
  2157  0003E4  6F13               	movwf	19,b	;volatile
  2158                           
  2159                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
  2160  0003E6  0E00               	movlw	0
  2161  0003E8  6F0B               	movwf	11,b	;volatile
  2162                           
  2163                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
  2164  0003EA  0E00               	movlw	0
  2165  0003EC  6F1B               	movwf	27,b	;volatile
  2166                           
  2167                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  2168  0003EE  0E00               	movlw	0
  2169  0003F0  6F0A               	movwf	10,b	;volatile
  2170                           
  2171                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  2172  0003F2  0E00               	movlw	0
  2173  0003F4  6F12               	movwf	18,b	;volatile
  2174                           
  2175                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
  2176  0003F6  0E00               	movlw	0
  2177  0003F8  6F1A               	movwf	26,b	;volatile
  2178  0003FA                     
  2179                           ; BSR set to: 15
  2180                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
  2181  0003FA  6909               	setf	9,b	;volatile
  2182  0003FC                     
  2183                           ; BSR set to: 15
  2184                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
  2185  0003FC  6911               	setf	17,b	;volatile
  2186  0003FE                     
  2187                           ; BSR set to: 15
  2188                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  2189  0003FE  6919               	setf	25,b	;volatile
  2190  000400                     
  2191                           ; BSR set to: 15
  2192                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0xFF;
  2193  000400  6908               	setf	8,b	;volatile
  2194  000402                     
  2195                           ; BSR set to: 15
  2196                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xFF;
  2197  000402  6910               	setf	16,b	;volatile
  2198  000404                     
  2199                           ; BSR set to: 15
  2200                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
  2201  000404  6918               	setf	24,b	;volatile
  2202                           
  2203                           ;mcc_generated_files/pin_manager.c: 106:     INLVLE = 0x08;
  2204  000406  0E08               	movlw	8
  2205  000408  6F25               	movwf	37,b	;volatile
  2206                           
  2207                           ;mcc_generated_files/pin_manager.c: 115:     RC3PPS = 0x07;
  2208  00040A  0E07               	movlw	7
  2209  00040C  010E               	movlb	14	; () banked
  2210  00040E  6FF5               	movwf	245,b	;volatile
  2211                           
  2212                           ;mcc_generated_files/pin_manager.c: 116:     RC1PPS = 0x05;
  2213  000410  0E05               	movlw	5
  2214  000412  6FF3               	movwf	243,b	;volatile
  2215                           
  2216                           ;mcc_generated_files/pin_manager.c: 117:     RC5PPS = 0x08;
  2217  000414  0E08               	movlw	8
  2218  000416  6FF7               	movwf	247,b	;volatile
  2219  000418                     
  2220                           ; BSR set to: 14
  2221  000418  0012               	return		;funcret
  2222  00041A                     __end_of_PIN_MANAGER_Initialize:
  2223                           	callstack 0
  2224                           
  2225 ;; *************** function _OSCILLATOR_Initialize *****************
  2226 ;; Defined at:
  2227 ;;		line 63 in file "mcc_generated_files/mcc.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;		None
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;		None
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  1    wreg      void 
  2234 ;; Registers used:
  2235 ;;		wreg, status,2
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2245 ;;Total ram usage:        0 bytes
  2246 ;; Hardware stack levels used: 1
  2247 ;; Hardware stack levels required when called: 5
  2248 ;; This function calls:
  2249 ;;		Nothing
  2250 ;; This function is called by:
  2251 ;;		_SYSTEM_Initialize
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           	psect	text22
  2256  000730                     __ptext22:
  2257                           	callstack 0
  2258  000730                     _OSCILLATOR_Initialize:
  2259                           	callstack 24
  2260  000730                     
  2261                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x60;
  2262  000730  0E60               	movlw	96
  2263  000732  010E               	movlb	14	; () banked
  2264  000734  6FD3               	movwf	211,b	;volatile
  2265                           
  2266                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
  2267  000736  0E00               	movlw	0
  2268  000738  6FD5               	movwf	213,b	;volatile
  2269                           
  2270                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
  2271  00073A  0E00               	movlw	0
  2272  00073C  6FD7               	movwf	215,b	;volatile
  2273                           
  2274                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x08;
  2275  00073E  0E08               	movlw	8
  2276  000740  6FD9               	movwf	217,b	;volatile
  2277                           
  2278                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  2279  000742  0E00               	movlw	0
  2280  000744  6FD8               	movwf	216,b	;volatile
  2281  000746                     
  2282                           ; BSR set to: 14
  2283  000746  0012               	return		;funcret
  2284  000748                     __end_of_OSCILLATOR_Initialize:
  2285                           	callstack 0
  2286                           
  2287 ;; *************** function _INTERRUPT_Initialize *****************
  2288 ;; Defined at:
  2289 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;		None
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;		None
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  1    wreg      void 
  2296 ;; Registers used:
  2297 ;;		None
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2307 ;;Total ram usage:        0 bytes
  2308 ;; Hardware stack levels used: 1
  2309 ;; Hardware stack levels required when called: 5
  2310 ;; This function calls:
  2311 ;;		Nothing
  2312 ;; This function is called by:
  2313 ;;		_SYSTEM_Initialize
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           	psect	text23
  2318  0007B4                     __ptext23:
  2319                           	callstack 0
  2320  0007B4                     _INTERRUPT_Initialize:
  2321                           	callstack 24
  2322  0007B4                     
  2323                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  2324  0007B4  9AF2               	bcf	242,5,c	;volatile
  2325  0007B6  0012               	return		;funcret
  2326  0007B8                     __end_of_INTERRUPT_Initialize:
  2327                           	callstack 0
  2328                           
  2329 ;; *************** function _INTERRUPT_InterruptManager *****************
  2330 ;; Defined at:
  2331 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;		None
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;		None
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      void 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2347 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2348 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2349 ;;Total ram usage:        2 bytes
  2350 ;; Hardware stack levels used: 1
  2351 ;; Hardware stack levels required when called: 4
  2352 ;; This function calls:
  2353 ;;		_TMR0_ISR
  2354 ;;		_TMR4_ISR
  2355 ;; This function is called by:
  2356 ;;		Interrupt level 2
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           	psect	intcode
  2361  000008                     __pintcode:
  2362                           	callstack 0
  2363  000008                     _INTERRUPT_InterruptManager:
  2364                           	callstack 23
  2365                           
  2366                           ;incstack = 0
  2367  000008  8237               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2368  00000A  CFFA F025          	movff	pclath,??_INTERRUPT_InterruptManager
  2369  00000E  CFFB F026          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2370  000012                     
  2371                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
  2372  000012  010E               	movlb	14	; () banked
  2373  000014  ABBD               	btfss	189,5,b	;volatile
  2374  000016  EF0F  F000         	goto	i2u28_41
  2375  00001A  EF11  F000         	goto	i2u28_40
  2376  00001E                     i2u28_41:
  2377  00001E  EF1C  F000         	goto	i2l129
  2378  000022                     i2u28_40:
  2379  000022                     
  2380                           ; BSR set to: 14
  2381  000022  ABC5               	btfss	197,5,b	;volatile
  2382  000024  EF16  F000         	goto	i2u29_41
  2383  000028  EF18  F000         	goto	i2u29_40
  2384  00002C                     i2u29_41:
  2385  00002C  EF1C  F000         	goto	i2l129
  2386  000030                     i2u29_40:
  2387  000030                     
  2388                           ; BSR set to: 14
  2389                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  2390  000030  ECC2  F003         	call	_TMR0_ISR	;wreg free
  2391                           
  2392                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  2393  000034  EF35  F000         	goto	i2l135
  2394  000038                     i2l129:
  2395                           
  2396                           ; BSR set to: 14
  2397  000038  ACF2               	btfss	242,6,c	;volatile
  2398  00003A  EF21  F000         	goto	i2u30_41
  2399  00003E  EF23  F000         	goto	i2u30_40
  2400  000042                     i2u30_41:
  2401  000042  EF35  F000         	goto	i2l135
  2402  000046                     i2u30_40:
  2403  000046                     
  2404                           ; BSR set to: 14
  2405                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE4bits.TMR4IE == 1 && PIR4bits.TMR4IF == 1)
  2406  000046  A7C1               	btfss	193,3,b	;volatile
  2407  000048  EF28  F000         	goto	i2u31_41
  2408  00004C  EF2A  F000         	goto	i2u31_40
  2409  000050                     i2u31_41:
  2410  000050  EF35  F000         	goto	i2l134
  2411  000054                     i2u31_40:
  2412  000054                     
  2413                           ; BSR set to: 14
  2414  000054  A7C9               	btfss	201,3,b	;volatile
  2415  000056  EF2F  F000         	goto	i2u32_41
  2416  00005A  EF31  F000         	goto	i2u32_40
  2417  00005E                     i2u32_41:
  2418  00005E  EF35  F000         	goto	i2l134
  2419  000062                     i2u32_40:
  2420  000062                     
  2421                           ; BSR set to: 14
  2422                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             TMR4_ISR();
  2423  000062  ECCA  F002         	call	_TMR4_ISR	;wreg free
  2424                           
  2425                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  2426  000066  EF35  F000         	goto	i2l135
  2427  00006A                     i2l134:
  2428  00006A                     i2l135:
  2429  00006A  C026  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2430  00006E  C025  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2431  000072  9237               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2432  000074  0011               	retfie		f
  2433  000076                     __end_of_INTERRUPT_InterruptManager:
  2434                           	callstack 0
  2435                           
  2436 ;; *************** function _TMR4_ISR *****************
  2437 ;; Defined at:
  2438 ;;		line 165 in file "mcc_generated_files/tmr4.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;		None
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;		None
  2443 ;; Return value:  Size  Location     Type
  2444 ;;                  1    wreg      void 
  2445 ;; Registers used:
  2446 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2456 ;;Total ram usage:        0 bytes
  2457 ;; Hardware stack levels used: 1
  2458 ;; Hardware stack levels required when called: 1
  2459 ;; This function calls:
  2460 ;;		Absolute function
  2461 ;;		_TMR4_DefaultInterruptHandler
  2462 ;; This function is called by:
  2463 ;;		_INTERRUPT_InterruptManager
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           	psect	text25
  2468  000594                     __ptext25:
  2469                           	callstack 0
  2470  000594                     _TMR4_ISR:
  2471                           	callstack 25
  2472  000594                     
  2473                           ;mcc_generated_files/tmr4.c: 169:     PIR4bits.TMR4IF = 0;
  2474  000594  010E               	movlb	14	; () banked
  2475  000596  97C9               	bcf	201,3,b	;volatile
  2476  000598                     
  2477                           ; BSR set to: 14
  2478                           ;mcc_generated_files/tmr4.c: 171:     if(TMR4_InterruptHandler)
  2479  000598  5031               	movf	_TMR4_InterruptHandler^0,w,c
  2480  00059A  1032               	iorwf	(_TMR4_InterruptHandler+1)^0,w,c
  2481  00059C  B4D8               	btfsc	status,2,c
  2482  00059E  EFD3  F002         	goto	i2u16_41
  2483  0005A2  EFD5  F002         	goto	i2u16_40
  2484  0005A6                     i2u16_41:
  2485  0005A6  EFE2  F002         	goto	i2l314
  2486  0005AA                     i2u16_40:
  2487  0005AA                     
  2488                           ; BSR set to: 14
  2489                           ;mcc_generated_files/tmr4.c: 172:     {;mcc_generated_files/tmr4.c: 173:         TMR4_In
      +                          terruptHandler();
  2490  0005AA  D802               	call	i2u17_48
  2491  0005AC  EFE2  F002         	goto	i2u17_49
  2492  0005B0                     i2u17_48:
  2493  0005B0  0005               	push	
  2494  0005B2  6EFA               	movwf	pclath,c
  2495  0005B4  5031               	movf	_TMR4_InterruptHandler^0,w,c
  2496  0005B6  6EFD               	movwf	tosl,c
  2497  0005B8  5032               	movf	(_TMR4_InterruptHandler+1)^0,w,c
  2498  0005BA  6EFE               	movwf	tosh,c
  2499  0005BC  50F8               	movf	tblptru,w,c
  2500  0005BE  6EFF               	movwf	tosu,c
  2501  0005C0  50FA               	movf	pclath,w,c
  2502  0005C2  0012               	return		;indir
  2503  0005C4                     i2u17_49:
  2504  0005C4                     i2l314:
  2505  0005C4  0012               	return		;funcret
  2506  0005C6                     __end_of_TMR4_ISR:
  2507                           	callstack 0
  2508                           
  2509 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  2510 ;; Defined at:
  2511 ;;		line 182 in file "mcc_generated_files/tmr4.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;		None
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;		None
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  1    wreg      void 
  2518 ;; Registers used:
  2519 ;;		None
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2529 ;;Total ram usage:        0 bytes
  2530 ;; Hardware stack levels used: 1
  2531 ;; This function calls:
  2532 ;;		Nothing
  2533 ;; This function is called by:
  2534 ;;		_TMR4_Initialize
  2535 ;;		_TMR4_ISR
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           	psect	text26
  2540  0007B8                     __ptext26:
  2541                           	callstack 0
  2542  0007B8                     _TMR4_DefaultInterruptHandler:
  2543                           	callstack 25
  2544  0007B8  0012               	return		;funcret
  2545  0007BA                     __end_of_TMR4_DefaultInterruptHandler:
  2546                           	callstack 0
  2547                           
  2548 ;; *************** function _TMR0_ISR *****************
  2549 ;; Defined at:
  2550 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;		None
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;		None
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  1    wreg      void 
  2557 ;; Registers used:
  2558 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2568 ;;Total ram usage:        0 bytes
  2569 ;; Hardware stack levels used: 1
  2570 ;; Hardware stack levels required when called: 3
  2571 ;; This function calls:
  2572 ;;		_TMR0_CallBack
  2573 ;; This function is called by:
  2574 ;;		_INTERRUPT_InterruptManager
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           	psect	text27
  2579  000784                     __ptext27:
  2580                           	callstack 0
  2581  000784                     _TMR0_ISR:
  2582                           	callstack 23
  2583  000784                     
  2584                           ;mcc_generated_files/tmr0.c: 137:     PIR0bits.TMR0IF = 0;
  2585  000784  010E               	movlb	14	; () banked
  2586  000786  9BC5               	bcf	197,5,b	;volatile
  2587  000788                     
  2588                           ; BSR set to: 14
  2589                           ;mcc_generated_files/tmr0.c: 139:     TMR0H = timer0ReloadVal16bit >> 8;
  2590  000788  5036               	movf	(_timer0ReloadVal16bit+1)^0,w,c	;volatile
  2591  00078A  6ED3               	movwf	211,c	;volatile
  2592  00078C                     
  2593                           ; BSR set to: 14
  2594                           ;mcc_generated_files/tmr0.c: 140:     TMR0L = (uint8_t) timer0ReloadVal16bit;
  2595  00078C  C035  FFD2         	movff	_timer0ReloadVal16bit,4050	;volatile
  2596  000790                     
  2597                           ; BSR set to: 14
  2598                           ;mcc_generated_files/tmr0.c: 144:     TMR0_CallBack();
  2599  000790  ECFA  F002         	call	_TMR0_CallBack	;wreg free
  2600  000794  0012               	return		;funcret
  2601  000796                     __end_of_TMR0_ISR:
  2602                           	callstack 0
  2603                           
  2604 ;; *************** function _TMR0_CallBack *****************
  2605 ;; Defined at:
  2606 ;;		line 149 in file "mcc_generated_files/tmr0.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;		None
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;		None
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  1    wreg      void 
  2613 ;; Registers used:
  2614 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2624 ;;Total ram usage:        0 bytes
  2625 ;; Hardware stack levels used: 1
  2626 ;; Hardware stack levels required when called: 2
  2627 ;; This function calls:
  2628 ;;		Absolute function
  2629 ;;		_TMR0_DefaultInterruptHandler
  2630 ;;		_msTick
  2631 ;; This function is called by:
  2632 ;;		_TMR0_ISR
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           	psect	text28
  2637  0005F4                     __ptext28:
  2638                           	callstack 0
  2639  0005F4                     _TMR0_CallBack:
  2640                           	callstack 23
  2641  0005F4                     
  2642                           ;mcc_generated_files/tmr0.c: 153:     if(TMR0_InterruptHandler)
  2643  0005F4  5033               	movf	_TMR0_InterruptHandler^0,w,c
  2644  0005F6  1034               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  2645  0005F8  B4D8               	btfsc	status,2,c
  2646  0005FA  EF01  F003         	goto	i2u5_41
  2647  0005FE  EF03  F003         	goto	i2u5_40
  2648  000602                     i2u5_41:
  2649  000602  EF10  F003         	goto	i2l184
  2650  000606                     i2u5_40:
  2651  000606                     
  2652                           ;mcc_generated_files/tmr0.c: 154:     {;mcc_generated_files/tmr0.c: 155:         TMR0_In
      +                          terruptHandler();
  2653  000606  D802               	call	i2u6_48
  2654  000608  EF10  F003         	goto	i2u6_49
  2655  00060C                     i2u6_48:
  2656  00060C  0005               	push	
  2657  00060E  6EFA               	movwf	pclath,c
  2658  000610  5033               	movf	_TMR0_InterruptHandler^0,w,c
  2659  000612  6EFD               	movwf	tosl,c
  2660  000614  5034               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  2661  000616  6EFE               	movwf	tosh,c
  2662  000618  50F8               	movf	tblptru,w,c
  2663  00061A  6EFF               	movwf	tosu,c
  2664  00061C  50FA               	movf	pclath,w,c
  2665  00061E  0012               	return		;indir
  2666  000620                     i2u6_49:
  2667  000620                     i2l184:
  2668  000620  0012               	return		;funcret
  2669  000622                     __end_of_TMR0_CallBack:
  2670                           	callstack 0
  2671                           
  2672 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  2673 ;; Defined at:
  2674 ;;		line 163 in file "mcc_generated_files/tmr0.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;		None
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;		None
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      void 
  2681 ;; Registers used:
  2682 ;;		None
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2692 ;;Total ram usage:        0 bytes
  2693 ;; Hardware stack levels used: 1
  2694 ;; This function calls:
  2695 ;;		Nothing
  2696 ;; This function is called by:
  2697 ;;		_TMR0_Initialize
  2698 ;;		_TMR0_CallBack
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           	psect	text29
  2703  0007BA                     __ptext29:
  2704                           	callstack 0
  2705  0007BA                     _TMR0_DefaultInterruptHandler:
  2706                           	callstack 24
  2707  0007BA  0012               	return		;funcret
  2708  0007BC                     __end_of_TMR0_DefaultInterruptHandler:
  2709                           	callstack 0
  2710                           
  2711 ;; *************** function _msTick *****************
  2712 ;; Defined at:
  2713 ;;		line 148 in file "app.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;		None
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;		None
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  1    wreg      void 
  2720 ;; Registers used:
  2721 ;;		wreg, status,2, status,0, cstack
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2731 ;;Total ram usage:        0 bytes
  2732 ;; Hardware stack levels used: 1
  2733 ;; Hardware stack levels required when called: 1
  2734 ;; This function calls:
  2735 ;;		_rgbButtonTick
  2736 ;; This function is called by:
  2737 ;;		_appInit
  2738 ;;		_TMR0_CallBack
  2739 ;; This function uses a non-reentrant model
  2740 ;;
  2741                           
  2742                           	psect	text30
  2743  000716                     __ptext30:
  2744                           	callstack 0
  2745  000716                     _msTick:
  2746                           	callstack 23
  2747  000716                     
  2748                           ;app.c: 149:     rgbButtonTick();
  2749  000716  EC4F  F003         	call	_rgbButtonTick	;wreg free
  2750  00071A                     
  2751                           ;app.c: 150:     msTicks++;
  2752  00071A  0E01               	movlw	1
  2753  00071C  2613               	addwf	_msTicks^0,f,c
  2754  00071E  0E00               	movlw	0
  2755  000720  2214               	addwfc	(_msTicks+1)^0,f,c
  2756  000722  2215               	addwfc	(_msTicks+2)^0,f,c
  2757  000724  2216               	addwfc	(_msTicks+3)^0,f,c
  2758  000726  2217               	addwfc	(_msTicks+4)^0,f,c
  2759  000728  2218               	addwfc	(_msTicks+5)^0,f,c
  2760  00072A  2219               	addwfc	(_msTicks+6)^0,f,c
  2761  00072C  221A               	addwfc	(_msTicks+7)^0,f,c
  2762  00072E  0012               	return		;funcret
  2763  000730                     __end_of_msTick:
  2764                           	callstack 0
  2765                           
  2766 ;; *************** function _rgbButtonTick *****************
  2767 ;; Defined at:
  2768 ;;		line 60 in file "rgbButton.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;		None
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;		None
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  1    wreg      void 
  2775 ;; Registers used:
  2776 ;;		wreg, status,2, status,0
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2786 ;;Total ram usage:        0 bytes
  2787 ;; Hardware stack levels used: 1
  2788 ;; This function calls:
  2789 ;;		Nothing
  2790 ;; This function is called by:
  2791 ;;		_msTick
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           	psect	text31
  2796  00069E                     __ptext31:
  2797                           	callstack 0
  2798  00069E                     _rgbButtonTick:
  2799                           	callstack 23
  2800  00069E                     
  2801                           ;rgbButton.c: 61:     cButton.ticks.colorRefreshTicks++;
  2802  00069E  0E01               	movlw	1
  2803  0006A0  260C               	addwf	(_cButton+11)^0,f,c
  2804  0006A2  0E00               	movlw	0
  2805  0006A4  220D               	addwfc	(_cButton+12)^0,f,c
  2806  0006A6  220E               	addwfc	(_cButton+13)^0,f,c
  2807  0006A8  220F               	addwfc	(_cButton+14)^0,f,c
  2808                           
  2809                           ;rgbButton.c: 62:     cButton.ticks.buttonPressedTicks++;
  2810  0006AA  0E01               	movlw	1
  2811  0006AC  2604               	addwf	(_cButton+3)^0,f,c
  2812  0006AE  0E00               	movlw	0
  2813  0006B0  2205               	addwfc	(_cButton+4)^0,f,c
  2814  0006B2  2206               	addwfc	(_cButton+5)^0,f,c
  2815  0006B4  2207               	addwfc	(_cButton+6)^0,f,c
  2816                           
  2817                           ;rgbButton.c: 63:     cButton.ticks.debounceTicks++;
  2818  0006B6  0E01               	movlw	1
  2819  0006B8  2608               	addwf	(_cButton+7)^0,f,c
  2820  0006BA  0E00               	movlw	0
  2821  0006BC  2209               	addwfc	(_cButton+8)^0,f,c
  2822  0006BE  220A               	addwfc	(_cButton+9)^0,f,c
  2823  0006C0  220B               	addwfc	(_cButton+10)^0,f,c
  2824  0006C2  0012               	return		;funcret
  2825  0006C4                     __end_of_rgbButtonTick:
  2826                           	callstack 0
  2827  0000                     
  2828                           	psect	text32
  2829  000000                     __ptext32:
  2830                           	callstack 0
  2831  000000                     
  2832                           	psect	rparam
  2833  0000                     
  2834                           	psect	temp
  2835  000037                     btemp:
  2836                           	callstack 0
  2837  000037                     	ds	1
  2838  0000                     int$flags	set	btemp
  2839  0000                     wtemp8	set	btemp+1
  2840  0000                     ttemp5	set	btemp+1
  2841  0000                     ttemp6	set	btemp+4
  2842  0000                     ttemp7	set	btemp+8
  2843                           
  2844                           	psect	idloc
  2845                           
  2846                           ;Config register IDLOC0 @ 0x200000
  2847                           ;	unspecified, using default values
  2848  200000                     	org	2097152
  2849  200000  FFFF               	dw	65535
  2850                           
  2851                           ;Config register IDLOC1 @ 0x200002
  2852                           ;	unspecified, using default values
  2853  200002                     	org	2097154
  2854  200002  FFFF               	dw	65535
  2855                           
  2856                           ;Config register IDLOC2 @ 0x200004
  2857                           ;	unspecified, using default values
  2858  200004                     	org	2097156
  2859  200004  FFFF               	dw	65535
  2860                           
  2861                           ;Config register IDLOC3 @ 0x200006
  2862                           ;	unspecified, using default values
  2863  200006                     	org	2097158
  2864  200006  FFFF               	dw	65535
  2865                           
  2866                           ;Config register IDLOC4 @ 0x200008
  2867                           ;	unspecified, using default values
  2868  200008                     	org	2097160
  2869  200008  FFFF               	dw	65535
  2870                           
  2871                           ;Config register IDLOC5 @ 0x20000A
  2872                           ;	unspecified, using default values
  2873  20000A                     	org	2097162
  2874  20000A  FFFF               	dw	65535
  2875                           
  2876                           ;Config register IDLOC6 @ 0x20000C
  2877                           ;	unspecified, using default values
  2878  20000C                     	org	2097164
  2879  20000C  FFFF               	dw	65535
  2880                           
  2881                           ;Config register IDLOC7 @ 0x20000E
  2882                           ;	unspecified, using default values
  2883  20000E                     	org	2097166
  2884  20000E  FFFF               	dw	65535
  2885                           
  2886                           ;Config register IDLOC8 @ 0x200010
  2887                           ;	unspecified, using default values
  2888  200010                     	org	2097168
  2889  200010  FFFF               	dw	65535
  2890                           
  2891                           ;Config register IDLOC9 @ 0x200012
  2892                           ;	unspecified, using default values
  2893  200012                     	org	2097170
  2894  200012  FFFF               	dw	65535
  2895                           
  2896                           ;Config register IDLOC10 @ 0x200014
  2897                           ;	unspecified, using default values
  2898  200014                     	org	2097172
  2899  200014  FFFF               	dw	65535
  2900                           
  2901                           ;Config register IDLOC11 @ 0x200016
  2902                           ;	unspecified, using default values
  2903  200016                     	org	2097174
  2904  200016  FFFF               	dw	65535
  2905                           
  2906                           ;Config register IDLOC12 @ 0x200018
  2907                           ;	unspecified, using default values
  2908  200018                     	org	2097176
  2909  200018  FFFF               	dw	65535
  2910                           
  2911                           ;Config register IDLOC13 @ 0x20001A
  2912                           ;	unspecified, using default values
  2913  20001A                     	org	2097178
  2914  20001A  FFFF               	dw	65535
  2915                           
  2916                           ;Config register IDLOC14 @ 0x20001C
  2917                           ;	unspecified, using default values
  2918  20001C                     	org	2097180
  2919  20001C  FFFF               	dw	65535
  2920                           
  2921                           ;Config register IDLOC15 @ 0x20001E
  2922                           ;	unspecified, using default values
  2923  20001E                     	org	2097182
  2924  20001E  FFFF               	dw	65535
  2925                           
  2926                           ;Config register IDLOC16 @ 0x200020
  2927                           ;	unspecified, using default values
  2928  200020                     	org	2097184
  2929  200020  FFFF               	dw	65535
  2930                           
  2931                           ;Config register IDLOC17 @ 0x200022
  2932                           ;	unspecified, using default values
  2933  200022                     	org	2097186
  2934  200022  FFFF               	dw	65535
  2935                           
  2936                           ;Config register IDLOC18 @ 0x200024
  2937                           ;	unspecified, using default values
  2938  200024                     	org	2097188
  2939  200024  FFFF               	dw	65535
  2940                           
  2941                           ;Config register IDLOC19 @ 0x200026
  2942                           ;	unspecified, using default values
  2943  200026                     	org	2097190
  2944  200026  FFFF               	dw	65535
  2945                           
  2946                           ;Config register IDLOC20 @ 0x200028
  2947                           ;	unspecified, using default values
  2948  200028                     	org	2097192
  2949  200028  FFFF               	dw	65535
  2950                           
  2951                           ;Config register IDLOC21 @ 0x20002A
  2952                           ;	unspecified, using default values
  2953  20002A                     	org	2097194
  2954  20002A  FFFF               	dw	65535
  2955                           
  2956                           ;Config register IDLOC22 @ 0x20002C
  2957                           ;	unspecified, using default values
  2958  20002C                     	org	2097196
  2959  20002C  FFFF               	dw	65535
  2960                           
  2961                           ;Config register IDLOC23 @ 0x20002E
  2962                           ;	unspecified, using default values
  2963  20002E                     	org	2097198
  2964  20002E  FFFF               	dw	65535
  2965                           
  2966                           ;Config register IDLOC24 @ 0x200030
  2967                           ;	unspecified, using default values
  2968  200030                     	org	2097200
  2969  200030  FFFF               	dw	65535
  2970                           
  2971                           ;Config register IDLOC25 @ 0x200032
  2972                           ;	unspecified, using default values
  2973  200032                     	org	2097202
  2974  200032  FFFF               	dw	65535
  2975                           
  2976                           ;Config register IDLOC26 @ 0x200034
  2977                           ;	unspecified, using default values
  2978  200034                     	org	2097204
  2979  200034  FFFF               	dw	65535
  2980                           
  2981                           ;Config register IDLOC27 @ 0x200036
  2982                           ;	unspecified, using default values
  2983  200036                     	org	2097206
  2984  200036  FFFF               	dw	65535
  2985                           
  2986                           ;Config register IDLOC28 @ 0x200038
  2987                           ;	unspecified, using default values
  2988  200038                     	org	2097208
  2989  200038  FFFF               	dw	65535
  2990                           
  2991                           ;Config register IDLOC29 @ 0x20003A
  2992                           ;	unspecified, using default values
  2993  20003A                     	org	2097210
  2994  20003A  FFFF               	dw	65535
  2995                           
  2996                           ;Config register IDLOC30 @ 0x20003C
  2997                           ;	unspecified, using default values
  2998  20003C                     	org	2097212
  2999  20003C  FFFF               	dw	65535
  3000                           
  3001                           ;Config register IDLOC31 @ 0x20003E
  3002                           ;	unspecified, using default values
  3003  20003E                     	org	2097214
  3004  20003E  FFFF               	dw	65535
  3005                           
  3006                           ;Config register IDLOC32 @ 0x200040
  3007                           ;	unspecified, using default values
  3008  200040                     	org	2097216
  3009  200040  FFFF               	dw	65535
  3010                           
  3011                           ;Config register IDLOC33 @ 0x200042
  3012                           ;	unspecified, using default values
  3013  200042                     	org	2097218
  3014  200042  FFFF               	dw	65535
  3015                           
  3016                           ;Config register IDLOC34 @ 0x200044
  3017                           ;	unspecified, using default values
  3018  200044                     	org	2097220
  3019  200044  FFFF               	dw	65535
  3020                           
  3021                           ;Config register IDLOC35 @ 0x200046
  3022                           ;	unspecified, using default values
  3023  200046                     	org	2097222
  3024  200046  FFFF               	dw	65535
  3025                           
  3026                           ;Config register IDLOC36 @ 0x200048
  3027                           ;	unspecified, using default values
  3028  200048                     	org	2097224
  3029  200048  FFFF               	dw	65535
  3030                           
  3031                           ;Config register IDLOC37 @ 0x20004A
  3032                           ;	unspecified, using default values
  3033  20004A                     	org	2097226
  3034  20004A  FFFF               	dw	65535
  3035                           
  3036                           ;Config register IDLOC38 @ 0x20004C
  3037                           ;	unspecified, using default values
  3038  20004C                     	org	2097228
  3039  20004C  FFFF               	dw	65535
  3040                           
  3041                           ;Config register IDLOC39 @ 0x20004E
  3042                           ;	unspecified, using default values
  3043  20004E                     	org	2097230
  3044  20004E  FFFF               	dw	65535
  3045                           
  3046                           ;Config register IDLOC40 @ 0x200050
  3047                           ;	unspecified, using default values
  3048  200050                     	org	2097232
  3049  200050  FFFF               	dw	65535
  3050                           
  3051                           ;Config register IDLOC41 @ 0x200052
  3052                           ;	unspecified, using default values
  3053  200052                     	org	2097234
  3054  200052  FFFF               	dw	65535
  3055                           
  3056                           ;Config register IDLOC42 @ 0x200054
  3057                           ;	unspecified, using default values
  3058  200054                     	org	2097236
  3059  200054  FFFF               	dw	65535
  3060                           
  3061                           ;Config register IDLOC43 @ 0x200056
  3062                           ;	unspecified, using default values
  3063  200056                     	org	2097238
  3064  200056  FFFF               	dw	65535
  3065                           
  3066                           ;Config register IDLOC44 @ 0x200058
  3067                           ;	unspecified, using default values
  3068  200058                     	org	2097240
  3069  200058  FFFF               	dw	65535
  3070                           
  3071                           ;Config register IDLOC45 @ 0x20005A
  3072                           ;	unspecified, using default values
  3073  20005A                     	org	2097242
  3074  20005A  FFFF               	dw	65535
  3075                           
  3076                           ;Config register IDLOC46 @ 0x20005C
  3077                           ;	unspecified, using default values
  3078  20005C                     	org	2097244
  3079  20005C  FFFF               	dw	65535
  3080                           
  3081                           ;Config register IDLOC47 @ 0x20005E
  3082                           ;	unspecified, using default values
  3083  20005E                     	org	2097246
  3084  20005E  FFFF               	dw	65535
  3085                           
  3086                           ;Config register IDLOC48 @ 0x200060
  3087                           ;	unspecified, using default values
  3088  200060                     	org	2097248
  3089  200060  FFFF               	dw	65535
  3090                           
  3091                           ;Config register IDLOC49 @ 0x200062
  3092                           ;	unspecified, using default values
  3093  200062                     	org	2097250
  3094  200062  FFFF               	dw	65535
  3095                           
  3096                           ;Config register IDLOC50 @ 0x200064
  3097                           ;	unspecified, using default values
  3098  200064                     	org	2097252
  3099  200064  FFFF               	dw	65535
  3100                           
  3101                           ;Config register IDLOC51 @ 0x200066
  3102                           ;	unspecified, using default values
  3103  200066                     	org	2097254
  3104  200066  FFFF               	dw	65535
  3105                           
  3106                           ;Config register IDLOC52 @ 0x200068
  3107                           ;	unspecified, using default values
  3108  200068                     	org	2097256
  3109  200068  FFFF               	dw	65535
  3110                           
  3111                           ;Config register IDLOC53 @ 0x20006A
  3112                           ;	unspecified, using default values
  3113  20006A                     	org	2097258
  3114  20006A  FFFF               	dw	65535
  3115                           
  3116                           ;Config register IDLOC54 @ 0x20006C
  3117                           ;	unspecified, using default values
  3118  20006C                     	org	2097260
  3119  20006C  FFFF               	dw	65535
  3120                           
  3121                           ;Config register IDLOC55 @ 0x20006E
  3122                           ;	unspecified, using default values
  3123  20006E                     	org	2097262
  3124  20006E  FFFF               	dw	65535
  3125                           
  3126                           ;Config register IDLOC56 @ 0x200070
  3127                           ;	unspecified, using default values
  3128  200070                     	org	2097264
  3129  200070  FFFF               	dw	65535
  3130                           
  3131                           ;Config register IDLOC57 @ 0x200072
  3132                           ;	unspecified, using default values
  3133  200072                     	org	2097266
  3134  200072  FFFF               	dw	65535
  3135                           
  3136                           ;Config register IDLOC58 @ 0x200074
  3137                           ;	unspecified, using default values
  3138  200074                     	org	2097268
  3139  200074  FFFF               	dw	65535
  3140                           
  3141                           ;Config register IDLOC59 @ 0x200076
  3142                           ;	unspecified, using default values
  3143  200076                     	org	2097270
  3144  200076  FFFF               	dw	65535
  3145                           
  3146                           ;Config register IDLOC60 @ 0x200078
  3147                           ;	unspecified, using default values
  3148  200078                     	org	2097272
  3149  200078  FFFF               	dw	65535
  3150                           
  3151                           ;Config register IDLOC61 @ 0x20007A
  3152                           ;	unspecified, using default values
  3153  20007A                     	org	2097274
  3154  20007A  FFFF               	dw	65535
  3155                           
  3156                           ;Config register IDLOC62 @ 0x20007C
  3157                           ;	unspecified, using default values
  3158  20007C                     	org	2097276
  3159  20007C  FFFF               	dw	65535
  3160                           
  3161                           ;Config register IDLOC63 @ 0x20007E
  3162                           ;	unspecified, using default values
  3163  20007E                     	org	2097278
  3164  20007E  FFFF               	dw	65535
  3165                           
  3166                           ;Config register IDLOC64 @ 0x200080
  3167                           ;	unspecified, using default values
  3168  200080                     	org	2097280
  3169  200080  FFFF               	dw	65535
  3170                           
  3171                           ;Config register IDLOC65 @ 0x200082
  3172                           ;	unspecified, using default values
  3173  200082                     	org	2097282
  3174  200082  FFFF               	dw	65535
  3175                           
  3176                           ;Config register IDLOC66 @ 0x200084
  3177                           ;	unspecified, using default values
  3178  200084                     	org	2097284
  3179  200084  FFFF               	dw	65535
  3180                           
  3181                           ;Config register IDLOC67 @ 0x200086
  3182                           ;	unspecified, using default values
  3183  200086                     	org	2097286
  3184  200086  FFFF               	dw	65535
  3185                           
  3186                           ;Config register IDLOC68 @ 0x200088
  3187                           ;	unspecified, using default values
  3188  200088                     	org	2097288
  3189  200088  FFFF               	dw	65535
  3190                           
  3191                           ;Config register IDLOC69 @ 0x20008A
  3192                           ;	unspecified, using default values
  3193  20008A                     	org	2097290
  3194  20008A  FFFF               	dw	65535
  3195                           
  3196                           ;Config register IDLOC70 @ 0x20008C
  3197                           ;	unspecified, using default values
  3198  20008C                     	org	2097292
  3199  20008C  FFFF               	dw	65535
  3200                           
  3201                           ;Config register IDLOC71 @ 0x20008E
  3202                           ;	unspecified, using default values
  3203  20008E                     	org	2097294
  3204  20008E  FFFF               	dw	65535
  3205                           
  3206                           ;Config register IDLOC72 @ 0x200090
  3207                           ;	unspecified, using default values
  3208  200090                     	org	2097296
  3209  200090  FFFF               	dw	65535
  3210                           
  3211                           ;Config register IDLOC73 @ 0x200092
  3212                           ;	unspecified, using default values
  3213  200092                     	org	2097298
  3214  200092  FFFF               	dw	65535
  3215                           
  3216                           ;Config register IDLOC74 @ 0x200094
  3217                           ;	unspecified, using default values
  3218  200094                     	org	2097300
  3219  200094  FFFF               	dw	65535
  3220                           
  3221                           ;Config register IDLOC75 @ 0x200096
  3222                           ;	unspecified, using default values
  3223  200096                     	org	2097302
  3224  200096  FFFF               	dw	65535
  3225                           
  3226                           ;Config register IDLOC76 @ 0x200098
  3227                           ;	unspecified, using default values
  3228  200098                     	org	2097304
  3229  200098  FFFF               	dw	65535
  3230                           
  3231                           ;Config register IDLOC77 @ 0x20009A
  3232                           ;	unspecified, using default values
  3233  20009A                     	org	2097306
  3234  20009A  FFFF               	dw	65535
  3235                           
  3236                           ;Config register IDLOC78 @ 0x20009C
  3237                           ;	unspecified, using default values
  3238  20009C                     	org	2097308
  3239  20009C  FFFF               	dw	65535
  3240                           
  3241                           ;Config register IDLOC79 @ 0x20009E
  3242                           ;	unspecified, using default values
  3243  20009E                     	org	2097310
  3244  20009E  FFFF               	dw	65535
  3245                           
  3246                           ;Config register IDLOC80 @ 0x2000A0
  3247                           ;	unspecified, using default values
  3248  2000A0                     	org	2097312
  3249  2000A0  FFFF               	dw	65535
  3250                           
  3251                           ;Config register IDLOC81 @ 0x2000A2
  3252                           ;	unspecified, using default values
  3253  2000A2                     	org	2097314
  3254  2000A2  FFFF               	dw	65535
  3255                           
  3256                           ;Config register IDLOC82 @ 0x2000A4
  3257                           ;	unspecified, using default values
  3258  2000A4                     	org	2097316
  3259  2000A4  FFFF               	dw	65535
  3260                           
  3261                           ;Config register IDLOC83 @ 0x2000A6
  3262                           ;	unspecified, using default values
  3263  2000A6                     	org	2097318
  3264  2000A6  FFFF               	dw	65535
  3265                           
  3266                           ;Config register IDLOC84 @ 0x2000A8
  3267                           ;	unspecified, using default values
  3268  2000A8                     	org	2097320
  3269  2000A8  FFFF               	dw	65535
  3270                           
  3271                           ;Config register IDLOC85 @ 0x2000AA
  3272                           ;	unspecified, using default values
  3273  2000AA                     	org	2097322
  3274  2000AA  FFFF               	dw	65535
  3275                           
  3276                           ;Config register IDLOC86 @ 0x2000AC
  3277                           ;	unspecified, using default values
  3278  2000AC                     	org	2097324
  3279  2000AC  FFFF               	dw	65535
  3280                           
  3281                           ;Config register IDLOC87 @ 0x2000AE
  3282                           ;	unspecified, using default values
  3283  2000AE                     	org	2097326
  3284  2000AE  FFFF               	dw	65535
  3285                           
  3286                           ;Config register IDLOC88 @ 0x2000B0
  3287                           ;	unspecified, using default values
  3288  2000B0                     	org	2097328
  3289  2000B0  FFFF               	dw	65535
  3290                           
  3291                           ;Config register IDLOC89 @ 0x2000B2
  3292                           ;	unspecified, using default values
  3293  2000B2                     	org	2097330
  3294  2000B2  FFFF               	dw	65535
  3295                           
  3296                           ;Config register IDLOC90 @ 0x2000B4
  3297                           ;	unspecified, using default values
  3298  2000B4                     	org	2097332
  3299  2000B4  FFFF               	dw	65535
  3300                           
  3301                           ;Config register IDLOC91 @ 0x2000B6
  3302                           ;	unspecified, using default values
  3303  2000B6                     	org	2097334
  3304  2000B6  FFFF               	dw	65535
  3305                           
  3306                           ;Config register IDLOC92 @ 0x2000B8
  3307                           ;	unspecified, using default values
  3308  2000B8                     	org	2097336
  3309  2000B8  FFFF               	dw	65535
  3310                           
  3311                           ;Config register IDLOC93 @ 0x2000BA
  3312                           ;	unspecified, using default values
  3313  2000BA                     	org	2097338
  3314  2000BA  FFFF               	dw	65535
  3315                           
  3316                           ;Config register IDLOC94 @ 0x2000BC
  3317                           ;	unspecified, using default values
  3318  2000BC                     	org	2097340
  3319  2000BC  FFFF               	dw	65535
  3320                           
  3321                           ;Config register IDLOC95 @ 0x2000BE
  3322                           ;	unspecified, using default values
  3323  2000BE                     	org	2097342
  3324  2000BE  FFFF               	dw	65535
  3325                           
  3326                           ;Config register IDLOC96 @ 0x2000C0
  3327                           ;	unspecified, using default values
  3328  2000C0                     	org	2097344
  3329  2000C0  FFFF               	dw	65535
  3330                           
  3331                           ;Config register IDLOC97 @ 0x2000C2
  3332                           ;	unspecified, using default values
  3333  2000C2                     	org	2097346
  3334  2000C2  FFFF               	dw	65535
  3335                           
  3336                           ;Config register IDLOC98 @ 0x2000C4
  3337                           ;	unspecified, using default values
  3338  2000C4                     	org	2097348
  3339  2000C4  FFFF               	dw	65535
  3340                           
  3341                           ;Config register IDLOC99 @ 0x2000C6
  3342                           ;	unspecified, using default values
  3343  2000C6                     	org	2097350
  3344  2000C6  FFFF               	dw	65535
  3345                           
  3346                           ;Config register IDLOC100 @ 0x2000C8
  3347                           ;	unspecified, using default values
  3348  2000C8                     	org	2097352
  3349  2000C8  FFFF               	dw	65535
  3350                           
  3351                           ;Config register IDLOC101 @ 0x2000CA
  3352                           ;	unspecified, using default values
  3353  2000CA                     	org	2097354
  3354  2000CA  FFFF               	dw	65535
  3355                           
  3356                           ;Config register IDLOC102 @ 0x2000CC
  3357                           ;	unspecified, using default values
  3358  2000CC                     	org	2097356
  3359  2000CC  FFFF               	dw	65535
  3360                           
  3361                           ;Config register IDLOC103 @ 0x2000CE
  3362                           ;	unspecified, using default values
  3363  2000CE                     	org	2097358
  3364  2000CE  FFFF               	dw	65535
  3365                           
  3366                           ;Config register IDLOC104 @ 0x2000D0
  3367                           ;	unspecified, using default values
  3368  2000D0                     	org	2097360
  3369  2000D0  FFFF               	dw	65535
  3370                           
  3371                           ;Config register IDLOC105 @ 0x2000D2
  3372                           ;	unspecified, using default values
  3373  2000D2                     	org	2097362
  3374  2000D2  FFFF               	dw	65535
  3375                           
  3376                           ;Config register IDLOC106 @ 0x2000D4
  3377                           ;	unspecified, using default values
  3378  2000D4                     	org	2097364
  3379  2000D4  FFFF               	dw	65535
  3380                           
  3381                           ;Config register IDLOC107 @ 0x2000D6
  3382                           ;	unspecified, using default values
  3383  2000D6                     	org	2097366
  3384  2000D6  FFFF               	dw	65535
  3385                           
  3386                           ;Config register IDLOC108 @ 0x2000D8
  3387                           ;	unspecified, using default values
  3388  2000D8                     	org	2097368
  3389  2000D8  FFFF               	dw	65535
  3390                           
  3391                           ;Config register IDLOC109 @ 0x2000DA
  3392                           ;	unspecified, using default values
  3393  2000DA                     	org	2097370
  3394  2000DA  FFFF               	dw	65535
  3395                           
  3396                           ;Config register IDLOC110 @ 0x2000DC
  3397                           ;	unspecified, using default values
  3398  2000DC                     	org	2097372
  3399  2000DC  FFFF               	dw	65535
  3400                           
  3401                           ;Config register IDLOC111 @ 0x2000DE
  3402                           ;	unspecified, using default values
  3403  2000DE                     	org	2097374
  3404  2000DE  FFFF               	dw	65535
  3405                           
  3406                           ;Config register IDLOC112 @ 0x2000E0
  3407                           ;	unspecified, using default values
  3408  2000E0                     	org	2097376
  3409  2000E0  FFFF               	dw	65535
  3410                           
  3411                           ;Config register IDLOC113 @ 0x2000E2
  3412                           ;	unspecified, using default values
  3413  2000E2                     	org	2097378
  3414  2000E2  FFFF               	dw	65535
  3415                           
  3416                           ;Config register IDLOC114 @ 0x2000E4
  3417                           ;	unspecified, using default values
  3418  2000E4                     	org	2097380
  3419  2000E4  FFFF               	dw	65535
  3420                           
  3421                           ;Config register IDLOC115 @ 0x2000E6
  3422                           ;	unspecified, using default values
  3423  2000E6                     	org	2097382
  3424  2000E6  FFFF               	dw	65535
  3425                           
  3426                           ;Config register IDLOC116 @ 0x2000E8
  3427                           ;	unspecified, using default values
  3428  2000E8                     	org	2097384
  3429  2000E8  FFFF               	dw	65535
  3430                           
  3431                           ;Config register IDLOC117 @ 0x2000EA
  3432                           ;	unspecified, using default values
  3433  2000EA                     	org	2097386
  3434  2000EA  FFFF               	dw	65535
  3435                           
  3436                           ;Config register IDLOC118 @ 0x2000EC
  3437                           ;	unspecified, using default values
  3438  2000EC                     	org	2097388
  3439  2000EC  FFFF               	dw	65535
  3440                           
  3441                           ;Config register IDLOC119 @ 0x2000EE
  3442                           ;	unspecified, using default values
  3443  2000EE                     	org	2097390
  3444  2000EE  FFFF               	dw	65535
  3445                           
  3446                           ;Config register IDLOC120 @ 0x2000F0
  3447                           ;	unspecified, using default values
  3448  2000F0                     	org	2097392
  3449  2000F0  FFFF               	dw	65535
  3450                           
  3451                           ;Config register IDLOC121 @ 0x2000F2
  3452                           ;	unspecified, using default values
  3453  2000F2                     	org	2097394
  3454  2000F2  FFFF               	dw	65535
  3455                           
  3456                           ;Config register IDLOC122 @ 0x2000F4
  3457                           ;	unspecified, using default values
  3458  2000F4                     	org	2097396
  3459  2000F4  FFFF               	dw	65535
  3460                           
  3461                           ;Config register IDLOC123 @ 0x2000F6
  3462                           ;	unspecified, using default values
  3463  2000F6                     	org	2097398
  3464  2000F6  FFFF               	dw	65535
  3465                           
  3466                           ;Config register IDLOC124 @ 0x2000F8
  3467                           ;	unspecified, using default values
  3468  2000F8                     	org	2097400
  3469  2000F8  FFFF               	dw	65535
  3470                           
  3471                           ;Config register IDLOC125 @ 0x2000FA
  3472                           ;	unspecified, using default values
  3473  2000FA                     	org	2097402
  3474  2000FA  FFFF               	dw	65535
  3475                           
  3476                           ;Config register IDLOC126 @ 0x2000FC
  3477                           ;	unspecified, using default values
  3478  2000FC                     	org	2097404
  3479  2000FC  FFFF               	dw	65535
  3480                           
  3481                           ;Config register IDLOC127 @ 0x2000FE
  3482                           ;	unspecified, using default values
  3483  2000FE                     	org	2097406
  3484  2000FE  FFFF               	dw	65535
  3485                           
  3486                           	psect	config
  3487                           
  3488                           ;Config register CONFIG1L @ 0x300000
  3489                           ;	External Oscillator mode Selection bits
  3490                           ;	FEXTOSC = OFF, Oscillator not enabled
  3491                           ;	Power-up default value for COSC bits
  3492                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  3493  300000                     	org	3145728
  3494  300000  8C                 	db	140
  3495                           
  3496                           ;Config register CONFIG1H @ 0x300001
  3497                           ;	Clock Out Enable bit
  3498                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3499                           ;	Clock Switch Enable bit
  3500                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3501                           ;	Fail-Safe Clock Monitor Enable bit
  3502                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3503  300001                     	org	3145729
  3504  300001  FF                 	db	255
  3505                           
  3506                           ;Config register CONFIG2L @ 0x300002
  3507                           ;	Master Clear Enable bit
  3508                           ;	MCLRE = EXTMCLR, MCLR pin (RE3) is MCLR
  3509                           ;	Power-up Timer Enable bit
  3510                           ;	PWRTE = OFF, Power up timer disabled
  3511                           ;	Low-power BOR enable bit
  3512                           ;	LPBOREN = OFF, Low power BOR is disabled
  3513                           ;	Brown-out Reset Enable bits
  3514                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  3515  300002                     	org	3145730
  3516  300002  FF                 	db	255
  3517                           
  3518                           ;Config register CONFIG2H @ 0x300003
  3519                           ;	Brown Out Reset Voltage selection bits
  3520                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
  3521                           ;	ZCD Disable bit
  3522                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  3523                           ;	PPSLOCK bit One-Way Set Enable bit
  3524                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  3525                           ;	Stack Full/Underflow Reset Enable bit
  3526                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3527                           ;	Extended Instruction Set Enable bit
  3528                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3529  300003                     	org	3145731
  3530  300003  FF                 	db	255
  3531                           
  3532                           ;Config register CONFIG3L @ 0x300004
  3533                           ;	WDT Period Select bits
  3534                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3535                           ;	WDT operating mode
  3536                           ;	WDTE = OFF, WDT Disabled
  3537  300004                     	org	3145732
  3538  300004  9F                 	db	159
  3539                           
  3540                           ;Config register CONFIG3H @ 0x300005
  3541                           ;	WDT Window Select bits
  3542                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3543                           ;	WDT input clock selector
  3544                           ;	WDTCCS = SC, Software Control
  3545  300005                     	org	3145733
  3546  300005  FF                 	db	255
  3547                           
  3548                           ;Config register CONFIG4L @ 0x300006
  3549                           ;	Write Protection Block 0
  3550                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3551                           ;	Write Protection Block 1
  3552                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3553                           ;	Write Protection Block 2
  3554                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3555                           ;	Write Protection Block 3
  3556                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3557  300006                     	org	3145734
  3558  300006  FF                 	db	255
  3559                           
  3560                           ;Config register CONFIG4H @ 0x300007
  3561                           ;	Configuration Register Write Protection bit
  3562                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  3563                           ;	Boot Block Write Protection bit
  3564                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3565                           ;	Data EEPROM Write Protection bit
  3566                           ;	WRTD = OFF, Data EEPROM not write-protected
  3567                           ;	Scanner Enable bit
  3568                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  3569                           ;	Low Voltage Programming Enable bit
  3570                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  3571  300007                     	org	3145735
  3572  300007  FF                 	db	255
  3573                           
  3574                           ;Config register CONFIG5L @ 0x300008
  3575                           ;	UserNVM Program Memory Code Protection bit
  3576                           ;	CP = OFF, UserNVM code protection disabled
  3577                           ;	DataNVM Memory Code Protection bit
  3578                           ;	CPD = OFF, DataNVM code protection disabled
  3579  300008                     	org	3145736
  3580  300008  FF                 	db	255
  3581                           
  3582                           ;Config register CONFIG5H @ 0x300009
  3583                           ;	unspecified, using default values
  3584  300009                     	org	3145737
  3585  300009  FF                 	db	255
  3586                           
  3587                           ;Config register CONFIG6L @ 0x30000A
  3588                           ;	Table Read Protection Block 0
  3589                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3590                           ;	Table Read Protection Block 1
  3591                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3592                           ;	Table Read Protection Block 2
  3593                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3594                           ;	Table Read Protection Block 3
  3595                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3596  30000A                     	org	3145738
  3597  30000A  FF                 	db	255
  3598                           
  3599                           ;Config register CONFIG6H @ 0x30000B
  3600                           ;	Boot Block Table Read Protection bit
  3601                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3602  30000B                     	org	3145739
  3603  30000B  FF                 	db	255
  3604                           tosu	equ	0xFFF
  3605                           tosh	equ	0xFFE
  3606                           tosl	equ	0xFFD
  3607                           stkptr	equ	0xFFC
  3608                           pclatu	equ	0xFFB
  3609                           pclath	equ	0xFFA
  3610                           pcl	equ	0xFF9
  3611                           tblptru	equ	0xFF8
  3612                           tblptrh	equ	0xFF7
  3613                           tblptrl	equ	0xFF6
  3614                           tablat	equ	0xFF5
  3615                           prodh	equ	0xFF4
  3616                           prodl	equ	0xFF3
  3617                           indf0	equ	0xFEF
  3618                           postinc0	equ	0xFEE
  3619                           postdec0	equ	0xFED
  3620                           preinc0	equ	0xFEC
  3621                           plusw0	equ	0xFEB
  3622                           fsr0h	equ	0xFEA
  3623                           fsr0l	equ	0xFE9
  3624                           wreg	equ	0xFE8
  3625                           indf1	equ	0xFE7
  3626                           postinc1	equ	0xFE6
  3627                           postdec1	equ	0xFE5
  3628                           preinc1	equ	0xFE4
  3629                           plusw1	equ	0xFE3
  3630                           fsr1h	equ	0xFE2
  3631                           fsr1l	equ	0xFE1
  3632                           bsr	equ	0xFE0
  3633                           indf2	equ	0xFDF
  3634                           postinc2	equ	0xFDE
  3635                           postdec2	equ	0xFDD
  3636                           preinc2	equ	0xFDC
  3637                           plusw2	equ	0xFDB
  3638                           fsr2h	equ	0xFDA
  3639                           fsr2l	equ	0xFD9
  3640                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         36
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     12      54
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           31      0       0

Pointer List with Targets:

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> msTick(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> msTick(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_appHandler
    _appInit->_PWM3_LoadDutyValue
    _appInit->_PWM4_LoadDutyValue
    _appHandler->_setGreen
    _appHandler->_setRed
    _setRed->_PWM3_LoadDutyValue
    _setGreen->_PWM4_LoadDutyValue
    _setBlue->_PWM1_LoadDutyValue
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2602
                  _SYSTEM_Initialize
                    _TMR4_StartTimer
                         _appHandler
                            _appInit
 ---------------------------------------------------------------------------------
 (1) _appInit                                              0     0      0    1036
                 _PWM1_LoadDutyValue
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _appHandler                                           2     2      0    1294
                                             10 COMRAM     2     2      0
                   _rgbButtonHandler
                            _setBlue
                           _setGreen
                             _setRed
 ---------------------------------------------------------------------------------
 (2) _setRed                                               4     2      2     416
                                              6 COMRAM     4     2      2
                 _PWM3_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM3_LoadDutyValue                                   4     2      2     272
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _setGreen                                             4     2      2     416
                                              6 COMRAM     4     2      2
                 _PWM4_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM4_LoadDutyValue                                   4     2      2     272
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _setBlue                                              4     2      2     462
                                              4 COMRAM     4     2      2
                 _PWM1_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM1_LoadDutyValue                                   2     0      2     318
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _rgbButtonHandler                                     2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _TMR4_StartTimer                                      0     0      0       0
                         _TMR4_Start
 ---------------------------------------------------------------------------------
 (2) _TMR4_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     272
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR0_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0      98
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR4_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                              4 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     174
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0       0
                                              0 COMRAM     2     2      0
                           _TMR0_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR4_ISR                                             0     0      0       0
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                             _msTick *
 ---------------------------------------------------------------------------------
 (7) _msTick                                               0     0      0       0
                      _rgbButtonTick
 ---------------------------------------------------------------------------------
 (8) _rgbButtonTick                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM1_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
   _TMR4_StartTimer
     _TMR4_Start
   _appHandler
     _rgbButtonHandler
     _setBlue
       _PWM1_LoadDutyValue
     _setGreen
       _PWM4_LoadDutyValue
     _setRed
       _PWM3_LoadDutyValue
   _appInit
     _PWM1_LoadDutyValue
     _PWM3_LoadDutyValue
     _PWM4_LoadDutyValue
     _TMR0_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _msTick *
         _rgbButtonTick
   _TMR4_ISR
     Absolute function(Fake) *
     _TMR4_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E1E      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      C      36       1       57.4%
BITBANK14           1F      0       0      33        0.0%
BANK14              1F      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      36       6        0.0%
DATA                 0      0      36       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Dec 27 15:12:31 2021

                                      l55 0418                                        u70 0304  
                                      u71 0300                                        u80 032A  
                                      u81 0326                                        u90 034E  
                                      u91 0348                                       l101 069C  
                                     l104 0746                                       l107 06FA  
                                     l203 0782                                       l124 07B6  
                                     l222 076E                                       l208 05F2  
                                     l400 0460                                       l225 055E  
                                     l162 052A                                       l236 075A  
                                     l404 04A8                                       l317 079E  
                                     l239 0592                                       l408 04F0  
                                     l274 0676                                       l187 07A8  
                                     l283 07B2                                       l363 064C  
                                     l429 03BE                                       l286 07AE  
                                     l393 02E8                                       u100 0350  
                                     u110 0384                                       u111 0380  
                                     u120 03A2                                       u121 039E  
                                     u400 00A0                                       u401 009C  
                                     u330 05DC                                       u331 05D8  
                                     u411 00A6                                       u420 00DC  
                                     u421 00D8                                       u430 0112  
                                     u431 010E                                       u440 014A  
                                     _PR4 000FB5                                       u345 05DE  
                                     u441 0146                                       u370 0472  
                                     u450 0180                                       u371 046E  
                                     u355 0550                                       u451 017C  
                                     u380 042A                                       u460 01B8  
                                     u365 0584                                       u381 0426  
                                     u461 01B4                                       u390 04BA  
                                     u470 01EE                                       u391 04B6  
                                     u471 01EA                                       u480 0226  
                                     u481 0222                                       u490 025C  
                                     u491 0258                   __size_of_PMD_Initialize 001C  
                         _PWM4_Initialize 0748                                       tosl 000FFD  
                                     wreg 000FE8                                      l1220 0304  
                                    l1150 03CC                                      l1230 0370  
                                    l1222 0314                                      l1160 03FC  
                                    l1152 03CE                                      l1216 07B0  
                                    l1240 03BA                                      l1232 0384  
                                    l1224 032A                                      l1170 07B4  
                                    l1162 03FE                                      l1154 03D4  
                                    l1234 038C                                      l1226 033A  
                                    l1218 02EA                                      l1164 0400  
                                    l1156 03D8                                      l1148 03C0  
                                    l1172 06E0                                      l1180 0748  
                                    l1236 0390                                      l1228 033E  
                                    l1500 05EE                                      l1174 0730  
                                    l1166 0402                                      l1158 03FA  
                                    l1182 074C                                      l1510 0796  
                                    l1238 03A2                                      l1168 0404  
                                    l1176 0770                                      l1520 0666  
                                    l1512 064E                                      l1600 0112  
                                    l1178 0778                                      l1530 0518  
                                    l1522 0672                                      l1514 065A  
                                    l1506 052C                                      l1610 0156  
                                    l1602 011E                                      l1196 075C  
                                    l1532 051A                                      l1524 04F2  
                                    l1516 0660                                      l1508 0560  
                                    l1540 0478                                      l1620 0194  
                                    l1612 015E                                      l1604 0126  
                                    l1198 0760                                      l1534 0526  
                                    l1526 04FE                                      l1518 0664  
                                    l1542 049C                                      l1550 0454  
                                    l1630 01D4                                      l1622 019C  
                                    l1614 0166                                      l1606 012E  
                                    l1528 0514                                      l1560 0678  
                                    l1552 04AA                                      l1536 0462  
                                    l1544 041A                                      l1640 025C  
                                    l1632 01EE                                      l1624 01B8  
                                    l1616 0180                                      l1608 014A  
                                    l1490 07A0                                      l1570 068C  
                                    l1562 067C                                      l1298 07AA  
                                    l1554 04BA                                      l1538 0472  
                                    l1546 042A                                      l1634 01FA  
                                    l1626 01C4                                      l1618 018C  
                                    l1572 0690                                      l1564 0680  
                                    l1492 05C6                                      l1556 04C0  
                                    l1548 0430                                      l1636 0226  
                                    l1628 01CC                                      l1644 0268  
                                    l1580 007A                                      l1660 06D2  
                                    l1652 06C4                                      l1574 0694  
                                    l1566 0684                                      l1494 05CE  
                                    l1558 04E4                                      l1638 0232  
                                    l1646 02C4                                      l1590 00C0  
                                    l1582 007E                                      l1662 06D4  
                                    l1654 06C8                                      l1576 0698  
                                    l1568 0688                                      l1496 05DC  
                                    l1592 00DC                                      l1584 00A0  
                                    l1656 06CC                                      l1498 05EA  
                                    l1594 00E8                                      l1586 00B0  
                                    l1578 0622                                      l1658 06D0  
                                    l1596 00F0                                      l1588 00B8  
                                    l1598 00F8                                      l1698 027E  
                 __end_of_PWM1_Initialize 0784                                      _LATA 000F82  
                                    _LATB 000F83                                      _LATC 000F84  
                                    _T4PR 000FB5                                      _PMD0 000EDC  
                                    _PMD1 000EDD                                      _PMD2 000EDE  
                                    _PMD3 000EDF                                      _PMD4 000EE0  
                                    _PMD5 000EE1                                      _TMR4 000FB4  
                                    _WPUA 000F0B                                      _WPUB 000F13  
                                    _WPUC 000F1B                                      _WPUE 000F28  
                                    _main 06C4                                      btemp 0037  
                                    start 0076                ??_TMR4_SetInterruptHandler 0029  
                            ___param_bank 000000                   __end_of_TMR0_Initialize 052C  
          ??_TMR0_DefaultInterruptHandler 0025            __size_of_OSCILLATOR_Initialize 0018  
           __end_of_OSCILLATOR_Initialize 0748                                     ?_main 0025  
                                   _T4CON 000FB6                                     _T4HLT 000FB7  
                                   _T4TMR 000FB4                                     i2l134 006A  
                                   i2l135 006A                                     i2l320 07B8  
                                   i2l129 0038                                     i2l314 05C4  
                                   _T4RST 000FB9                                     i2l180 0794  
                                   i2l190 07BA                                     i2l432 06C2  
                                   i2l184 0620                                     i2l396 072E  
                                   _OSCEN 000ED7                        _PWM4_LoadDutyValue 0560  
                                   _TMR0H 000FD3                                     _TMR0L 000FD2  
                                   _TRISA 000F87                                     _TRISB 000F88  
                                   _TRISC 000F89         __size_of_TMR0_SetInterruptHandler 000A  
                         __end_of_appInit 064E                           _TMR4_Initialize 064E  
               ?_TMR0_SetInterruptHandler 0027                          __end_of_TMR0_ISR 0796  
                        _rgbButtonHandler 02EA                          __end_of_TMR4_ISR 05C6  
                             ?_TMR4_Start 0025                       ?_PWM4_LoadDutyValue 0027  
                         __end_of_setBlue 04F2                   __end_of_PWM3_Initialize 0770  
                                   pclath 000FFA                                     ttemp5 0038  
                                   ttemp6 003B                                     ttemp7 003F  
                                   status 000FD8                                     wtemp8 0038  
                         __initialization 06FC                              __end_of_main 06E0  
                    ??_PWM4_LoadDutyValue 0029                   __end_of_PWM4_Initialize 075C  
             ?_INTERRUPT_InterruptManager 0025                                    ??_main 0031  
                           __activetblptr 000002                    __size_of_rgbButtonTick 0026  
                                  _CCPR1H 000FAA                                    _CCPR1L 000FA9  
                                  _ANSELA 000F0C                                    _ANSELB 000F14  
                                  _ANSELC 000F1C                                    _T0CON0 000FD4  
                                  _T0CON1 000FD5                                    _RC1PPS 000EF3  
                                  _RC3PPS 000EF5                          ?_PWM1_Initialize 0025  
                                  _RC5PPS 000EF7                                    _ODCONA 000F0A  
                                  _ODCONB 000F12                                    _ODCONC 000F1A  
                                  i2l1120 069E                                    i2l1212 05F4  
                                  i2l1214 0606                                    i2l1144 0716  
                                  i2l1146 071A                                    i2l1290 0790  
                                  i2l1284 0784                                    i2l1292 0594  
                                  i2l1286 0788                                    i2l1294 0598  
                                  i2l1390 0030                                    i2l1288 078C  
                                  i2l1296 05AA                                    i2l1392 0046  
                                  i2l1394 0054                                    i2l1386 0012  
                                  i2l1396 0062                                    i2l1388 0022  
                                  _INLVLA 000F08                                    _INLVLB 000F10  
                                  _INLVLC 000F18                                    _INLVLE 000F25  
                                  _OSCFRQ 000ED9                                    i2u5_40 0606  
                                  i2u5_41 0602                                    i2u6_48 060C  
                                  i2u6_49 0620                           _TMR4_StartTimer 07AA  
             __size_of_PWM3_LoadDutyValue 0034                       __size_of_TMR4_Start 0004  
                                  _msTick 0716                          ?_TMR0_Initialize 0025  
                 __end_of_TMR4_Initialize 0678                                    clear_0 0702  
                                  _setRed 041A                                 ??_appInit 002B  
                                  isa$std 000001                          __end_of_setGreen 04AA  
    __end_of_TMR4_DefaultInterruptHandler 07BA     __size_of_TMR4_DefaultInterruptHandler 0002  
            _TMR4_DefaultInterruptHandler 07B8                            _PMD_Initialize 06E0  
                               ??_setBlue 002B                                    tblptru 000FF8  
                   __end_of_TMR0_CallBack 0622  TMR4_SetInterruptHandler@InterruptHandler 0027  
TMR0_SetInterruptHandler@InterruptHandler 0027             __size_of_INTERRUPT_Initialize 0004  
                        ?_PWM3_Initialize 0025                         _SYSTEM_Initialize 0678  
                              __accesstop 0060                   __end_of__initialization 0708  
                      ?_SYSTEM_Initialize 0025                             ___rparam_used 000001  
             PWM1_LoadDutyValue@dutyValue 0027                             _rgbButtonTick 069E  
                          __pcstackCOMRAM 0025                       ??_SYSTEM_Initialize 002B  
                               ?_TMR0_ISR 0025                                 ?_TMR4_ISR 0025  
                      _PWM1_LoadDutyValue 05C6                          ?_PWM4_Initialize 0025  
                  __end_of_PMD_Initialize 06FC               PWM4_LoadDutyValue@dutyValue 0027  
                     ?_PWM1_LoadDutyValue 0027           fp__TMR4_DefaultInterruptHandler 0000  
           ?_TMR4_DefaultInterruptHandler 0025                   __end_of_TMR4_StartTimer 07B0  
               __end_of_SYSTEM_Initialize 069E                                __pnvCOMRAM 0031  
                              _appHandler 007A                     _TMR4_InterruptHandler 0031  
                          ?_rgbButtonTick 0025                      ??_PWM1_LoadDutyValue 0029  
                __end_of_rgbButtonHandler 03C0          __end_of_TMR0_SetInterruptHandler 07AA  
                              ??_TMR0_ISR 0025                                ??_TMR4_ISR 0025  
                             setRed@value 002B                                   _CCP1CON 000FAB  
                                 ?_msTick 0025                                   ?_setRed 002B  
                        ?_TMR4_Initialize 0025                        appHandler@redValue 0021  
                         ?_PMD_Initialize 0025                             setGreen@value 002B  
                                 _OSCCON1 000ED3                                   _OSCCON3 000ED5  
                                 i2u30_40 0046                                   i2u30_41 0042  
                                 i2u31_40 0054                                   i2u31_41 0050  
                                 i2u16_40 05AA                                   i2u32_40 0062  
                                 i2u16_41 05A6                                   i2u32_41 005E  
                                 i2u17_48 05B0                                   i2u17_49 05C4  
                                 i2u28_40 0022                                   i2u28_41 001E  
                                 i2u29_40 0030                                   i2u29_41 002C  
                                 _OSCTUNE 000ED8                                   _PWM3DCH 000FA3  
                                 _PWM3DCL 000FA2                                   _PWM4DCH 000FA0  
                                 _PWM4DCL 000F9F                                   _PWM3CON 000FA4  
                                 _PWM4CON 000FA1                                   _SLRCONA 000F09  
                                 _SLRCONB 000F11                                   _SLRCONC 000F19  
                            ??_TMR4_Start 0027                      appHandler@greenValue 0023  
                               ?_setGreen 002B                                   __Hparam 0000  
                                 __Lparam 0000                                   _cButton 0001  
                                 __pcinit 06FC                           __size_of_msTick 001A  
                      __end_of_TMR4_Start 07B4                                   _appInit 0622  
                                 __ramtop 0F00                           __size_of_setRed 0048  
                                 __ptext0 06C4                                   __ptext1 0622  
                                 __ptext2 007A                                   __ptext3 041A  
                                 __ptext4 052C                                   __ptext5 0462  
                                 __ptext6 0560                                   __ptext7 04AA  
                                 __ptext8 05C6                                   __ptext9 02EA  
                   _OSCILLATOR_Initialize 0730                                   _msTicks 0013  
                                 _setBlue 04AA                                 _T4CONbits 000FB6  
                ??_PIN_MANAGER_Initialize 0027         __size_of_TMR4_SetInterruptHandler 000A  
               ?_TMR4_SetInterruptHandler 0027                                 _T4HLTbits 000FB7  
              __size_of_SYSTEM_Initialize 0026                          ?_TMR4_StartTimer 0025  
                    end_of_initialization 0708            ??_TMR4_DefaultInterruptHandler 0025  
                               _T4RSTbits 000FB9                             __Lmediumconst 0000  
                         ??_rgbButtonTick 0025                               ?_appHandler 0025  
                              ??_setGreen 002D                                   postinc0 000FEE  
                                 postinc2 000FDE               __size_of_PWM4_LoadDutyValue 0034  
                _TMR0_SetInterruptHandler 07A0                                 _PORTAbits 000F8C  
                             _CCP1CONbits 000FAB                __end_of_PWM3_LoadDutyValue 0560  
                __size_of_PWM1_Initialize 0014                      _timer0ReloadVal16bit 0035  
            __end_of_INTERRUPT_Initialize 07B8                         __size_of_TMR0_ISR 0012  
                       __size_of_TMR4_ISR 0032                    ?_OSCILLATOR_Initialize 0025  
                          __end_of_msTick 0730                            __end_of_setRed 0462  
                     __size_of_appHandler 0270                       start_initialization 06FC  
                __size_of_TMR0_Initialize 003A           __size_of_PIN_MANAGER_Initialize 005A  
                __size_of_PWM3_Initialize 0014                          ??_PMD_Initialize 0027  
                       ?_rgbButtonHandler 0025            rgbButtonHandler@debounceBuffer 001B  
                             _CCPTMRSbits 000FAD                    __size_of_TMR0_CallBack 002E  
                      ??_rgbButtonHandler 0027                                  ??_msTick 0025  
                                ??_setRed 002D                               __pbssCOMRAM 0001  
                            setBlue@value 0029                  __size_of_PWM4_Initialize 0014  
                   _TMR0_InterruptHandler 0033               __size_of_PWM1_LoadDutyValue 002E  
                  _PIN_MANAGER_Initialize 03C0                       appHandler@blueValue 001F  
                               __pintcode 0008                         __size_of_setGreen 0048  
        __end_of_TMR4_SetInterruptHandler 07A0                                  ?_appInit 0025  
                       ??_PWM1_Initialize 0027              ??_INTERRUPT_InterruptManager 0025  
                                ?_setBlue 0029                  __size_of_TMR4_Initialize 002A  
                           _TMR0_CallBack 05F4                                  _T4CLKCON 000FB8  
                    _INTERRUPT_Initialize 07B4                         ??_TMR0_Initialize 0029  
                            ??_appHandler 002F                                  _PIE0bits 000EBD  
                                _PIE4bits 000EC1       __size_of_INTERRUPT_InterruptManager 006E  
              ??_TMR0_SetInterruptHandler 0029                                  _PIR0bits 000EC5  
                                _PIR4bits 000EC9                                  _TMR0_ISR 0784  
                                _TMR4_ISR 0594                         ??_PWM3_Initialize 0027  
                               fp__msTick 0000                        __end_of_appHandler 02EA  
                          ?_TMR0_CallBack 0025                     ?_INTERRUPT_Initialize 0025  
                       ??_PWM4_Initialize 0027                     __end_of_rgbButtonTick 06C4  
                __size_of_TMR4_StartTimer 0006                                  __Hrparam 0000  
                         appHandler@state 001D                __end_of_PWM4_LoadDutyValue 0594  
                                __Lrparam 0000                   ??_OSCILLATOR_Initialize 0027  
                _TMR4_SetInterruptHandler 0796                          __size_of_appInit 002C  
                      _PWM3_LoadDutyValue 052C                                _T0CON0bits 000FD4  
                        __size_of_setBlue 0048                                  __ptext10 07AA  
                                __ptext11 07B0                                  __ptext20 06E0  
                                __ptext12 0678                                  __ptext21 03C0  
                                __ptext13 064E                                  __ptext30 0716  
                                __ptext22 0730                                  __ptext14 0796  
                                __ptext31 069E                                  __ptext23 07B4  
                                __ptext15 04F2                                  __ptext32 0000  
                                __ptext16 07A0                                  __ptext25 0594  
                                __ptext17 0748                                  __ptext26 07B8  
                                __ptext18 075C                                  __ptext27 0784  
                                __ptext19 0770                                  __ptext28 05F4  
                                __ptext29 07BA                       ?_PWM3_LoadDutyValue 0027  
                       ??_TMR4_Initialize 0029                             __size_of_main 001C  
    __end_of_TMR0_DefaultInterruptHandler 07BC     __size_of_TMR0_DefaultInterruptHandler 0002  
            _TMR0_DefaultInterruptHandler 07BA                                  _setGreen 0462  
                    ??_PWM3_LoadDutyValue 0029                                  isa$xinst 000000  
                                int$flags 0037        __end_of_INTERRUPT_InterruptManager 0076  
              _INTERRUPT_InterruptManager 0008                                _INTCONbits 000FF2  
                         ??_TMR0_CallBack 0025                 __size_of_rgbButtonHandler 00D6  
                  ??_INTERRUPT_Initialize 0027                                  intlevel2 0000  
                 ?_PIN_MANAGER_Initialize 0025                           _PWM1_Initialize 0770  
         fp__TMR0_DefaultInterruptHandler 0000             ?_TMR0_DefaultInterruptHandler 0025  
             PWM3_LoadDutyValue@dutyValue 0027                         ??_TMR4_StartTimer 0027  
                         _TMR0_Initialize 04F2                                _TMR4_Start 07B0  
          __end_of_PIN_MANAGER_Initialize 041A                __end_of_PWM1_LoadDutyValue 05F4  
                         _PWM3_Initialize 075C  
