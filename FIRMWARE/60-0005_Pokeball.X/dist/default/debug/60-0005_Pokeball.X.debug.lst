

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Dec 21 12:57:08 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F26Q10
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43  0000                     
    44                           ; Version 2.30
    45                           ; Generated 20/08/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F26Q10 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80                           	psect	nvCOMRAM
    81  00001B                     __pnvCOMRAM:
    82                           	callstack 0
    83  00001B                     _TMR4_InterruptHandler:
    84                           	callstack 0
    85  00001B                     	ds	2
    86  00001D                     _TMR0_InterruptHandler:
    87                           	callstack 0
    88  00001D                     	ds	2
    89  00001F                     _timer0ReloadVal16bit:
    90                           	callstack 0
    91  00001F                     	ds	2
    92  0000                     _PIR4bits	set	3785
    93  0000                     _PIE4bits	set	3777
    94  0000                     _PIR0bits	set	3781
    95  0000                     _PIE0bits	set	3773
    96  0000                     _PMD5	set	3809
    97  0000                     _PMD4	set	3808
    98  0000                     _PMD3	set	3807
    99  0000                     _PMD2	set	3806
   100  0000                     _PMD1	set	3805
   101  0000                     _PMD0	set	3804
   102  0000                     _OSCTUNE	set	3800
   103  0000                     _OSCFRQ	set	3801
   104  0000                     _OSCEN	set	3799
   105  0000                     _OSCCON3	set	3797
   106  0000                     _OSCCON1	set	3795
   107  0000                     _RC5PPS	set	3831
   108  0000                     _RC1PPS	set	3827
   109  0000                     _RC3PPS	set	3829
   110  0000                     _INLVLE	set	3877
   111  0000                     _INLVLC	set	3864
   112  0000                     _INLVLB	set	3856
   113  0000                     _INLVLA	set	3848
   114  0000                     _SLRCONC	set	3865
   115  0000                     _SLRCONB	set	3857
   116  0000                     _SLRCONA	set	3849
   117  0000                     _ODCONC	set	3866
   118  0000                     _ODCONB	set	3858
   119  0000                     _ODCONA	set	3850
   120  0000                     _WPUC	set	3867
   121  0000                     _WPUA	set	3851
   122  0000                     _WPUB	set	3859
   123  0000                     _WPUE	set	3880
   124  0000                     _ANSELA	set	3852
   125  0000                     _ANSELB	set	3860
   126  0000                     _ANSELC	set	3868
   127  0000                     _PR4	set	4021
   128  0000                     _TMR4	set	4020
   129  0000                     _T4CONbits	set	4022
   130  0000                     _T4RSTbits	set	4025
   131  0000                     _T4HLTbits	set	4023
   132  0000                     _T4CON	set	4022
   133  0000                     _T4TMR	set	4020
   134  0000                     _T4PR	set	4021
   135  0000                     _T4RST	set	4025
   136  0000                     _T4HLT	set	4023
   137  0000                     _T4CLKCON	set	4024
   138  0000                     _PWM4DCL	set	3999
   139  0000                     _PWM4DCH	set	4000
   140  0000                     _PWM4CON	set	4001
   141  0000                     _PWM3DCL	set	4002
   142  0000                     _PWM3DCH	set	4003
   143  0000                     _PWM3CON	set	4004
   144  0000                     _CCP1CONbits	set	4011
   145  0000                     _CCPTMRSbits	set	4013
   146  0000                     _CCPR1L	set	4009
   147  0000                     _CCPR1H	set	4010
   148  0000                     _CCP1CON	set	4011
   149  0000                     _T0CON0bits	set	4052
   150  0000                     _T0CON0	set	4052
   151  0000                     _TMR0L	set	4050
   152  0000                     _TMR0H	set	4051
   153  0000                     _T0CON1	set	4053
   154  0000                     _INTCONbits	set	4082
   155  0000                     _TRISC	set	3977
   156  0000                     _TRISB	set	3976
   157  0000                     _TRISA	set	3975
   158  0000                     _LATC	set	3972
   159  0000                     _LATB	set	3971
   160  0000                     _LATA	set	3970
   161                           
   162                           ; #config settings
   163                           
   164                           	psect	cinit
   165  00034C                     __pcinit:
   166                           	callstack 0
   167  00034C                     start_initialization:
   168                           	callstack 0
   169  00034C                     __initialization:
   170                           	callstack 0
   171                           
   172                           ; Clear objects allocated to COMRAM (16 bytes)
   173  00034C  EE00  F001         	lfsr	0,__pbssCOMRAM
   174  000350  0E10               	movlw	16
   175  000352                     clear_0:
   176  000352  6AEE               	clrf	postinc0,c
   177  000354  06E8               	decf	wreg,f,c
   178  000356  E1FD               	bnz	clear_0
   179  000358                     end_of_initialization:
   180                           	callstack 0
   181  000358                     __end_of__initialization:
   182                           	callstack 0
   183  000358  9021               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   184  00035A  9221               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   185  00035C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   186  00035E  6EF8               	movwf	tblptru,c
   187  000360  0100               	movlb	0
   188  000362  EF8A  F001         	goto	_main	;jump to C main() function
   189                           
   190                           	psect	bssCOMRAM
   191  000001                     __pbssCOMRAM:
   192                           	callstack 0
   193  000001                     _msTicks:
   194                           	callstack 0
   195  000001                     	ds	8
   196  000009                     	ds	2
   197  00000B                     	ds	2
   198  00000D                     appHandler@redValue:
   199                           	callstack 0
   200  00000D                     	ds	2
   201  00000F                     	ds	2
   202                           
   203                           	psect	cstackCOMRAM
   204  000011                     __pcstackCOMRAM:
   205                           	callstack 0
   206  000011                     ??_INTERRUPT_InterruptManager:
   207  000011                     
   208                           ; 1 bytes @ 0x0
   209  000011                     	ds	2
   210  000013                     TMR0_SetInterruptHandler@InterruptHandler:
   211                           	callstack 0
   212  000013                     PWM1_LoadDutyValue@dutyValue:
   213                           	callstack 0
   214  000013                     PWM3_LoadDutyValue@dutyValue:
   215                           	callstack 0
   216  000013                     PWM4_LoadDutyValue@dutyValue:
   217                           	callstack 0
   218  000013                     TMR4_SetInterruptHandler@InterruptHandler:
   219                           	callstack 0
   220                           
   221                           ; 2 bytes @ 0x2
   222  000013                     	ds	2
   223  000015                     ??_TMR0_Initialize:
   224  000015                     ??_PWM3_LoadDutyValue:
   225  000015                     ??_PWM4_LoadDutyValue:
   226                           
   227                           ; 1 bytes @ 0x4
   228  000015                     	ds	2
   229  000017                     setRed@value:
   230                           	callstack 0
   231                           
   232                           ; 2 bytes @ 0x6
   233  000017                     	ds	2
   234  000019                     ??_setRed:
   235                           
   236                           ; 1 bytes @ 0x8
   237  000019                     	ds	2
   238  00001B                     
   239                           ; 1 bytes @ 0xA
   240 ;;
   241 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   242 ;;
   243 ;; *************** function _main *****************
   244 ;; Defined at:
   245 ;;		line 52 in file "main.c"
   246 ;; Parameters:    Size  Location     Type
   247 ;;		None
   248 ;; Auto vars:     Size  Location     Type
   249 ;;		None
   250 ;; Return value:  Size  Location     Type
   251 ;;                  1    wreg      void 
   252 ;; Registers used:
   253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   254 ;; Tracked objects:
   255 ;;		On entry : 0/0
   256 ;;		On exit  : 0/0
   257 ;;		Unchanged: 0/0
   258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   263 ;;Total ram usage:        0 bytes
   264 ;; Hardware stack levels required when called: 7
   265 ;; This function calls:
   266 ;;		_SYSTEM_Initialize
   267 ;;		_TMR4_StartTimer
   268 ;;		_appHandler
   269 ;;		_appInit
   270 ;; This function is called by:
   271 ;;		Startup code after reset
   272 ;; This function uses a non-reentrant model
   273 ;;
   274                           
   275                           	psect	text0
   276  000314                     __ptext0:
   277                           	callstack 0
   278  000314                     _main:
   279                           	callstack 24
   280  000314                     
   281                           ;main.c: 55:     SYSTEM_Initialize();
   282  000314  EC77  F001         	call	_SYSTEM_Initialize	;wreg free
   283  000318                     
   284                           ;main.c: 56:     TMR4_StartTimer();
   285  000318  ECFB  F001         	call	_TMR4_StartTimer	;wreg free
   286  00031C                     
   287                           ;main.c: 57:     appInit();
   288  00031C  EC4C  F001         	call	_appInit	;wreg free
   289  000320                     
   290                           ;main.c: 64:     (INTCONbits.GIE = 1);
   291  000320  8EF2               	bsf	242,7,c	;volatile
   292  000322                     
   293                           ;main.c: 70:     (INTCONbits.PEIE = 1);
   294  000322  8CF2               	bsf	242,6,c	;volatile
   295  000324                     l1410:
   296                           
   297                           ;main.c: 78:     {;main.c: 79:         appHandler();
   298  000324  EC69  F000         	call	_appHandler	;wreg free
   299  000328  EF92  F001         	goto	l1410
   300  00032C  EF3B  F000         	goto	start
   301  000330                     __end_of_main:
   302                           	callstack 0
   303                           
   304 ;; *************** function _appInit *****************
   305 ;; Defined at:
   306 ;;		line 51 in file "app.c"
   307 ;; Parameters:    Size  Location     Type
   308 ;;		None
   309 ;; Auto vars:     Size  Location     Type
   310 ;;		None
   311 ;; Return value:  Size  Location     Type
   312 ;;                  1    wreg      void 
   313 ;; Registers used:
   314 ;;		wreg, status,2, status,0, cstack
   315 ;; Tracked objects:
   316 ;;		On entry : 0/0
   317 ;;		On exit  : 0/0
   318 ;;		Unchanged: 0/0
   319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   324 ;;Total ram usage:        0 bytes
   325 ;; Hardware stack levels used: 1
   326 ;; Hardware stack levels required when called: 5
   327 ;; This function calls:
   328 ;;		_PWM1_LoadDutyValue
   329 ;;		_PWM3_LoadDutyValue
   330 ;;		_PWM4_LoadDutyValue
   331 ;;		_TMR0_SetInterruptHandler
   332 ;; This function is called by:
   333 ;;		_main
   334 ;; This function uses a non-reentrant model
   335 ;;
   336                           
   337                           	psect	text1
   338  000298                     __ptext1:
   339                           	callstack 0
   340  000298                     _appInit:
   341                           	callstack 25
   342  000298                     
   343                           ;app.c: 52:     TMR0_SetInterruptHandler(msTick);
   344  000298  0E7E               	movlw	low _msTick
   345  00029A  6E13               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
   346  00029C  0E03               	movlw	high _msTick
   347  00029E  6E14               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
   348  0002A0  ECF6  F001         	call	_TMR0_SetInterruptHandler	;wreg free
   349                           
   350                           ;app.c: 54:     PWM4_LoadDutyValue(0xFFFF);
   351  0002A4  0EFF               	movlw	255
   352  0002A6  6E14               	movwf	(PWM4_LoadDutyValue@dutyValue+1)^0,c
   353  0002A8  6813               	setf	PWM4_LoadDutyValue@dutyValue^0,c
   354  0002AA  ECD1  F000         	call	_PWM4_LoadDutyValue	;wreg free
   355                           
   356                           ;app.c: 55:     PWM3_LoadDutyValue(0xFFFF);
   357  0002AE  0EFF               	movlw	255
   358  0002B0  6E14               	movwf	(PWM3_LoadDutyValue@dutyValue+1)^0,c
   359  0002B2  6813               	setf	PWM3_LoadDutyValue@dutyValue^0,c
   360  0002B4  ECEB  F000         	call	_PWM3_LoadDutyValue	;wreg free
   361                           
   362                           ;app.c: 56:     PWM1_LoadDutyValue(0xFFFF);
   363  0002B8  0EFF               	movlw	255
   364  0002BA  6E14               	movwf	(PWM1_LoadDutyValue@dutyValue+1)^0,c
   365  0002BC  6813               	setf	PWM1_LoadDutyValue@dutyValue^0,c
   366  0002BE  EC1E  F001         	call	_PWM1_LoadDutyValue	;wreg free
   367  0002C2  0012               	return		;funcret
   368  0002C4                     __end_of_appInit:
   369                           	callstack 0
   370                           
   371 ;; *************** function _PWM4_LoadDutyValue *****************
   372 ;; Defined at:
   373 ;;		line 74 in file "mcc_generated_files/pwm4.c"
   374 ;; Parameters:    Size  Location     Type
   375 ;;  dutyValue       2    2[COMRAM] unsigned short 
   376 ;; Auto vars:     Size  Location     Type
   377 ;;		None
   378 ;; Return value:  Size  Location     Type
   379 ;;                  1    wreg      void 
   380 ;; Registers used:
   381 ;;		wreg, status,2, status,0
   382 ;; Tracked objects:
   383 ;;		On entry : 0/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   387 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   389 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   390 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   391 ;;Total ram usage:        4 bytes
   392 ;; Hardware stack levels used: 1
   393 ;; Hardware stack levels required when called: 4
   394 ;; This function calls:
   395 ;;		Nothing
   396 ;; This function is called by:
   397 ;;		_appInit
   398 ;;		_setGreen
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           
   402                           	psect	text2
   403  0001A2                     __ptext2:
   404                           	callstack 0
   405  0001A2                     _PWM4_LoadDutyValue:
   406                           	callstack 25
   407  0001A2                     
   408                           ;mcc_generated_files/pwm4.c: 74:  void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm4.c: 75:  {;mcc_generated_files/pwm4.c: 77:      PWM4DCH = (dutyValue & 0x0
      +                          3FC)>>2;
   409  0001A2  C013  F015         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
   410  0001A6  C014  F016         	movff	PWM4_LoadDutyValue@dutyValue+1,??_PWM4_LoadDutyValue+1
   411  0001AA  90D8               	bcf	status,0,c
   412  0001AC  3216               	rrcf	(??_PWM4_LoadDutyValue+1)^0,f,c
   413  0001AE  3215               	rrcf	??_PWM4_LoadDutyValue^0,f,c
   414  0001B0  90D8               	bcf	status,0,c
   415  0001B2  3216               	rrcf	(??_PWM4_LoadDutyValue+1)^0,f,c
   416  0001B4  3215               	rrcf	??_PWM4_LoadDutyValue^0,f,c
   417  0001B6  5015               	movf	??_PWM4_LoadDutyValue^0,w,c
   418  0001B8  6EA0               	movwf	160,c	;volatile
   419                           
   420                           ;mcc_generated_files/pwm4.c: 80:      PWM4DCL = (dutyValue & 0x0003)<<6;
   421  0001BA  C013  F015         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
   422  0001BE  0E03               	movlw	3
   423  0001C0  1615               	andwf	??_PWM4_LoadDutyValue^0,f,c
   424  0001C2  0E06               	movlw	6
   425  0001C4  6E16               	movwf	(??_PWM4_LoadDutyValue+1)^0,c
   426  0001C6                     u225:
   427  0001C6  90D8               	bcf	status,0,c
   428  0001C8  3615               	rlcf	??_PWM4_LoadDutyValue^0,f,c
   429  0001CA  2E16               	decfsz	(??_PWM4_LoadDutyValue+1)^0,f,c
   430  0001CC  EFE3  F000         	goto	u225
   431  0001D0  5015               	movf	??_PWM4_LoadDutyValue^0,w,c
   432  0001D2  6E9F               	movwf	159,c	;volatile
   433  0001D4  0012               	return		;funcret
   434  0001D6                     __end_of_PWM4_LoadDutyValue:
   435                           	callstack 0
   436                           
   437 ;; *************** function _PWM1_LoadDutyValue *****************
   438 ;; Defined at:
   439 ;;		line 82 in file "mcc_generated_files/pwm1.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;  dutyValue       2    2[COMRAM] unsigned short 
   442 ;; Auto vars:     Size  Location     Type
   443 ;;		None
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      void 
   446 ;; Registers used:
   447 ;;		wreg, status,2, status,0
   448 ;; Tracked objects:
   449 ;;		On entry : 0/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   453 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   456 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   457 ;;Total ram usage:        2 bytes
   458 ;; Hardware stack levels used: 1
   459 ;; Hardware stack levels required when called: 4
   460 ;; This function calls:
   461 ;;		Nothing
   462 ;; This function is called by:
   463 ;;		_appInit
   464 ;;		_setBlue
   465 ;; This function uses a non-reentrant model
   466 ;;
   467                           
   468                           	psect	text3
   469  00023C                     __ptext3:
   470                           	callstack 0
   471  00023C                     _PWM1_LoadDutyValue:
   472                           	callstack 25
   473  00023C                     
   474                           ;mcc_generated_files/pwm1.c: 82: void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm1.c: 83: {;mcc_generated_files/pwm1.c: 84:     dutyValue &= 0x03FF;
   475  00023C  0EFF               	movlw	255
   476  00023E  1613               	andwf	PWM1_LoadDutyValue@dutyValue^0,f,c
   477  000240  0E03               	movlw	3
   478  000242  1614               	andwf	(PWM1_LoadDutyValue@dutyValue+1)^0,f,c
   479  000244                     
   480                           ;mcc_generated_files/pwm1.c: 87:     if(CCP1CONbits.FMT)
   481  000244  A8AB               	btfss	171,4,c	;volatile
   482  000246  EF27  F001         	goto	u201
   483  00024A  EF29  F001         	goto	u200
   484  00024E                     u201:
   485  00024E  EF30  F001         	goto	l1348
   486  000252                     u200:
   487  000252                     
   488                           ;mcc_generated_files/pwm1.c: 88:     {;mcc_generated_files/pwm1.c: 89:         dutyValue
      +                           <<= 6;
   489  000252  0E06               	movlw	6
   490  000254                     u215:
   491  000254  90D8               	bcf	status,0,c
   492  000256  3613               	rlcf	PWM1_LoadDutyValue@dutyValue^0,f,c
   493  000258  3614               	rlcf	(PWM1_LoadDutyValue@dutyValue+1)^0,f,c
   494  00025A  2EE8               	decfsz	wreg,f,c
   495  00025C  EF2A  F001         	goto	u215
   496  000260                     l1348:
   497                           
   498                           ;mcc_generated_files/pwm1.c: 90:         CCPR1H = dutyValue >> 8;
   499  000260  5014               	movf	(PWM1_LoadDutyValue@dutyValue+1)^0,w,c
   500  000262  6EAA               	movwf	170,c	;volatile
   501  000264                     
   502                           ;mcc_generated_files/pwm1.c: 91:         CCPR1L = dutyValue;
   503  000264  C013  FFA9         	movff	PWM1_LoadDutyValue@dutyValue,4009	;volatile
   504  000268  0012               	return		;funcret
   505  00026A                     __end_of_PWM1_LoadDutyValue:
   506                           	callstack 0
   507                           
   508 ;; *************** function _appHandler *****************
   509 ;; Defined at:
   510 ;;		line 59 in file "app.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;		None
   513 ;; Auto vars:     Size  Location     Type
   514 ;;		None
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      void 
   517 ;; Registers used:
   518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   519 ;; Tracked objects:
   520 ;;		On entry : 0/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   528 ;;Total ram usage:        0 bytes
   529 ;; Hardware stack levels used: 1
   530 ;; Hardware stack levels required when called: 6
   531 ;; This function calls:
   532 ;;		_setRed
   533 ;; This function is called by:
   534 ;;		_main
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           	psect	text4
   539  0000D2                     __ptext4:
   540                           	callstack 0
   541  0000D2                     _appHandler:
   542                           	callstack 24
   543  0000D2                     
   544                           ;app.c: 60:     static uint16_t greenValue = 0;;app.c: 61:     static uint16_t redValue 
      +                          = 0;;app.c: 62:     static uint16_t blueValue = 0;;app.c: 63:     static int state = 0;;
      +                          app.c: 64:     if(msTicks >= 1000){
   545  0000D2  5008               	movf	(_msTicks+7)^0,w,c
   546  0000D4  1007               	iorwf	(_msTicks+6)^0,w,c
   547  0000D6  1006               	iorwf	(_msTicks+5)^0,w,c
   548  0000D8  1005               	iorwf	(_msTicks+4)^0,w,c
   549  0000DA  1004               	iorwf	(_msTicks+3)^0,w,c
   550  0000DC  1003               	iorwf	(_msTicks+2)^0,w,c
   551  0000DE  E10B               	bnz	u240
   552  0000E0  0EE8               	movlw	232
   553  0000E2  5C01               	subwf	_msTicks^0,w,c
   554  0000E4  0E03               	movlw	3
   555  0000E6  5802               	subwfb	(_msTicks+1)^0,w,c
   556  0000E8  A0D8               	btfss	status,0,c
   557  0000EA  EF79  F000         	goto	u241
   558  0000EE  EF7B  F000         	goto	u240
   559  0000F2                     u241:
   560  0000F2  EF8F  F000         	goto	l369
   561  0000F6                     u240:
   562  0000F6                     
   563                           ;app.c: 65:         msTicks = 0;
   564  0000F6  EE20  F001         	lfsr	2,_msTicks
   565  0000FA  0E07               	movlw	7
   566  0000FC                     u251:
   567  0000FC  6ADE               	clrf	postinc2,c
   568  0000FE  06E8               	decf	wreg,f,c
   569  000100  E2FD               	bc	u251
   570  000102                     
   571                           ;app.c: 66:         if(redValue = 0){
   572  000102  0E00               	movlw	0
   573  000104  6E0E               	movwf	(appHandler@redValue+1)^0,c
   574  000106  0E00               	movlw	0
   575  000108  6E0D               	movwf	appHandler@redValue^0,c
   576  00010A                     
   577                           ;app.c: 70:             redValue = 0;
   578  00010A  0E00               	movlw	0
   579  00010C  6E0E               	movwf	(appHandler@redValue+1)^0,c
   580  00010E  0E00               	movlw	0
   581  000110  6E0D               	movwf	appHandler@redValue^0,c
   582  000112                     
   583                           ;app.c: 72:         setRed(redValue);
   584  000112  0E00               	movlw	0
   585  000114  6E18               	movwf	(setRed@value+1)^0,c
   586  000116  0E00               	movlw	0
   587  000118  6E17               	movwf	setRed@value^0,c
   588  00011A  EC90  F000         	call	_setRed	;wreg free
   589  00011E                     l369:
   590  00011E  0012               	return		;funcret
   591  000120                     __end_of_appHandler:
   592                           	callstack 0
   593                           
   594 ;; *************** function _setRed *****************
   595 ;; Defined at:
   596 ;;		line 152 in file "app.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;  value           2    6[COMRAM] unsigned short 
   599 ;; Auto vars:     Size  Location     Type
   600 ;;		None
   601 ;; Return value:  Size  Location     Type
   602 ;;                  1    wreg      void 
   603 ;; Registers used:
   604 ;;		wreg, status,2, status,0, cstack
   605 ;; Tracked objects:
   606 ;;		On entry : 0/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   610 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   612 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   613 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   614 ;;Total ram usage:        4 bytes
   615 ;; Hardware stack levels used: 1
   616 ;; Hardware stack levels required when called: 5
   617 ;; This function calls:
   618 ;;		_PWM3_LoadDutyValue
   619 ;; This function is called by:
   620 ;;		_appHandler
   621 ;; This function uses a non-reentrant model
   622 ;;
   623                           
   624                           	psect	text5
   625  000120                     __ptext5:
   626                           	callstack 0
   627  000120                     _setRed:
   628                           	callstack 24
   629  000120                     
   630                           ;app.c: 153:     if(value > 255){
   631  000120  0418               	decf	(setRed@value+1)^0,w,c
   632  000122  A0D8               	btfss	status,0,c
   633  000124  EF96  F000         	goto	u231
   634  000128  EF98  F000         	goto	u230
   635  00012C                     u231:
   636  00012C  EF9B  F000         	goto	l1364
   637  000130                     u230:
   638  000130                     
   639                           ;app.c: 154:         value = 255;
   640  000130  0E00               	movlw	0
   641  000132  6E18               	movwf	(setRed@value+1)^0,c
   642  000134  6817               	setf	setRed@value^0,c
   643  000136                     l1364:
   644                           
   645                           ;app.c: 158:     value = (255 - value) * 4;
   646  000136  0EFF               	movlw	255
   647  000138  6E19               	movwf	??_setRed^0,c
   648  00013A  0E00               	movlw	0
   649  00013C  6E1A               	movwf	(??_setRed+1)^0,c
   650  00013E  5017               	movf	setRed@value^0,w,c
   651  000140  5E19               	subwf	??_setRed^0,f,c
   652  000142  5018               	movf	(setRed@value+1)^0,w,c
   653  000144  5A1A               	subwfb	(??_setRed+1)^0,f,c
   654  000146  90D8               	bcf	status,0,c
   655  000148  3619               	rlcf	??_setRed^0,f,c
   656  00014A  361A               	rlcf	(??_setRed+1)^0,f,c
   657  00014C  90D8               	bcf	status,0,c
   658  00014E  3619               	rlcf	??_setRed^0,f,c
   659  000150  361A               	rlcf	(??_setRed+1)^0,f,c
   660  000152  C019  F017         	movff	??_setRed,setRed@value
   661  000156  C01A  F018         	movff	??_setRed+1,setRed@value+1
   662  00015A                     
   663                           ;app.c: 159:     PWM3_LoadDutyValue(value);
   664  00015A  C017  F013         	movff	setRed@value,PWM3_LoadDutyValue@dutyValue
   665  00015E  C018  F014         	movff	setRed@value+1,PWM3_LoadDutyValue@dutyValue+1
   666  000162  ECEB  F000         	call	_PWM3_LoadDutyValue	;wreg free
   667  000166  0012               	return		;funcret
   668  000168                     __end_of_setRed:
   669                           	callstack 0
   670                           
   671 ;; *************** function _PWM3_LoadDutyValue *****************
   672 ;; Defined at:
   673 ;;		line 74 in file "mcc_generated_files/pwm3.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;  dutyValue       2    2[COMRAM] unsigned short 
   676 ;; Auto vars:     Size  Location     Type
   677 ;;		None
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		wreg, status,2, status,0
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   687 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   689 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   690 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   691 ;;Total ram usage:        4 bytes
   692 ;; Hardware stack levels used: 1
   693 ;; Hardware stack levels required when called: 4
   694 ;; This function calls:
   695 ;;		Nothing
   696 ;; This function is called by:
   697 ;;		_appInit
   698 ;;		_setRed
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702                           	psect	text6
   703  0001D6                     __ptext6:
   704                           	callstack 0
   705  0001D6                     _PWM3_LoadDutyValue:
   706                           	callstack 25
   707  0001D6                     
   708                           ;mcc_generated_files/pwm3.c: 74:  void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm3.c: 75:  {;mcc_generated_files/pwm3.c: 77:      PWM3DCH = (dutyValue & 0x0
      +                          3FC)>>2;
   709  0001D6  C013  F015         	movff	PWM3_LoadDutyValue@dutyValue,??_PWM3_LoadDutyValue
   710  0001DA  C014  F016         	movff	PWM3_LoadDutyValue@dutyValue+1,??_PWM3_LoadDutyValue+1
   711  0001DE  90D8               	bcf	status,0,c
   712  0001E0  3216               	rrcf	(??_PWM3_LoadDutyValue+1)^0,f,c
   713  0001E2  3215               	rrcf	??_PWM3_LoadDutyValue^0,f,c
   714  0001E4  90D8               	bcf	status,0,c
   715  0001E6  3216               	rrcf	(??_PWM3_LoadDutyValue+1)^0,f,c
   716  0001E8  3215               	rrcf	??_PWM3_LoadDutyValue^0,f,c
   717  0001EA  5015               	movf	??_PWM3_LoadDutyValue^0,w,c
   718  0001EC  6EA3               	movwf	163,c	;volatile
   719                           
   720                           ;mcc_generated_files/pwm3.c: 80:      PWM3DCL = (dutyValue & 0x0003)<<6;
   721  0001EE  C013  F015         	movff	PWM3_LoadDutyValue@dutyValue,??_PWM3_LoadDutyValue
   722  0001F2  0E03               	movlw	3
   723  0001F4  1615               	andwf	??_PWM3_LoadDutyValue^0,f,c
   724  0001F6  0E06               	movlw	6
   725  0001F8  6E16               	movwf	(??_PWM3_LoadDutyValue+1)^0,c
   726  0001FA                     u195:
   727  0001FA  90D8               	bcf	status,0,c
   728  0001FC  3615               	rlcf	??_PWM3_LoadDutyValue^0,f,c
   729  0001FE  2E16               	decfsz	(??_PWM3_LoadDutyValue+1)^0,f,c
   730  000200  EFFD  F000         	goto	u195
   731  000204  5015               	movf	??_PWM3_LoadDutyValue^0,w,c
   732  000206  6EA2               	movwf	162,c	;volatile
   733  000208  0012               	return		;funcret
   734  00020A                     __end_of_PWM3_LoadDutyValue:
   735                           	callstack 0
   736                           
   737 ;; *************** function _TMR4_StartTimer *****************
   738 ;; Defined at:
   739 ;;		line 114 in file "mcc_generated_files/tmr4.c"
   740 ;; Parameters:    Size  Location     Type
   741 ;;		None
   742 ;; Auto vars:     Size  Location     Type
   743 ;;		None
   744 ;; Return value:  Size  Location     Type
   745 ;;                  1    wreg      void 
   746 ;; Registers used:
   747 ;;		cstack
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   757 ;;Total ram usage:        0 bytes
   758 ;; Hardware stack levels used: 1
   759 ;; Hardware stack levels required when called: 5
   760 ;; This function calls:
   761 ;;		_TMR4_Start
   762 ;; This function is called by:
   763 ;;		_main
   764 ;; This function uses a non-reentrant model
   765 ;;
   766                           
   767                           	psect	text7
   768  0003F6                     __ptext7:
   769                           	callstack 0
   770  0003F6                     _TMR4_StartTimer:
   771                           	callstack 25
   772  0003F6                     
   773                           ;mcc_generated_files/tmr4.c: 116:     TMR4_Start();
   774  0003F6  ECFE  F001         	call	_TMR4_Start	;wreg free
   775  0003FA  0012               	return		;funcret
   776  0003FC                     __end_of_TMR4_StartTimer:
   777                           	callstack 0
   778                           
   779 ;; *************** function _TMR4_Start *****************
   780 ;; Defined at:
   781 ;;		line 108 in file "mcc_generated_files/tmr4.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;		None
   784 ;; Auto vars:     Size  Location     Type
   785 ;;		None
   786 ;; Return value:  Size  Location     Type
   787 ;;                  1    wreg      void 
   788 ;; Registers used:
   789 ;;		None
   790 ;; Tracked objects:
   791 ;;		On entry : 0/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   799 ;;Total ram usage:        0 bytes
   800 ;; Hardware stack levels used: 1
   801 ;; Hardware stack levels required when called: 4
   802 ;; This function calls:
   803 ;;		Nothing
   804 ;; This function is called by:
   805 ;;		_TMR4_StartTimer
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           	psect	text8
   810  0003FC                     __ptext8:
   811                           	callstack 0
   812  0003FC                     _TMR4_Start:
   813                           	callstack 25
   814  0003FC                     
   815                           ;mcc_generated_files/tmr4.c: 111:     T4CONbits.TMR4ON = 1;
   816  0003FC  8EB6               	bsf	182,7,c	;volatile
   817  0003FE  0012               	return		;funcret
   818  000400                     __end_of_TMR4_Start:
   819                           	callstack 0
   820                           
   821 ;; *************** function _SYSTEM_Initialize *****************
   822 ;; Defined at:
   823 ;;		line 50 in file "mcc_generated_files/mcc.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;		None
   826 ;; Auto vars:     Size  Location     Type
   827 ;;		None
   828 ;; Return value:  Size  Location     Type
   829 ;;                  1    wreg      void 
   830 ;; Registers used:
   831 ;;		wreg, status,2, status,0, cstack
   832 ;; Tracked objects:
   833 ;;		On entry : 0/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   841 ;;Total ram usage:        0 bytes
   842 ;; Hardware stack levels used: 1
   843 ;; Hardware stack levels required when called: 6
   844 ;; This function calls:
   845 ;;		_INTERRUPT_Initialize
   846 ;;		_OSCILLATOR_Initialize
   847 ;;		_PIN_MANAGER_Initialize
   848 ;;		_PMD_Initialize
   849 ;;		_PWM1_Initialize
   850 ;;		_PWM3_Initialize
   851 ;;		_PWM4_Initialize
   852 ;;		_TMR0_Initialize
   853 ;;		_TMR4_Initialize
   854 ;; This function is called by:
   855 ;;		_main
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           	psect	text9
   860  0002EE                     __ptext9:
   861                           	callstack 0
   862  0002EE                     _SYSTEM_Initialize:
   863                           	callstack 24
   864  0002EE                     
   865                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
   866  0002EE  EC00  F002         	call	_INTERRUPT_Initialize	;wreg free
   867  0002F2                     
   868                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
   869  0002F2  EC98  F001         	call	_PMD_Initialize	;wreg free
   870  0002F6                     
   871                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
   872  0002F6  EC3D  F000         	call	_PIN_MANAGER_Initialize	;wreg free
   873  0002FA                     
   874                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
   875  0002FA  ECB3  F001         	call	_OSCILLATOR_Initialize	;wreg free
   876  0002FE                     
   877                           ;mcc_generated_files/mcc.c: 56:     PWM1_Initialize();
   878  0002FE  ECDE  F001         	call	_PWM1_Initialize	;wreg free
   879  000302                     
   880                           ;mcc_generated_files/mcc.c: 57:     PWM4_Initialize();
   881  000302  ECCA  F001         	call	_PWM4_Initialize	;wreg free
   882  000306                     
   883                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
   884  000306  EC62  F001         	call	_TMR4_Initialize	;wreg free
   885  00030A                     
   886                           ;mcc_generated_files/mcc.c: 59:     PWM3_Initialize();
   887  00030A  ECD4  F001         	call	_PWM3_Initialize	;wreg free
   888  00030E                     
   889                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
   890  00030E  ECB4  F000         	call	_TMR0_Initialize	;wreg free
   891  000312  0012               	return		;funcret
   892  000314                     __end_of_SYSTEM_Initialize:
   893                           	callstack 0
   894                           
   895 ;; *************** function _TMR4_Initialize *****************
   896 ;; Defined at:
   897 ;;		line 64 in file "mcc_generated_files/tmr4.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;		None
   900 ;; Auto vars:     Size  Location     Type
   901 ;;		None
   902 ;; Return value:  Size  Location     Type
   903 ;;                  1    wreg      void 
   904 ;; Registers used:
   905 ;;		wreg, status,2, status,0, cstack
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   915 ;;Total ram usage:        0 bytes
   916 ;; Hardware stack levels used: 1
   917 ;; Hardware stack levels required when called: 5
   918 ;; This function calls:
   919 ;;		_TMR4_SetInterruptHandler
   920 ;; This function is called by:
   921 ;;		_SYSTEM_Initialize
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           	psect	text10
   926  0002C4                     __ptext10:
   927                           	callstack 0
   928  0002C4                     _TMR4_Initialize:
   929                           	callstack 24
   930  0002C4                     
   931                           ;mcc_generated_files/tmr4.c: 69:     T4CLKCON = 0x01;
   932  0002C4  0E01               	movlw	1
   933  0002C6  6EB8               	movwf	184,c	;volatile
   934                           
   935                           ;mcc_generated_files/tmr4.c: 72:     T4HLT = 0x20;
   936  0002C8  0E20               	movlw	32
   937  0002CA  6EB7               	movwf	183,c	;volatile
   938                           
   939                           ;mcc_generated_files/tmr4.c: 75:     T4RST = 0x00;
   940  0002CC  0E00               	movlw	0
   941  0002CE  6EB9               	movwf	185,c	;volatile
   942  0002D0                     
   943                           ;mcc_generated_files/tmr4.c: 78:     T4PR = 0xFF;
   944  0002D0  68B5               	setf	181,c	;volatile
   945                           
   946                           ;mcc_generated_files/tmr4.c: 81:     T4TMR = 0x00;
   947  0002D2  0E00               	movlw	0
   948  0002D4  6EB4               	movwf	180,c	;volatile
   949  0002D6                     
   950                           ;mcc_generated_files/tmr4.c: 84:     PIR4bits.TMR4IF = 0;
   951  0002D6  010E               	movlb	14	; () banked
   952  0002D8  97C9               	bcf	201,3,b	;volatile
   953  0002DA                     
   954                           ; BSR set to: 14
   955                           ;mcc_generated_files/tmr4.c: 87:     PIE4bits.TMR4IE = 1;
   956  0002DA  87C1               	bsf	193,3,b	;volatile
   957  0002DC                     
   958                           ; BSR set to: 14
   959                           ;mcc_generated_files/tmr4.c: 90:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
   960  0002DC  0E04               	movlw	low _TMR4_DefaultInterruptHandler
   961  0002DE  6E13               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
   962  0002E0  0E04               	movlw	high _TMR4_DefaultInterruptHandler
   963  0002E2  6E14               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
   964  0002E4  ECF1  F001         	call	_TMR4_SetInterruptHandler	;wreg free
   965  0002E8                     
   966                           ;mcc_generated_files/tmr4.c: 93:     T4CON = 0xF0;
   967  0002E8  0EF0               	movlw	240
   968  0002EA  6EB6               	movwf	182,c	;volatile
   969  0002EC  0012               	return		;funcret
   970  0002EE                     __end_of_TMR4_Initialize:
   971                           	callstack 0
   972                           
   973 ;; *************** function _TMR4_SetInterruptHandler *****************
   974 ;; Defined at:
   975 ;;		line 178 in file "mcc_generated_files/tmr4.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
   978 ;;		 -> TMR4_DefaultInterruptHandler(1), 
   979 ;; Auto vars:     Size  Location     Type
   980 ;;		None
   981 ;; Return value:  Size  Location     Type
   982 ;;                  1    wreg      void 
   983 ;; Registers used:
   984 ;;		wreg, status,2, status,0
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   990 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   993 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   994 ;;Total ram usage:        2 bytes
   995 ;; Hardware stack levels used: 1
   996 ;; Hardware stack levels required when called: 4
   997 ;; This function calls:
   998 ;;		Nothing
   999 ;; This function is called by:
  1000 ;;		_TMR4_Initialize
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004                           	psect	text11
  1005  0003E2                     __ptext11:
  1006                           	callstack 0
  1007  0003E2                     _TMR4_SetInterruptHandler:
  1008                           	callstack 24
  1009  0003E2                     
  1010                           ;mcc_generated_files/tmr4.c: 179:     TMR4_InterruptHandler = InterruptHandler;
  1011  0003E2  C013  F01B         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
  1012  0003E6  C014  F01C         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
  1013  0003EA  0012               	return		;funcret
  1014  0003EC                     __end_of_TMR4_SetInterruptHandler:
  1015                           	callstack 0
  1016                           
  1017 ;; *************** function _TMR0_Initialize *****************
  1018 ;; Defined at:
  1019 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;		None
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;		None
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      void 
  1026 ;; Registers used:
  1027 ;;		wreg, status,2, status,0, cstack
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1035 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1036 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1037 ;;Total ram usage:        2 bytes
  1038 ;; Hardware stack levels used: 1
  1039 ;; Hardware stack levels required when called: 5
  1040 ;; This function calls:
  1041 ;;		_TMR0_SetInterruptHandler
  1042 ;; This function is called by:
  1043 ;;		_SYSTEM_Initialize
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047                           	psect	text12
  1048  000168                     __ptext12:
  1049                           	callstack 0
  1050  000168                     _TMR0_Initialize:
  1051                           	callstack 24
  1052  000168                     
  1053                           ;mcc_generated_files/tmr0.c: 71:     T0CON1 = 0x40;
  1054  000168  0E40               	movlw	64
  1055  00016A  6ED5               	movwf	213,c	;volatile
  1056                           
  1057                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0xC1;
  1058  00016C  0EC1               	movlw	193
  1059  00016E  6ED3               	movwf	211,c	;volatile
  1060                           
  1061                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0x80;
  1062  000170  0E80               	movlw	128
  1063  000172  6ED2               	movwf	210,c	;volatile
  1064  000174                     
  1065                           ;mcc_generated_files/tmr0.c: 80:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  1066  000174  50D2               	movf	210,w,c	;volatile
  1067  000176  CFD3 F015          	movff	4051,??_TMR0_Initialize	;volatile
  1068  00017A  6A16               	clrf	(??_TMR0_Initialize+1)^0,c
  1069  00017C  C015  F016         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  1070  000180  6A15               	clrf	??_TMR0_Initialize^0,c
  1071  000182  1015               	iorwf	??_TMR0_Initialize^0,w,c
  1072  000184  6E1F               	movwf	_timer0ReloadVal16bit^0,c	;volatile
  1073  000186  5016               	movf	(??_TMR0_Initialize+1)^0,w,c
  1074  000188  6E20               	movwf	(_timer0ReloadVal16bit+1)^0,c	;volatile
  1075  00018A                     
  1076                           ;mcc_generated_files/tmr0.c: 83:     PIR0bits.TMR0IF = 0;
  1077  00018A  010E               	movlb	14	; () banked
  1078  00018C  9BC5               	bcf	197,5,b	;volatile
  1079  00018E                     
  1080                           ; BSR set to: 14
  1081                           ;mcc_generated_files/tmr0.c: 86:     PIE0bits.TMR0IE = 1;
  1082  00018E  8BBD               	bsf	189,5,b	;volatile
  1083  000190                     
  1084                           ; BSR set to: 14
  1085                           ;mcc_generated_files/tmr0.c: 89:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  1086  000190  0E06               	movlw	low _TMR0_DefaultInterruptHandler
  1087  000192  6E13               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1088  000194  0E04               	movlw	high _TMR0_DefaultInterruptHandler
  1089  000196  6E14               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1090  000198  ECF6  F001         	call	_TMR0_SetInterruptHandler	;wreg free
  1091  00019C                     
  1092                           ;mcc_generated_files/tmr0.c: 92:     T0CON0 = 0x90;
  1093  00019C  0E90               	movlw	144
  1094  00019E  6ED4               	movwf	212,c	;volatile
  1095  0001A0  0012               	return		;funcret
  1096  0001A2                     __end_of_TMR0_Initialize:
  1097                           	callstack 0
  1098                           
  1099 ;; *************** function _TMR0_SetInterruptHandler *****************
  1100 ;; Defined at:
  1101 ;;		line 159 in file "mcc_generated_files/tmr0.c"
  1102 ;; Parameters:    Size  Location     Type
  1103 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  1104 ;;		 -> msTick(1), TMR0_DefaultInterruptHandler(1), 
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;		None
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      void 
  1109 ;; Registers used:
  1110 ;;		wreg, status,2, status,0
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1116 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1119 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1120 ;;Total ram usage:        2 bytes
  1121 ;; Hardware stack levels used: 1
  1122 ;; Hardware stack levels required when called: 4
  1123 ;; This function calls:
  1124 ;;		Nothing
  1125 ;; This function is called by:
  1126 ;;		_TMR0_Initialize
  1127 ;;		_appInit
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           	psect	text13
  1132  0003EC                     __ptext13:
  1133                           	callstack 0
  1134  0003EC                     _TMR0_SetInterruptHandler:
  1135                           	callstack 25
  1136  0003EC                     
  1137                           ;mcc_generated_files/tmr0.c: 160:     TMR0_InterruptHandler = InterruptHandler;
  1138  0003EC  C013  F01D         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1139  0003F0  C014  F01E         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1140  0003F4  0012               	return		;funcret
  1141  0003F6                     __end_of_TMR0_SetInterruptHandler:
  1142                           	callstack 0
  1143                           
  1144 ;; *************** function _PWM4_Initialize *****************
  1145 ;; Defined at:
  1146 ;;		line 58 in file "mcc_generated_files/pwm4.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;		None
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;		None
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  1    wreg      void 
  1153 ;; Registers used:
  1154 ;;		wreg, status,2
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1164 ;;Total ram usage:        0 bytes
  1165 ;; Hardware stack levels used: 1
  1166 ;; Hardware stack levels required when called: 4
  1167 ;; This function calls:
  1168 ;;		Nothing
  1169 ;; This function is called by:
  1170 ;;		_SYSTEM_Initialize
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           	psect	text14
  1175  000394                     __ptext14:
  1176                           	callstack 0
  1177  000394                     _PWM4_Initialize:
  1178                           	callstack 25
  1179  000394                     
  1180                           ;mcc_generated_files/pwm4.c: 62:     PWM4CON = 0x80;
  1181  000394  0E80               	movlw	128
  1182  000396  6EA1               	movwf	161,c	;volatile
  1183  000398                     
  1184                           ;mcc_generated_files/pwm4.c: 65:     PWM4DCH = 0xFF;
  1185  000398  68A0               	setf	160,c	;volatile
  1186                           
  1187                           ;mcc_generated_files/pwm4.c: 68:     PWM4DCL = 0xC0;
  1188  00039A  0EC0               	movlw	192
  1189  00039C  6E9F               	movwf	159,c	;volatile
  1190                           
  1191                           ;mcc_generated_files/pwm4.c: 71:     CCPTMRSbits.P4TSEL = 2;
  1192  00039E  50AD               	movf	173,w,c	;volatile
  1193  0003A0  0B3F               	andlw	-193
  1194  0003A2  0980               	iorlw	128
  1195  0003A4  6EAD               	movwf	173,c	;volatile
  1196  0003A6  0012               	return		;funcret
  1197  0003A8                     __end_of_PWM4_Initialize:
  1198                           	callstack 0
  1199                           
  1200 ;; *************** function _PWM3_Initialize *****************
  1201 ;; Defined at:
  1202 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;		None
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;		None
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  1    wreg      void 
  1209 ;; Registers used:
  1210 ;;		wreg, status,2
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1220 ;;Total ram usage:        0 bytes
  1221 ;; Hardware stack levels used: 1
  1222 ;; Hardware stack levels required when called: 4
  1223 ;; This function calls:
  1224 ;;		Nothing
  1225 ;; This function is called by:
  1226 ;;		_SYSTEM_Initialize
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           	psect	text15
  1231  0003A8                     __ptext15:
  1232                           	callstack 0
  1233  0003A8                     _PWM3_Initialize:
  1234                           	callstack 25
  1235  0003A8                     
  1236                           ;mcc_generated_files/pwm3.c: 62:     PWM3CON = 0x80;
  1237  0003A8  0E80               	movlw	128
  1238  0003AA  6EA4               	movwf	164,c	;volatile
  1239  0003AC                     
  1240                           ;mcc_generated_files/pwm3.c: 65:     PWM3DCH = 0xFF;
  1241  0003AC  68A3               	setf	163,c	;volatile
  1242                           
  1243                           ;mcc_generated_files/pwm3.c: 68:     PWM3DCL = 0xC0;
  1244  0003AE  0EC0               	movlw	192
  1245  0003B0  6EA2               	movwf	162,c	;volatile
  1246                           
  1247                           ;mcc_generated_files/pwm3.c: 71:     CCPTMRSbits.P3TSEL = 2;
  1248  0003B2  50AD               	movf	173,w,c	;volatile
  1249  0003B4  0BCF               	andlw	-49
  1250  0003B6  0920               	iorlw	32
  1251  0003B8  6EAD               	movwf	173,c	;volatile
  1252  0003BA  0012               	return		;funcret
  1253  0003BC                     __end_of_PWM3_Initialize:
  1254                           	callstack 0
  1255                           
  1256 ;; *************** function _PWM1_Initialize *****************
  1257 ;; Defined at:
  1258 ;;		line 64 in file "mcc_generated_files/pwm1.c"
  1259 ;; Parameters:    Size  Location     Type
  1260 ;;		None
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;		None
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  1    wreg      void 
  1265 ;; Registers used:
  1266 ;;		wreg, status,2
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1276 ;;Total ram usage:        0 bytes
  1277 ;; Hardware stack levels used: 1
  1278 ;; Hardware stack levels required when called: 4
  1279 ;; This function calls:
  1280 ;;		Nothing
  1281 ;; This function is called by:
  1282 ;;		_SYSTEM_Initialize
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           	psect	text16
  1287  0003BC                     __ptext16:
  1288                           	callstack 0
  1289  0003BC                     _PWM1_Initialize:
  1290                           	callstack 25
  1291  0003BC                     
  1292                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8C;
  1293  0003BC  0E8C               	movlw	140
  1294  0003BE  6EAB               	movwf	171,c	;volatile
  1295                           
  1296                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x03;
  1297  0003C0  0E03               	movlw	3
  1298  0003C2  6EAA               	movwf	170,c	;volatile
  1299  0003C4                     
  1300                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0xFF;
  1301  0003C4  68A9               	setf	169,c	;volatile
  1302                           
  1303                           ;mcc_generated_files/pwm1.c: 78:  CCPTMRSbits.C1TSEL = 0x2;
  1304  0003C6  50AD               	movf	173,w,c	;volatile
  1305  0003C8  0BFC               	andlw	-4
  1306  0003CA  0902               	iorlw	2
  1307  0003CC  6EAD               	movwf	173,c	;volatile
  1308  0003CE  0012               	return		;funcret
  1309  0003D0                     __end_of_PWM1_Initialize:
  1310                           	callstack 0
  1311                           
  1312 ;; *************** function _PMD_Initialize *****************
  1313 ;; Defined at:
  1314 ;;		line 77 in file "mcc_generated_files/mcc.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;		None
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;		None
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  1    wreg      void 
  1321 ;; Registers used:
  1322 ;;		wreg, status,2
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1332 ;;Total ram usage:        0 bytes
  1333 ;; Hardware stack levels used: 1
  1334 ;; Hardware stack levels required when called: 4
  1335 ;; This function calls:
  1336 ;;		Nothing
  1337 ;; This function is called by:
  1338 ;;		_SYSTEM_Initialize
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text17
  1343  000330                     __ptext17:
  1344                           	callstack 0
  1345  000330                     _PMD_Initialize:
  1346                           	callstack 25
  1347  000330                     
  1348                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
  1349  000330  0E00               	movlw	0
  1350  000332  010E               	movlb	14	; () banked
  1351  000334  6FDC               	movwf	220,b	;volatile
  1352                           
  1353                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
  1354  000336  0E00               	movlw	0
  1355  000338  6FDD               	movwf	221,b	;volatile
  1356                           
  1357                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
  1358  00033A  0E00               	movlw	0
  1359  00033C  6FDE               	movwf	222,b	;volatile
  1360                           
  1361                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
  1362  00033E  0E00               	movlw	0
  1363  000340  6FDF               	movwf	223,b	;volatile
  1364                           
  1365                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
  1366  000342  0E00               	movlw	0
  1367  000344  6FE0               	movwf	224,b	;volatile
  1368                           
  1369                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
  1370  000346  0E00               	movlw	0
  1371  000348  6FE1               	movwf	225,b	;volatile
  1372  00034A                     
  1373                           ; BSR set to: 14
  1374  00034A  0012               	return		;funcret
  1375  00034C                     __end_of_PMD_Initialize:
  1376                           	callstack 0
  1377                           
  1378 ;; *************** function _PIN_MANAGER_Initialize *****************
  1379 ;; Defined at:
  1380 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;		None
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;		None
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		wreg, status,2
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1398 ;;Total ram usage:        0 bytes
  1399 ;; Hardware stack levels used: 1
  1400 ;; Hardware stack levels required when called: 4
  1401 ;; This function calls:
  1402 ;;		Nothing
  1403 ;; This function is called by:
  1404 ;;		_SYSTEM_Initialize
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           	psect	text18
  1409  00007A                     __ptext18:
  1410                           	callstack 0
  1411  00007A                     _PIN_MANAGER_Initialize:
  1412                           	callstack 25
  1413  00007A                     
  1414                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1415  00007A  0E00               	movlw	0
  1416  00007C  6E82               	movwf	130,c	;volatile
  1417                           
  1418                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1419  00007E  0E00               	movlw	0
  1420  000080  6E83               	movwf	131,c	;volatile
  1421                           
  1422                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x02;
  1423  000082  0E02               	movlw	2
  1424  000084  6E84               	movwf	132,c	;volatile
  1425  000086                     
  1426                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  1427  000086  6887               	setf	135,c	;volatile
  1428  000088                     
  1429                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  1430  000088  6888               	setf	136,c	;volatile
  1431                           
  1432                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xD5;
  1433  00008A  0ED5               	movlw	213
  1434  00008C  6E89               	movwf	137,c	;volatile
  1435  00008E                     
  1436                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
  1437  00008E  010F               	movlb	15	; () banked
  1438  000090  691C               	setf	28,b	;volatile
  1439  000092                     
  1440                           ; BSR set to: 15
  1441                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xFF;
  1442  000092  6914               	setf	20,b	;volatile
  1443  000094                     
  1444                           ; BSR set to: 15
  1445                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xFF;
  1446  000094  690C               	setf	12,b	;volatile
  1447                           
  1448                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
  1449  000096  0E00               	movlw	0
  1450  000098  6F28               	movwf	40,b	;volatile
  1451                           
  1452                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
  1453  00009A  0E00               	movlw	0
  1454  00009C  6F13               	movwf	19,b	;volatile
  1455                           
  1456                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
  1457  00009E  0E00               	movlw	0
  1458  0000A0  6F0B               	movwf	11,b	;volatile
  1459                           
  1460                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
  1461  0000A2  0E00               	movlw	0
  1462  0000A4  6F1B               	movwf	27,b	;volatile
  1463                           
  1464                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  1465  0000A6  0E00               	movlw	0
  1466  0000A8  6F0A               	movwf	10,b	;volatile
  1467                           
  1468                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  1469  0000AA  0E00               	movlw	0
  1470  0000AC  6F12               	movwf	18,b	;volatile
  1471                           
  1472                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
  1473  0000AE  0E00               	movlw	0
  1474  0000B0  6F1A               	movwf	26,b	;volatile
  1475  0000B2                     
  1476                           ; BSR set to: 15
  1477                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
  1478  0000B2  6909               	setf	9,b	;volatile
  1479  0000B4                     
  1480                           ; BSR set to: 15
  1481                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
  1482  0000B4  6911               	setf	17,b	;volatile
  1483  0000B6                     
  1484                           ; BSR set to: 15
  1485                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  1486  0000B6  6919               	setf	25,b	;volatile
  1487  0000B8                     
  1488                           ; BSR set to: 15
  1489                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0xFF;
  1490  0000B8  6908               	setf	8,b	;volatile
  1491  0000BA                     
  1492                           ; BSR set to: 15
  1493                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xFF;
  1494  0000BA  6910               	setf	16,b	;volatile
  1495  0000BC                     
  1496                           ; BSR set to: 15
  1497                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
  1498  0000BC  6918               	setf	24,b	;volatile
  1499                           
  1500                           ;mcc_generated_files/pin_manager.c: 106:     INLVLE = 0x08;
  1501  0000BE  0E08               	movlw	8
  1502  0000C0  6F25               	movwf	37,b	;volatile
  1503                           
  1504                           ;mcc_generated_files/pin_manager.c: 115:     RC3PPS = 0x07;
  1505  0000C2  0E07               	movlw	7
  1506  0000C4  010E               	movlb	14	; () banked
  1507  0000C6  6FF5               	movwf	245,b	;volatile
  1508                           
  1509                           ;mcc_generated_files/pin_manager.c: 116:     RC1PPS = 0x05;
  1510  0000C8  0E05               	movlw	5
  1511  0000CA  6FF3               	movwf	243,b	;volatile
  1512                           
  1513                           ;mcc_generated_files/pin_manager.c: 117:     RC5PPS = 0x08;
  1514  0000CC  0E08               	movlw	8
  1515  0000CE  6FF7               	movwf	247,b	;volatile
  1516  0000D0                     
  1517                           ; BSR set to: 14
  1518  0000D0  0012               	return		;funcret
  1519  0000D2                     __end_of_PIN_MANAGER_Initialize:
  1520                           	callstack 0
  1521                           
  1522 ;; *************** function _OSCILLATOR_Initialize *****************
  1523 ;; Defined at:
  1524 ;;		line 63 in file "mcc_generated_files/mcc.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;		None
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;		None
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      void 
  1531 ;; Registers used:
  1532 ;;		wreg, status,2
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1542 ;;Total ram usage:        0 bytes
  1543 ;; Hardware stack levels used: 1
  1544 ;; Hardware stack levels required when called: 4
  1545 ;; This function calls:
  1546 ;;		Nothing
  1547 ;; This function is called by:
  1548 ;;		_SYSTEM_Initialize
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552                           	psect	text19
  1553  000366                     __ptext19:
  1554                           	callstack 0
  1555  000366                     _OSCILLATOR_Initialize:
  1556                           	callstack 25
  1557  000366                     
  1558                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x60;
  1559  000366  0E60               	movlw	96
  1560  000368  010E               	movlb	14	; () banked
  1561  00036A  6FD3               	movwf	211,b	;volatile
  1562                           
  1563                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
  1564  00036C  0E00               	movlw	0
  1565  00036E  6FD5               	movwf	213,b	;volatile
  1566                           
  1567                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
  1568  000370  0E00               	movlw	0
  1569  000372  6FD7               	movwf	215,b	;volatile
  1570                           
  1571                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x08;
  1572  000374  0E08               	movlw	8
  1573  000376  6FD9               	movwf	217,b	;volatile
  1574                           
  1575                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  1576  000378  0E00               	movlw	0
  1577  00037A  6FD8               	movwf	216,b	;volatile
  1578  00037C                     
  1579                           ; BSR set to: 14
  1580  00037C  0012               	return		;funcret
  1581  00037E                     __end_of_OSCILLATOR_Initialize:
  1582                           	callstack 0
  1583                           
  1584 ;; *************** function _INTERRUPT_Initialize *****************
  1585 ;; Defined at:
  1586 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;		None
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;		None
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		None
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1604 ;;Total ram usage:        0 bytes
  1605 ;; Hardware stack levels used: 1
  1606 ;; Hardware stack levels required when called: 4
  1607 ;; This function calls:
  1608 ;;		Nothing
  1609 ;; This function is called by:
  1610 ;;		_SYSTEM_Initialize
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           	psect	text20
  1615  000400                     __ptext20:
  1616                           	callstack 0
  1617  000400                     _INTERRUPT_Initialize:
  1618                           	callstack 25
  1619  000400                     
  1620                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  1621  000400  9AF2               	bcf	242,5,c	;volatile
  1622  000402  0012               	return		;funcret
  1623  000404                     __end_of_INTERRUPT_Initialize:
  1624                           	callstack 0
  1625                           
  1626 ;; *************** function _INTERRUPT_InterruptManager *****************
  1627 ;; Defined at:
  1628 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;		None
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;		None
  1633 ;; Return value:  Size  Location     Type
  1634 ;;                  1    wreg      void 
  1635 ;; Registers used:
  1636 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1644 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1645 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1646 ;;Total ram usage:        2 bytes
  1647 ;; Hardware stack levels used: 1
  1648 ;; Hardware stack levels required when called: 3
  1649 ;; This function calls:
  1650 ;;		_TMR0_ISR
  1651 ;;		_TMR4_ISR
  1652 ;; This function is called by:
  1653 ;;		Interrupt level 2
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           	psect	intcode
  1658  000008                     __pintcode:
  1659                           	callstack 0
  1660  000008                     _INTERRUPT_InterruptManager:
  1661                           	callstack 24
  1662                           
  1663                           ;incstack = 0
  1664  000008  8221               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1665  00000A  CFFA F011          	movff	pclath,??_INTERRUPT_InterruptManager
  1666  00000E  CFFB F012          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1667  000012                     
  1668                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
  1669  000012  010E               	movlb	14	; () banked
  1670  000014  ABBD               	btfss	189,5,b	;volatile
  1671  000016  EF0F  F000         	goto	i2u12_41
  1672  00001A  EF11  F000         	goto	i2u12_40
  1673  00001E                     i2u12_41:
  1674  00001E  EF1C  F000         	goto	i2l129
  1675  000022                     i2u12_40:
  1676  000022                     
  1677                           ; BSR set to: 14
  1678  000022  ABC5               	btfss	197,5,b	;volatile
  1679  000024  EF16  F000         	goto	i2u13_41
  1680  000028  EF18  F000         	goto	i2u13_40
  1681  00002C                     i2u13_41:
  1682  00002C  EF1C  F000         	goto	i2l129
  1683  000030                     i2u13_40:
  1684  000030                     
  1685                           ; BSR set to: 14
  1686                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  1687  000030  ECE8  F001         	call	_TMR0_ISR	;wreg free
  1688                           
  1689                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  1690  000034  EF35  F000         	goto	i2l135
  1691  000038                     i2l129:
  1692                           
  1693                           ; BSR set to: 14
  1694  000038  ACF2               	btfss	242,6,c	;volatile
  1695  00003A  EF21  F000         	goto	i2u14_41
  1696  00003E  EF23  F000         	goto	i2u14_40
  1697  000042                     i2u14_41:
  1698  000042  EF35  F000         	goto	i2l135
  1699  000046                     i2u14_40:
  1700  000046                     
  1701                           ; BSR set to: 14
  1702                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE4bits.TMR4IE == 1 && PIR4bits.TMR4IF == 1)
  1703  000046  A7C1               	btfss	193,3,b	;volatile
  1704  000048  EF28  F000         	goto	i2u15_41
  1705  00004C  EF2A  F000         	goto	i2u15_40
  1706  000050                     i2u15_41:
  1707  000050  EF35  F000         	goto	i2l134
  1708  000054                     i2u15_40:
  1709  000054                     
  1710                           ; BSR set to: 14
  1711  000054  A7C9               	btfss	201,3,b	;volatile
  1712  000056  EF2F  F000         	goto	i2u16_41
  1713  00005A  EF31  F000         	goto	i2u16_40
  1714  00005E                     i2u16_41:
  1715  00005E  EF35  F000         	goto	i2l134
  1716  000062                     i2u16_40:
  1717  000062                     
  1718                           ; BSR set to: 14
  1719                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             TMR4_ISR();
  1720  000062  EC05  F001         	call	_TMR4_ISR	;wreg free
  1721                           
  1722                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  1723  000066  EF35  F000         	goto	i2l135
  1724  00006A                     i2l134:
  1725  00006A                     i2l135:
  1726  00006A  C012  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1727  00006E  C011  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1728  000072  9221               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1729  000074  0011               	retfie		f
  1730  000076                     __end_of_INTERRUPT_InterruptManager:
  1731                           	callstack 0
  1732                           
  1733 ;; *************** function _TMR4_ISR *****************
  1734 ;; Defined at:
  1735 ;;		line 165 in file "mcc_generated_files/tmr4.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;		None
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;		None
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  1    wreg      void 
  1742 ;; Registers used:
  1743 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1753 ;;Total ram usage:        0 bytes
  1754 ;; Hardware stack levels used: 1
  1755 ;; Hardware stack levels required when called: 1
  1756 ;; This function calls:
  1757 ;;		Absolute function
  1758 ;;		_TMR4_DefaultInterruptHandler
  1759 ;; This function is called by:
  1760 ;;		_INTERRUPT_InterruptManager
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           	psect	text22
  1765  00020A                     __ptext22:
  1766                           	callstack 0
  1767  00020A                     _TMR4_ISR:
  1768                           	callstack 25
  1769  00020A                     
  1770                           ;mcc_generated_files/tmr4.c: 169:     PIR4bits.TMR4IF = 0;
  1771  00020A  010E               	movlb	14	; () banked
  1772  00020C  97C9               	bcf	201,3,b	;volatile
  1773  00020E                     
  1774                           ; BSR set to: 14
  1775                           ;mcc_generated_files/tmr4.c: 171:     if(TMR4_InterruptHandler)
  1776  00020E  501B               	movf	_TMR4_InterruptHandler^0,w,c
  1777  000210  101C               	iorwf	(_TMR4_InterruptHandler+1)^0,w,c
  1778  000212  B4D8               	btfsc	status,2,c
  1779  000214  EF0E  F001         	goto	i2u8_41
  1780  000218  EF10  F001         	goto	i2u8_40
  1781  00021C                     i2u8_41:
  1782  00021C  EF1D  F001         	goto	i2l314
  1783  000220                     i2u8_40:
  1784  000220                     
  1785                           ; BSR set to: 14
  1786                           ;mcc_generated_files/tmr4.c: 172:     {;mcc_generated_files/tmr4.c: 173:         TMR4_In
      +                          terruptHandler();
  1787  000220  D802               	call	i2u9_48
  1788  000222  EF1D  F001         	goto	i2u9_49
  1789  000226                     i2u9_48:
  1790  000226  0005               	push	
  1791  000228  6EFA               	movwf	pclath,c
  1792  00022A  501B               	movf	_TMR4_InterruptHandler^0,w,c
  1793  00022C  6EFD               	movwf	tosl,c
  1794  00022E  501C               	movf	(_TMR4_InterruptHandler+1)^0,w,c
  1795  000230  6EFE               	movwf	tosh,c
  1796  000232  50F8               	movf	tblptru,w,c
  1797  000234  6EFF               	movwf	tosu,c
  1798  000236  50FA               	movf	pclath,w,c
  1799  000238  0012               	return		;indir
  1800  00023A                     i2u9_49:
  1801  00023A                     i2l314:
  1802  00023A  0012               	return		;funcret
  1803  00023C                     __end_of_TMR4_ISR:
  1804                           	callstack 0
  1805                           
  1806 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  1807 ;; Defined at:
  1808 ;;		line 182 in file "mcc_generated_files/tmr4.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;		None
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;		None
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  1    wreg      void 
  1815 ;; Registers used:
  1816 ;;		None
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1826 ;;Total ram usage:        0 bytes
  1827 ;; Hardware stack levels used: 1
  1828 ;; This function calls:
  1829 ;;		Nothing
  1830 ;; This function is called by:
  1831 ;;		_TMR4_Initialize
  1832 ;;		_TMR4_ISR
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           	psect	text23
  1837  000404                     __ptext23:
  1838                           	callstack 0
  1839  000404                     _TMR4_DefaultInterruptHandler:
  1840                           	callstack 25
  1841  000404  0012               	return		;funcret
  1842  000406                     __end_of_TMR4_DefaultInterruptHandler:
  1843                           	callstack 0
  1844                           
  1845 ;; *************** function _TMR0_ISR *****************
  1846 ;; Defined at:
  1847 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;		None
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;		None
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  1    wreg      void 
  1854 ;; Registers used:
  1855 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1865 ;;Total ram usage:        0 bytes
  1866 ;; Hardware stack levels used: 1
  1867 ;; Hardware stack levels required when called: 2
  1868 ;; This function calls:
  1869 ;;		_TMR0_CallBack
  1870 ;; This function is called by:
  1871 ;;		_INTERRUPT_InterruptManager
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           	psect	text24
  1876  0003D0                     __ptext24:
  1877                           	callstack 0
  1878  0003D0                     _TMR0_ISR:
  1879                           	callstack 24
  1880  0003D0                     
  1881                           ;mcc_generated_files/tmr0.c: 137:     PIR0bits.TMR0IF = 0;
  1882  0003D0  010E               	movlb	14	; () banked
  1883  0003D2  9BC5               	bcf	197,5,b	;volatile
  1884  0003D4                     
  1885                           ; BSR set to: 14
  1886                           ;mcc_generated_files/tmr0.c: 139:     TMR0H = timer0ReloadVal16bit >> 8;
  1887  0003D4  5020               	movf	(_timer0ReloadVal16bit+1)^0,w,c	;volatile
  1888  0003D6  6ED3               	movwf	211,c	;volatile
  1889  0003D8                     
  1890                           ; BSR set to: 14
  1891                           ;mcc_generated_files/tmr0.c: 140:     TMR0L = (uint8_t) timer0ReloadVal16bit;
  1892  0003D8  C01F  FFD2         	movff	_timer0ReloadVal16bit,4050	;volatile
  1893  0003DC                     
  1894                           ; BSR set to: 14
  1895                           ;mcc_generated_files/tmr0.c: 144:     TMR0_CallBack();
  1896  0003DC  EC35  F001         	call	_TMR0_CallBack	;wreg free
  1897  0003E0  0012               	return		;funcret
  1898  0003E2                     __end_of_TMR0_ISR:
  1899                           	callstack 0
  1900                           
  1901 ;; *************** function _TMR0_CallBack *****************
  1902 ;; Defined at:
  1903 ;;		line 149 in file "mcc_generated_files/tmr0.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      void 
  1910 ;; Registers used:
  1911 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1921 ;;Total ram usage:        0 bytes
  1922 ;; Hardware stack levels used: 1
  1923 ;; Hardware stack levels required when called: 1
  1924 ;; This function calls:
  1925 ;;		Absolute function
  1926 ;;		_TMR0_DefaultInterruptHandler
  1927 ;;		_msTick
  1928 ;; This function is called by:
  1929 ;;		_TMR0_ISR
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           	psect	text25
  1934  00026A                     __ptext25:
  1935                           	callstack 0
  1936  00026A                     _TMR0_CallBack:
  1937                           	callstack 24
  1938  00026A                     
  1939                           ;mcc_generated_files/tmr0.c: 153:     if(TMR0_InterruptHandler)
  1940  00026A  501D               	movf	_TMR0_InterruptHandler^0,w,c
  1941  00026C  101E               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  1942  00026E  B4D8               	btfsc	status,2,c
  1943  000270  EF3C  F001         	goto	i2u2_41
  1944  000274  EF3E  F001         	goto	i2u2_40
  1945  000278                     i2u2_41:
  1946  000278  EF4B  F001         	goto	i2l184
  1947  00027C                     i2u2_40:
  1948  00027C                     
  1949                           ;mcc_generated_files/tmr0.c: 154:     {;mcc_generated_files/tmr0.c: 155:         TMR0_In
      +                          terruptHandler();
  1950  00027C  D802               	call	i2u3_48
  1951  00027E  EF4B  F001         	goto	i2u3_49
  1952  000282                     i2u3_48:
  1953  000282  0005               	push	
  1954  000284  6EFA               	movwf	pclath,c
  1955  000286  501D               	movf	_TMR0_InterruptHandler^0,w,c
  1956  000288  6EFD               	movwf	tosl,c
  1957  00028A  501E               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  1958  00028C  6EFE               	movwf	tosh,c
  1959  00028E  50F8               	movf	tblptru,w,c
  1960  000290  6EFF               	movwf	tosu,c
  1961  000292  50FA               	movf	pclath,w,c
  1962  000294  0012               	return		;indir
  1963  000296                     i2u3_49:
  1964  000296                     i2l184:
  1965  000296  0012               	return		;funcret
  1966  000298                     __end_of_TMR0_CallBack:
  1967                           	callstack 0
  1968                           
  1969 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  1970 ;; Defined at:
  1971 ;;		line 163 in file "mcc_generated_files/tmr0.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;		None
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;		None
  1976 ;; Return value:  Size  Location     Type
  1977 ;;                  1    wreg      void 
  1978 ;; Registers used:
  1979 ;;		None
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1989 ;;Total ram usage:        0 bytes
  1990 ;; Hardware stack levels used: 1
  1991 ;; This function calls:
  1992 ;;		Nothing
  1993 ;; This function is called by:
  1994 ;;		_TMR0_Initialize
  1995 ;;		_TMR0_CallBack
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           	psect	text26
  2000  000406                     __ptext26:
  2001                           	callstack 0
  2002  000406                     _TMR0_DefaultInterruptHandler:
  2003                           	callstack 24
  2004  000406  0012               	return		;funcret
  2005  000408                     __end_of_TMR0_DefaultInterruptHandler:
  2006                           	callstack 0
  2007                           
  2008 ;; *************** function _msTick *****************
  2009 ;; Defined at:
  2010 ;;		line 149 in file "app.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;		None
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;		None
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      void 
  2017 ;; Registers used:
  2018 ;;		wreg, status,2, status,0
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2028 ;;Total ram usage:        0 bytes
  2029 ;; Hardware stack levels used: 1
  2030 ;; This function calls:
  2031 ;;		Nothing
  2032 ;; This function is called by:
  2033 ;;		_appInit
  2034 ;;		_TMR0_CallBack
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           	psect	text27
  2039  00037E                     __ptext27:
  2040                           	callstack 0
  2041  00037E                     _msTick:
  2042                           	callstack 24
  2043  00037E                     
  2044                           ;app.c: 150:     msTicks++;
  2045  00037E  0E01               	movlw	1
  2046  000380  2601               	addwf	_msTicks^0,f,c
  2047  000382  0E00               	movlw	0
  2048  000384  2202               	addwfc	(_msTicks+1)^0,f,c
  2049  000386  2203               	addwfc	(_msTicks+2)^0,f,c
  2050  000388  2204               	addwfc	(_msTicks+3)^0,f,c
  2051  00038A  2205               	addwfc	(_msTicks+4)^0,f,c
  2052  00038C  2206               	addwfc	(_msTicks+5)^0,f,c
  2053  00038E  2207               	addwfc	(_msTicks+6)^0,f,c
  2054  000390  2208               	addwfc	(_msTicks+7)^0,f,c
  2055  000392  0012               	return		;funcret
  2056  000394                     __end_of_msTick:
  2057                           	callstack 0
  2058  0000                     
  2059                           	psect	text28
  2060  000000                     __ptext28:
  2061                           	callstack 0
  2062  000000                     
  2063                           	psect	rparam
  2064  0000                     
  2065                           	psect	temp
  2066  000021                     btemp:
  2067                           	callstack 0
  2068  000021                     	ds	1
  2069  0000                     int$flags	set	btemp
  2070  0000                     wtemp8	set	btemp+1
  2071  0000                     ttemp5	set	btemp+1
  2072  0000                     ttemp6	set	btemp+4
  2073  0000                     ttemp7	set	btemp+8
  2074                           
  2075                           	psect	idloc
  2076                           
  2077                           ;Config register IDLOC0 @ 0x200000
  2078                           ;	unspecified, using default values
  2079  200000                     	org	2097152
  2080  200000  FFFF               	dw	65535
  2081                           
  2082                           ;Config register IDLOC1 @ 0x200002
  2083                           ;	unspecified, using default values
  2084  200002                     	org	2097154
  2085  200002  FFFF               	dw	65535
  2086                           
  2087                           ;Config register IDLOC2 @ 0x200004
  2088                           ;	unspecified, using default values
  2089  200004                     	org	2097156
  2090  200004  FFFF               	dw	65535
  2091                           
  2092                           ;Config register IDLOC3 @ 0x200006
  2093                           ;	unspecified, using default values
  2094  200006                     	org	2097158
  2095  200006  FFFF               	dw	65535
  2096                           
  2097                           ;Config register IDLOC4 @ 0x200008
  2098                           ;	unspecified, using default values
  2099  200008                     	org	2097160
  2100  200008  FFFF               	dw	65535
  2101                           
  2102                           ;Config register IDLOC5 @ 0x20000A
  2103                           ;	unspecified, using default values
  2104  20000A                     	org	2097162
  2105  20000A  FFFF               	dw	65535
  2106                           
  2107                           ;Config register IDLOC6 @ 0x20000C
  2108                           ;	unspecified, using default values
  2109  20000C                     	org	2097164
  2110  20000C  FFFF               	dw	65535
  2111                           
  2112                           ;Config register IDLOC7 @ 0x20000E
  2113                           ;	unspecified, using default values
  2114  20000E                     	org	2097166
  2115  20000E  FFFF               	dw	65535
  2116                           
  2117                           ;Config register IDLOC8 @ 0x200010
  2118                           ;	unspecified, using default values
  2119  200010                     	org	2097168
  2120  200010  FFFF               	dw	65535
  2121                           
  2122                           ;Config register IDLOC9 @ 0x200012
  2123                           ;	unspecified, using default values
  2124  200012                     	org	2097170
  2125  200012  FFFF               	dw	65535
  2126                           
  2127                           ;Config register IDLOC10 @ 0x200014
  2128                           ;	unspecified, using default values
  2129  200014                     	org	2097172
  2130  200014  FFFF               	dw	65535
  2131                           
  2132                           ;Config register IDLOC11 @ 0x200016
  2133                           ;	unspecified, using default values
  2134  200016                     	org	2097174
  2135  200016  FFFF               	dw	65535
  2136                           
  2137                           ;Config register IDLOC12 @ 0x200018
  2138                           ;	unspecified, using default values
  2139  200018                     	org	2097176
  2140  200018  FFFF               	dw	65535
  2141                           
  2142                           ;Config register IDLOC13 @ 0x20001A
  2143                           ;	unspecified, using default values
  2144  20001A                     	org	2097178
  2145  20001A  FFFF               	dw	65535
  2146                           
  2147                           ;Config register IDLOC14 @ 0x20001C
  2148                           ;	unspecified, using default values
  2149  20001C                     	org	2097180
  2150  20001C  FFFF               	dw	65535
  2151                           
  2152                           ;Config register IDLOC15 @ 0x20001E
  2153                           ;	unspecified, using default values
  2154  20001E                     	org	2097182
  2155  20001E  FFFF               	dw	65535
  2156                           
  2157                           ;Config register IDLOC16 @ 0x200020
  2158                           ;	unspecified, using default values
  2159  200020                     	org	2097184
  2160  200020  FFFF               	dw	65535
  2161                           
  2162                           ;Config register IDLOC17 @ 0x200022
  2163                           ;	unspecified, using default values
  2164  200022                     	org	2097186
  2165  200022  FFFF               	dw	65535
  2166                           
  2167                           ;Config register IDLOC18 @ 0x200024
  2168                           ;	unspecified, using default values
  2169  200024                     	org	2097188
  2170  200024  FFFF               	dw	65535
  2171                           
  2172                           ;Config register IDLOC19 @ 0x200026
  2173                           ;	unspecified, using default values
  2174  200026                     	org	2097190
  2175  200026  FFFF               	dw	65535
  2176                           
  2177                           ;Config register IDLOC20 @ 0x200028
  2178                           ;	unspecified, using default values
  2179  200028                     	org	2097192
  2180  200028  FFFF               	dw	65535
  2181                           
  2182                           ;Config register IDLOC21 @ 0x20002A
  2183                           ;	unspecified, using default values
  2184  20002A                     	org	2097194
  2185  20002A  FFFF               	dw	65535
  2186                           
  2187                           ;Config register IDLOC22 @ 0x20002C
  2188                           ;	unspecified, using default values
  2189  20002C                     	org	2097196
  2190  20002C  FFFF               	dw	65535
  2191                           
  2192                           ;Config register IDLOC23 @ 0x20002E
  2193                           ;	unspecified, using default values
  2194  20002E                     	org	2097198
  2195  20002E  FFFF               	dw	65535
  2196                           
  2197                           ;Config register IDLOC24 @ 0x200030
  2198                           ;	unspecified, using default values
  2199  200030                     	org	2097200
  2200  200030  FFFF               	dw	65535
  2201                           
  2202                           ;Config register IDLOC25 @ 0x200032
  2203                           ;	unspecified, using default values
  2204  200032                     	org	2097202
  2205  200032  FFFF               	dw	65535
  2206                           
  2207                           ;Config register IDLOC26 @ 0x200034
  2208                           ;	unspecified, using default values
  2209  200034                     	org	2097204
  2210  200034  FFFF               	dw	65535
  2211                           
  2212                           ;Config register IDLOC27 @ 0x200036
  2213                           ;	unspecified, using default values
  2214  200036                     	org	2097206
  2215  200036  FFFF               	dw	65535
  2216                           
  2217                           ;Config register IDLOC28 @ 0x200038
  2218                           ;	unspecified, using default values
  2219  200038                     	org	2097208
  2220  200038  FFFF               	dw	65535
  2221                           
  2222                           ;Config register IDLOC29 @ 0x20003A
  2223                           ;	unspecified, using default values
  2224  20003A                     	org	2097210
  2225  20003A  FFFF               	dw	65535
  2226                           
  2227                           ;Config register IDLOC30 @ 0x20003C
  2228                           ;	unspecified, using default values
  2229  20003C                     	org	2097212
  2230  20003C  FFFF               	dw	65535
  2231                           
  2232                           ;Config register IDLOC31 @ 0x20003E
  2233                           ;	unspecified, using default values
  2234  20003E                     	org	2097214
  2235  20003E  FFFF               	dw	65535
  2236                           
  2237                           ;Config register IDLOC32 @ 0x200040
  2238                           ;	unspecified, using default values
  2239  200040                     	org	2097216
  2240  200040  FFFF               	dw	65535
  2241                           
  2242                           ;Config register IDLOC33 @ 0x200042
  2243                           ;	unspecified, using default values
  2244  200042                     	org	2097218
  2245  200042  FFFF               	dw	65535
  2246                           
  2247                           ;Config register IDLOC34 @ 0x200044
  2248                           ;	unspecified, using default values
  2249  200044                     	org	2097220
  2250  200044  FFFF               	dw	65535
  2251                           
  2252                           ;Config register IDLOC35 @ 0x200046
  2253                           ;	unspecified, using default values
  2254  200046                     	org	2097222
  2255  200046  FFFF               	dw	65535
  2256                           
  2257                           ;Config register IDLOC36 @ 0x200048
  2258                           ;	unspecified, using default values
  2259  200048                     	org	2097224
  2260  200048  FFFF               	dw	65535
  2261                           
  2262                           ;Config register IDLOC37 @ 0x20004A
  2263                           ;	unspecified, using default values
  2264  20004A                     	org	2097226
  2265  20004A  FFFF               	dw	65535
  2266                           
  2267                           ;Config register IDLOC38 @ 0x20004C
  2268                           ;	unspecified, using default values
  2269  20004C                     	org	2097228
  2270  20004C  FFFF               	dw	65535
  2271                           
  2272                           ;Config register IDLOC39 @ 0x20004E
  2273                           ;	unspecified, using default values
  2274  20004E                     	org	2097230
  2275  20004E  FFFF               	dw	65535
  2276                           
  2277                           ;Config register IDLOC40 @ 0x200050
  2278                           ;	unspecified, using default values
  2279  200050                     	org	2097232
  2280  200050  FFFF               	dw	65535
  2281                           
  2282                           ;Config register IDLOC41 @ 0x200052
  2283                           ;	unspecified, using default values
  2284  200052                     	org	2097234
  2285  200052  FFFF               	dw	65535
  2286                           
  2287                           ;Config register IDLOC42 @ 0x200054
  2288                           ;	unspecified, using default values
  2289  200054                     	org	2097236
  2290  200054  FFFF               	dw	65535
  2291                           
  2292                           ;Config register IDLOC43 @ 0x200056
  2293                           ;	unspecified, using default values
  2294  200056                     	org	2097238
  2295  200056  FFFF               	dw	65535
  2296                           
  2297                           ;Config register IDLOC44 @ 0x200058
  2298                           ;	unspecified, using default values
  2299  200058                     	org	2097240
  2300  200058  FFFF               	dw	65535
  2301                           
  2302                           ;Config register IDLOC45 @ 0x20005A
  2303                           ;	unspecified, using default values
  2304  20005A                     	org	2097242
  2305  20005A  FFFF               	dw	65535
  2306                           
  2307                           ;Config register IDLOC46 @ 0x20005C
  2308                           ;	unspecified, using default values
  2309  20005C                     	org	2097244
  2310  20005C  FFFF               	dw	65535
  2311                           
  2312                           ;Config register IDLOC47 @ 0x20005E
  2313                           ;	unspecified, using default values
  2314  20005E                     	org	2097246
  2315  20005E  FFFF               	dw	65535
  2316                           
  2317                           ;Config register IDLOC48 @ 0x200060
  2318                           ;	unspecified, using default values
  2319  200060                     	org	2097248
  2320  200060  FFFF               	dw	65535
  2321                           
  2322                           ;Config register IDLOC49 @ 0x200062
  2323                           ;	unspecified, using default values
  2324  200062                     	org	2097250
  2325  200062  FFFF               	dw	65535
  2326                           
  2327                           ;Config register IDLOC50 @ 0x200064
  2328                           ;	unspecified, using default values
  2329  200064                     	org	2097252
  2330  200064  FFFF               	dw	65535
  2331                           
  2332                           ;Config register IDLOC51 @ 0x200066
  2333                           ;	unspecified, using default values
  2334  200066                     	org	2097254
  2335  200066  FFFF               	dw	65535
  2336                           
  2337                           ;Config register IDLOC52 @ 0x200068
  2338                           ;	unspecified, using default values
  2339  200068                     	org	2097256
  2340  200068  FFFF               	dw	65535
  2341                           
  2342                           ;Config register IDLOC53 @ 0x20006A
  2343                           ;	unspecified, using default values
  2344  20006A                     	org	2097258
  2345  20006A  FFFF               	dw	65535
  2346                           
  2347                           ;Config register IDLOC54 @ 0x20006C
  2348                           ;	unspecified, using default values
  2349  20006C                     	org	2097260
  2350  20006C  FFFF               	dw	65535
  2351                           
  2352                           ;Config register IDLOC55 @ 0x20006E
  2353                           ;	unspecified, using default values
  2354  20006E                     	org	2097262
  2355  20006E  FFFF               	dw	65535
  2356                           
  2357                           ;Config register IDLOC56 @ 0x200070
  2358                           ;	unspecified, using default values
  2359  200070                     	org	2097264
  2360  200070  FFFF               	dw	65535
  2361                           
  2362                           ;Config register IDLOC57 @ 0x200072
  2363                           ;	unspecified, using default values
  2364  200072                     	org	2097266
  2365  200072  FFFF               	dw	65535
  2366                           
  2367                           ;Config register IDLOC58 @ 0x200074
  2368                           ;	unspecified, using default values
  2369  200074                     	org	2097268
  2370  200074  FFFF               	dw	65535
  2371                           
  2372                           ;Config register IDLOC59 @ 0x200076
  2373                           ;	unspecified, using default values
  2374  200076                     	org	2097270
  2375  200076  FFFF               	dw	65535
  2376                           
  2377                           ;Config register IDLOC60 @ 0x200078
  2378                           ;	unspecified, using default values
  2379  200078                     	org	2097272
  2380  200078  FFFF               	dw	65535
  2381                           
  2382                           ;Config register IDLOC61 @ 0x20007A
  2383                           ;	unspecified, using default values
  2384  20007A                     	org	2097274
  2385  20007A  FFFF               	dw	65535
  2386                           
  2387                           ;Config register IDLOC62 @ 0x20007C
  2388                           ;	unspecified, using default values
  2389  20007C                     	org	2097276
  2390  20007C  FFFF               	dw	65535
  2391                           
  2392                           ;Config register IDLOC63 @ 0x20007E
  2393                           ;	unspecified, using default values
  2394  20007E                     	org	2097278
  2395  20007E  FFFF               	dw	65535
  2396                           
  2397                           ;Config register IDLOC64 @ 0x200080
  2398                           ;	unspecified, using default values
  2399  200080                     	org	2097280
  2400  200080  FFFF               	dw	65535
  2401                           
  2402                           ;Config register IDLOC65 @ 0x200082
  2403                           ;	unspecified, using default values
  2404  200082                     	org	2097282
  2405  200082  FFFF               	dw	65535
  2406                           
  2407                           ;Config register IDLOC66 @ 0x200084
  2408                           ;	unspecified, using default values
  2409  200084                     	org	2097284
  2410  200084  FFFF               	dw	65535
  2411                           
  2412                           ;Config register IDLOC67 @ 0x200086
  2413                           ;	unspecified, using default values
  2414  200086                     	org	2097286
  2415  200086  FFFF               	dw	65535
  2416                           
  2417                           ;Config register IDLOC68 @ 0x200088
  2418                           ;	unspecified, using default values
  2419  200088                     	org	2097288
  2420  200088  FFFF               	dw	65535
  2421                           
  2422                           ;Config register IDLOC69 @ 0x20008A
  2423                           ;	unspecified, using default values
  2424  20008A                     	org	2097290
  2425  20008A  FFFF               	dw	65535
  2426                           
  2427                           ;Config register IDLOC70 @ 0x20008C
  2428                           ;	unspecified, using default values
  2429  20008C                     	org	2097292
  2430  20008C  FFFF               	dw	65535
  2431                           
  2432                           ;Config register IDLOC71 @ 0x20008E
  2433                           ;	unspecified, using default values
  2434  20008E                     	org	2097294
  2435  20008E  FFFF               	dw	65535
  2436                           
  2437                           ;Config register IDLOC72 @ 0x200090
  2438                           ;	unspecified, using default values
  2439  200090                     	org	2097296
  2440  200090  FFFF               	dw	65535
  2441                           
  2442                           ;Config register IDLOC73 @ 0x200092
  2443                           ;	unspecified, using default values
  2444  200092                     	org	2097298
  2445  200092  FFFF               	dw	65535
  2446                           
  2447                           ;Config register IDLOC74 @ 0x200094
  2448                           ;	unspecified, using default values
  2449  200094                     	org	2097300
  2450  200094  FFFF               	dw	65535
  2451                           
  2452                           ;Config register IDLOC75 @ 0x200096
  2453                           ;	unspecified, using default values
  2454  200096                     	org	2097302
  2455  200096  FFFF               	dw	65535
  2456                           
  2457                           ;Config register IDLOC76 @ 0x200098
  2458                           ;	unspecified, using default values
  2459  200098                     	org	2097304
  2460  200098  FFFF               	dw	65535
  2461                           
  2462                           ;Config register IDLOC77 @ 0x20009A
  2463                           ;	unspecified, using default values
  2464  20009A                     	org	2097306
  2465  20009A  FFFF               	dw	65535
  2466                           
  2467                           ;Config register IDLOC78 @ 0x20009C
  2468                           ;	unspecified, using default values
  2469  20009C                     	org	2097308
  2470  20009C  FFFF               	dw	65535
  2471                           
  2472                           ;Config register IDLOC79 @ 0x20009E
  2473                           ;	unspecified, using default values
  2474  20009E                     	org	2097310
  2475  20009E  FFFF               	dw	65535
  2476                           
  2477                           ;Config register IDLOC80 @ 0x2000A0
  2478                           ;	unspecified, using default values
  2479  2000A0                     	org	2097312
  2480  2000A0  FFFF               	dw	65535
  2481                           
  2482                           ;Config register IDLOC81 @ 0x2000A2
  2483                           ;	unspecified, using default values
  2484  2000A2                     	org	2097314
  2485  2000A2  FFFF               	dw	65535
  2486                           
  2487                           ;Config register IDLOC82 @ 0x2000A4
  2488                           ;	unspecified, using default values
  2489  2000A4                     	org	2097316
  2490  2000A4  FFFF               	dw	65535
  2491                           
  2492                           ;Config register IDLOC83 @ 0x2000A6
  2493                           ;	unspecified, using default values
  2494  2000A6                     	org	2097318
  2495  2000A6  FFFF               	dw	65535
  2496                           
  2497                           ;Config register IDLOC84 @ 0x2000A8
  2498                           ;	unspecified, using default values
  2499  2000A8                     	org	2097320
  2500  2000A8  FFFF               	dw	65535
  2501                           
  2502                           ;Config register IDLOC85 @ 0x2000AA
  2503                           ;	unspecified, using default values
  2504  2000AA                     	org	2097322
  2505  2000AA  FFFF               	dw	65535
  2506                           
  2507                           ;Config register IDLOC86 @ 0x2000AC
  2508                           ;	unspecified, using default values
  2509  2000AC                     	org	2097324
  2510  2000AC  FFFF               	dw	65535
  2511                           
  2512                           ;Config register IDLOC87 @ 0x2000AE
  2513                           ;	unspecified, using default values
  2514  2000AE                     	org	2097326
  2515  2000AE  FFFF               	dw	65535
  2516                           
  2517                           ;Config register IDLOC88 @ 0x2000B0
  2518                           ;	unspecified, using default values
  2519  2000B0                     	org	2097328
  2520  2000B0  FFFF               	dw	65535
  2521                           
  2522                           ;Config register IDLOC89 @ 0x2000B2
  2523                           ;	unspecified, using default values
  2524  2000B2                     	org	2097330
  2525  2000B2  FFFF               	dw	65535
  2526                           
  2527                           ;Config register IDLOC90 @ 0x2000B4
  2528                           ;	unspecified, using default values
  2529  2000B4                     	org	2097332
  2530  2000B4  FFFF               	dw	65535
  2531                           
  2532                           ;Config register IDLOC91 @ 0x2000B6
  2533                           ;	unspecified, using default values
  2534  2000B6                     	org	2097334
  2535  2000B6  FFFF               	dw	65535
  2536                           
  2537                           ;Config register IDLOC92 @ 0x2000B8
  2538                           ;	unspecified, using default values
  2539  2000B8                     	org	2097336
  2540  2000B8  FFFF               	dw	65535
  2541                           
  2542                           ;Config register IDLOC93 @ 0x2000BA
  2543                           ;	unspecified, using default values
  2544  2000BA                     	org	2097338
  2545  2000BA  FFFF               	dw	65535
  2546                           
  2547                           ;Config register IDLOC94 @ 0x2000BC
  2548                           ;	unspecified, using default values
  2549  2000BC                     	org	2097340
  2550  2000BC  FFFF               	dw	65535
  2551                           
  2552                           ;Config register IDLOC95 @ 0x2000BE
  2553                           ;	unspecified, using default values
  2554  2000BE                     	org	2097342
  2555  2000BE  FFFF               	dw	65535
  2556                           
  2557                           ;Config register IDLOC96 @ 0x2000C0
  2558                           ;	unspecified, using default values
  2559  2000C0                     	org	2097344
  2560  2000C0  FFFF               	dw	65535
  2561                           
  2562                           ;Config register IDLOC97 @ 0x2000C2
  2563                           ;	unspecified, using default values
  2564  2000C2                     	org	2097346
  2565  2000C2  FFFF               	dw	65535
  2566                           
  2567                           ;Config register IDLOC98 @ 0x2000C4
  2568                           ;	unspecified, using default values
  2569  2000C4                     	org	2097348
  2570  2000C4  FFFF               	dw	65535
  2571                           
  2572                           ;Config register IDLOC99 @ 0x2000C6
  2573                           ;	unspecified, using default values
  2574  2000C6                     	org	2097350
  2575  2000C6  FFFF               	dw	65535
  2576                           
  2577                           ;Config register IDLOC100 @ 0x2000C8
  2578                           ;	unspecified, using default values
  2579  2000C8                     	org	2097352
  2580  2000C8  FFFF               	dw	65535
  2581                           
  2582                           ;Config register IDLOC101 @ 0x2000CA
  2583                           ;	unspecified, using default values
  2584  2000CA                     	org	2097354
  2585  2000CA  FFFF               	dw	65535
  2586                           
  2587                           ;Config register IDLOC102 @ 0x2000CC
  2588                           ;	unspecified, using default values
  2589  2000CC                     	org	2097356
  2590  2000CC  FFFF               	dw	65535
  2591                           
  2592                           ;Config register IDLOC103 @ 0x2000CE
  2593                           ;	unspecified, using default values
  2594  2000CE                     	org	2097358
  2595  2000CE  FFFF               	dw	65535
  2596                           
  2597                           ;Config register IDLOC104 @ 0x2000D0
  2598                           ;	unspecified, using default values
  2599  2000D0                     	org	2097360
  2600  2000D0  FFFF               	dw	65535
  2601                           
  2602                           ;Config register IDLOC105 @ 0x2000D2
  2603                           ;	unspecified, using default values
  2604  2000D2                     	org	2097362
  2605  2000D2  FFFF               	dw	65535
  2606                           
  2607                           ;Config register IDLOC106 @ 0x2000D4
  2608                           ;	unspecified, using default values
  2609  2000D4                     	org	2097364
  2610  2000D4  FFFF               	dw	65535
  2611                           
  2612                           ;Config register IDLOC107 @ 0x2000D6
  2613                           ;	unspecified, using default values
  2614  2000D6                     	org	2097366
  2615  2000D6  FFFF               	dw	65535
  2616                           
  2617                           ;Config register IDLOC108 @ 0x2000D8
  2618                           ;	unspecified, using default values
  2619  2000D8                     	org	2097368
  2620  2000D8  FFFF               	dw	65535
  2621                           
  2622                           ;Config register IDLOC109 @ 0x2000DA
  2623                           ;	unspecified, using default values
  2624  2000DA                     	org	2097370
  2625  2000DA  FFFF               	dw	65535
  2626                           
  2627                           ;Config register IDLOC110 @ 0x2000DC
  2628                           ;	unspecified, using default values
  2629  2000DC                     	org	2097372
  2630  2000DC  FFFF               	dw	65535
  2631                           
  2632                           ;Config register IDLOC111 @ 0x2000DE
  2633                           ;	unspecified, using default values
  2634  2000DE                     	org	2097374
  2635  2000DE  FFFF               	dw	65535
  2636                           
  2637                           ;Config register IDLOC112 @ 0x2000E0
  2638                           ;	unspecified, using default values
  2639  2000E0                     	org	2097376
  2640  2000E0  FFFF               	dw	65535
  2641                           
  2642                           ;Config register IDLOC113 @ 0x2000E2
  2643                           ;	unspecified, using default values
  2644  2000E2                     	org	2097378
  2645  2000E2  FFFF               	dw	65535
  2646                           
  2647                           ;Config register IDLOC114 @ 0x2000E4
  2648                           ;	unspecified, using default values
  2649  2000E4                     	org	2097380
  2650  2000E4  FFFF               	dw	65535
  2651                           
  2652                           ;Config register IDLOC115 @ 0x2000E6
  2653                           ;	unspecified, using default values
  2654  2000E6                     	org	2097382
  2655  2000E6  FFFF               	dw	65535
  2656                           
  2657                           ;Config register IDLOC116 @ 0x2000E8
  2658                           ;	unspecified, using default values
  2659  2000E8                     	org	2097384
  2660  2000E8  FFFF               	dw	65535
  2661                           
  2662                           ;Config register IDLOC117 @ 0x2000EA
  2663                           ;	unspecified, using default values
  2664  2000EA                     	org	2097386
  2665  2000EA  FFFF               	dw	65535
  2666                           
  2667                           ;Config register IDLOC118 @ 0x2000EC
  2668                           ;	unspecified, using default values
  2669  2000EC                     	org	2097388
  2670  2000EC  FFFF               	dw	65535
  2671                           
  2672                           ;Config register IDLOC119 @ 0x2000EE
  2673                           ;	unspecified, using default values
  2674  2000EE                     	org	2097390
  2675  2000EE  FFFF               	dw	65535
  2676                           
  2677                           ;Config register IDLOC120 @ 0x2000F0
  2678                           ;	unspecified, using default values
  2679  2000F0                     	org	2097392
  2680  2000F0  FFFF               	dw	65535
  2681                           
  2682                           ;Config register IDLOC121 @ 0x2000F2
  2683                           ;	unspecified, using default values
  2684  2000F2                     	org	2097394
  2685  2000F2  FFFF               	dw	65535
  2686                           
  2687                           ;Config register IDLOC122 @ 0x2000F4
  2688                           ;	unspecified, using default values
  2689  2000F4                     	org	2097396
  2690  2000F4  FFFF               	dw	65535
  2691                           
  2692                           ;Config register IDLOC123 @ 0x2000F6
  2693                           ;	unspecified, using default values
  2694  2000F6                     	org	2097398
  2695  2000F6  FFFF               	dw	65535
  2696                           
  2697                           ;Config register IDLOC124 @ 0x2000F8
  2698                           ;	unspecified, using default values
  2699  2000F8                     	org	2097400
  2700  2000F8  FFFF               	dw	65535
  2701                           
  2702                           ;Config register IDLOC125 @ 0x2000FA
  2703                           ;	unspecified, using default values
  2704  2000FA                     	org	2097402
  2705  2000FA  FFFF               	dw	65535
  2706                           
  2707                           ;Config register IDLOC126 @ 0x2000FC
  2708                           ;	unspecified, using default values
  2709  2000FC                     	org	2097404
  2710  2000FC  FFFF               	dw	65535
  2711                           
  2712                           ;Config register IDLOC127 @ 0x2000FE
  2713                           ;	unspecified, using default values
  2714  2000FE                     	org	2097406
  2715  2000FE  FFFF               	dw	65535
  2716                           
  2717                           	psect	config
  2718                           
  2719                           ;Config register CONFIG1L @ 0x300000
  2720                           ;	External Oscillator mode Selection bits
  2721                           ;	FEXTOSC = OFF, Oscillator not enabled
  2722                           ;	Power-up default value for COSC bits
  2723                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  2724  300000                     	org	3145728
  2725  300000  8C                 	db	140
  2726                           
  2727                           ;Config register CONFIG1H @ 0x300001
  2728                           ;	Clock Out Enable bit
  2729                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2730                           ;	Clock Switch Enable bit
  2731                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2732                           ;	Fail-Safe Clock Monitor Enable bit
  2733                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2734  300001                     	org	3145729
  2735  300001  FF                 	db	255
  2736                           
  2737                           ;Config register CONFIG2L @ 0x300002
  2738                           ;	Master Clear Enable bit
  2739                           ;	MCLRE = EXTMCLR, MCLR pin (RE3) is MCLR
  2740                           ;	Power-up Timer Enable bit
  2741                           ;	PWRTE = OFF, Power up timer disabled
  2742                           ;	Low-power BOR enable bit
  2743                           ;	LPBOREN = OFF, Low power BOR is disabled
  2744                           ;	Brown-out Reset Enable bits
  2745                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  2746  300002                     	org	3145730
  2747  300002  FF                 	db	255
  2748                           
  2749                           ;Config register CONFIG2H @ 0x300003
  2750                           ;	Brown Out Reset Voltage selection bits
  2751                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
  2752                           ;	ZCD Disable bit
  2753                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  2754                           ;	PPSLOCK bit One-Way Set Enable bit
  2755                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  2756                           ;	Stack Full/Underflow Reset Enable bit
  2757                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2758                           ;	Extended Instruction Set Enable bit
  2759                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2760  300003                     	org	3145731
  2761  300003  FF                 	db	255
  2762                           
  2763                           ;Config register CONFIG3L @ 0x300004
  2764                           ;	WDT Period Select bits
  2765                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2766                           ;	WDT operating mode
  2767                           ;	WDTE = OFF, WDT Disabled
  2768  300004                     	org	3145732
  2769  300004  9F                 	db	159
  2770                           
  2771                           ;Config register CONFIG3H @ 0x300005
  2772                           ;	WDT Window Select bits
  2773                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2774                           ;	WDT input clock selector
  2775                           ;	WDTCCS = SC, Software Control
  2776  300005                     	org	3145733
  2777  300005  FF                 	db	255
  2778                           
  2779                           ;Config register CONFIG4L @ 0x300006
  2780                           ;	Write Protection Block 0
  2781                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2782                           ;	Write Protection Block 1
  2783                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2784                           ;	Write Protection Block 2
  2785                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2786                           ;	Write Protection Block 3
  2787                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2788  300006                     	org	3145734
  2789  300006  FF                 	db	255
  2790                           
  2791                           ;Config register CONFIG4H @ 0x300007
  2792                           ;	Configuration Register Write Protection bit
  2793                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  2794                           ;	Boot Block Write Protection bit
  2795                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2796                           ;	Data EEPROM Write Protection bit
  2797                           ;	WRTD = OFF, Data EEPROM not write-protected
  2798                           ;	Scanner Enable bit
  2799                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  2800                           ;	Low Voltage Programming Enable bit
  2801                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  2802  300007                     	org	3145735
  2803  300007  FF                 	db	255
  2804                           
  2805                           ;Config register CONFIG5L @ 0x300008
  2806                           ;	UserNVM Program Memory Code Protection bit
  2807                           ;	CP = OFF, UserNVM code protection disabled
  2808                           ;	DataNVM Memory Code Protection bit
  2809                           ;	CPD = OFF, DataNVM code protection disabled
  2810  300008                     	org	3145736
  2811  300008  FF                 	db	255
  2812                           
  2813                           ;Config register CONFIG5H @ 0x300009
  2814                           ;	unspecified, using default values
  2815  300009                     	org	3145737
  2816  300009  FF                 	db	255
  2817                           
  2818                           ;Config register CONFIG6L @ 0x30000A
  2819                           ;	Table Read Protection Block 0
  2820                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2821                           ;	Table Read Protection Block 1
  2822                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2823                           ;	Table Read Protection Block 2
  2824                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2825                           ;	Table Read Protection Block 3
  2826                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2827  30000A                     	org	3145738
  2828  30000A  FF                 	db	255
  2829                           
  2830                           ;Config register CONFIG6H @ 0x30000B
  2831                           ;	Boot Block Table Read Protection bit
  2832                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2833  30000B                     	org	3145739
  2834  30000B  FF                 	db	255
  2835                           tosu	equ	0xFFF
  2836                           tosh	equ	0xFFE
  2837                           tosl	equ	0xFFD
  2838                           stkptr	equ	0xFFC
  2839                           pclatu	equ	0xFFB
  2840                           pclath	equ	0xFFA
  2841                           pcl	equ	0xFF9
  2842                           tblptru	equ	0xFF8
  2843                           tblptrh	equ	0xFF7
  2844                           tblptrl	equ	0xFF6
  2845                           tablat	equ	0xFF5
  2846                           prodh	equ	0xFF4
  2847                           prodl	equ	0xFF3
  2848                           indf0	equ	0xFEF
  2849                           postinc0	equ	0xFEE
  2850                           postdec0	equ	0xFED
  2851                           preinc0	equ	0xFEC
  2852                           plusw0	equ	0xFEB
  2853                           fsr0h	equ	0xFEA
  2854                           fsr0l	equ	0xFE9
  2855                           wreg	equ	0xFE8
  2856                           indf1	equ	0xFE7
  2857                           postinc1	equ	0xFE6
  2858                           postdec1	equ	0xFE5
  2859                           preinc1	equ	0xFE4
  2860                           plusw1	equ	0xFE3
  2861                           fsr1h	equ	0xFE2
  2862                           fsr1l	equ	0xFE1
  2863                           bsr	equ	0xFE0
  2864                           indf2	equ	0xFDF
  2865                           postinc2	equ	0xFDE
  2866                           postdec2	equ	0xFDD
  2867                           preinc2	equ	0xFDC
  2868                           plusw2	equ	0xFDB
  2869                           fsr2h	equ	0xFDA
  2870                           fsr2l	equ	0xFD9
  2871                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         16
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     10      32
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           31      0       0

Pointer List with Targets:

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> msTick(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> msTick(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _appInit->_PWM3_LoadDutyValue
    _appInit->_PWM4_LoadDutyValue
    _appHandler->_setRed
    _setRed->_PWM3_LoadDutyValue
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1421
                  _SYSTEM_Initialize
                    _TMR4_StartTimer
                         _appHandler
                            _appInit
 ---------------------------------------------------------------------------------
 (1) _appInit                                              0     0      0     808
                 _PWM1_LoadDutyValue
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PWM4_LoadDutyValue                                   4     2      2     196
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _PWM1_LoadDutyValue                                   2     0      2     242
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _appHandler                                           0     0      0     341
                             _setRed
 ---------------------------------------------------------------------------------
 (2) _setRed                                               4     2      2     341
                                              6 COMRAM     4     2      2
                 _PWM3_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM3_LoadDutyValue                                   4     2      2     196
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _TMR4_StartTimer                                      0     0      0       0
                         _TMR4_Start
 ---------------------------------------------------------------------------------
 (2) _TMR4_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     272
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR0_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0      98
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR4_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                              4 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     174
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0       0
                                              0 COMRAM     2     2      0
                           _TMR0_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR4_ISR                                             0     0      0       0
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                             _msTick *
 ---------------------------------------------------------------------------------
 (7) _msTick                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM1_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
   _TMR4_StartTimer
     _TMR4_Start
   _appHandler
     _setRed
       _PWM3_LoadDutyValue
   _appInit
     _PWM1_LoadDutyValue
     _PWM3_LoadDutyValue
     _PWM4_LoadDutyValue
     _TMR0_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _msTick *
   _TMR4_ISR
     Absolute function(Fake) *
     _TMR4_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E1E      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      A      20       1       34.0%
BITBANK14           1F      0       0      33        0.0%
BANK14              1F      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      20       6        0.0%
DATA                 0      0      20       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Dec 21 12:57:08 2021

                                      l55 00D0                                       l101 0312  
                                     l104 037C                                       l107 034A  
                                     l203 03CE                                       l124 0402  
                                     l222 03BA                                       l208 0268  
                                     l225 0208                                       l162 01A0  
                                     l236 03A6                                       l317 03EA  
                                     l239 01D4                                       l274 02EC  
                                     l187 03F4                                       l283 03FE  
                                     l355 02C2                                       l286 03FA  
                                     l369 011E                                       l378 0166  
                                     u200 0252                                       u201 024E  
                                     u230 0130                                       u231 012C  
                                     u215 0254                                       u240 00F6  
                                     u241 00F2                                       u225 01C6  
                                     u251 00FC                                       _PR4 000FB5  
                                     u195 01FA                   __size_of_PMD_Initialize 001C  
                         _PWM4_Initialize 0394                                       tosl 000FFD  
                                     wreg 000FE8                                      l1100 0330  
                                    l1102 0366                                      l1110 0398  
                                    l1104 03BC                                      l1106 03C4  
                                    l1124 03A8                                      l1108 0394  
                                    l1204 03F6                                      l1126 03AC  
                                    l1080 008E                                      l1312 03EC  
                                    l1320 02D0                                      l1160 03FC  
                                    l1400 0314                                      l1090 00B6  
                                    l1082 0092                                      l1074 007A  
                                    l1330 0168                                      l1322 02D6  
                                    l1314 01D6                                      l1410 0324  
                                    l1402 0318                                      l1092 00B8  
                                    l1084 0094                                      l1076 0086  
                                    l1340 019C                                      l1332 0174  
                                    l1316 03E2                                      l1324 02DA  
                                    l1404 031C                                      l1094 00BA  
                                    l1086 00B2                                      l1078 0088  
                                    l1334 018A                                      l1326 02DC  
                                    l1318 02C4                                      l1350 0264  
                                    l1342 023C                                      l1406 0320  
                                    l1096 00BC                                      l1088 00B4  
                                    l1336 018E                                      l1328 02E8  
                                    l1360 0130                                      l1344 0244  
                                    l1408 0322                                      l1098 0400  
                                    l1338 0190                                      l1370 02F2  
                                    l1346 0252                                      l1380 0306  
                                    l1372 02F6                                      l1364 0136  
                                    l1348 0260                                      l1356 01A2  
                                    l1382 030A                                      l1374 02FA  
                                    l1366 015A                                      l1358 0120  
                                    l1390 00F6                                      l1384 030E  
                                    l1376 02FE                                      l1368 02EE  
                                    l1392 0102                                      l1378 0302  
                                    l1386 0298                                      l1396 010A  
                                    l1388 00D2                                      l1398 0112  
                 __end_of_PWM1_Initialize 03D0                                      _LATA 000F82  
                                    _LATB 000F83                                      _LATC 000F84  
                                    _T4PR 000FB5                                      _PMD0 000EDC  
                                    _PMD1 000EDD                                      _PMD2 000EDE  
                                    _PMD3 000EDF                                      _PMD4 000EE0  
                                    _PMD5 000EE1                                      _TMR4 000FB4  
                                    _WPUA 000F0B                                      _WPUB 000F13  
                                    _WPUC 000F1B                                      _WPUE 000F28  
                                    _main 0314                                      btemp 0021  
                                    start 0076                ??_TMR4_SetInterruptHandler 0015  
                            ___param_bank 000000                   __end_of_TMR0_Initialize 01A2  
          ??_TMR0_DefaultInterruptHandler 0011            __size_of_OSCILLATOR_Initialize 0018  
           __end_of_OSCILLATOR_Initialize 037E                                     ?_main 0011  
                                   _T4CON 000FB6                                     _T4HLT 000FB7  
                                   _T4TMR 000FB4                                     i2l134 006A  
                                   i2l135 006A                                     i2l320 0404  
                                   i2l129 0038                                     i2l314 023A  
                                   _T4RST 000FB9                                     i2l180 03E0  
                                   i2l190 0406                                     i2l184 0296  
                                   i2l372 0392                                     _OSCEN 000ED7  
                      _PWM4_LoadDutyValue 01A2                                     _TMR0H 000FD3  
                                   _TMR0L 000FD2                                     _TRISA 000F87  
                                   _TRISB 000F88                                     _TRISC 000F89  
       __size_of_TMR0_SetInterruptHandler 000A                           __end_of_appInit 02C4  
                         _TMR4_Initialize 02C4                 ?_TMR0_SetInterruptHandler 0013  
                        __end_of_TMR0_ISR 03E2                          __end_of_TMR4_ISR 023C  
                             ?_TMR4_Start 0011                       ?_PWM4_LoadDutyValue 0013  
                 __end_of_PWM3_Initialize 03BC                                     pclath 000FFA  
                                   ttemp5 0022                                     ttemp6 0025  
                                   ttemp7 0029                                     status 000FD8  
                                   wtemp8 0022                           __initialization 034C  
                            __end_of_main 0330                      ??_PWM4_LoadDutyValue 0015  
                 __end_of_PWM4_Initialize 03A8               ?_INTERRUPT_InterruptManager 0011  
                                  ??_main 001B                             __activetblptr 000002  
                                  _CCPR1H 000FAA                                    _CCPR1L 000FA9  
                                  _ANSELA 000F0C                                    _ANSELB 000F14  
                                  _ANSELC 000F1C                                    _T0CON0 000FD4  
                                  _T0CON1 000FD5                                    _RC1PPS 000EF3  
                                  _RC3PPS 000EF5                          ?_PWM1_Initialize 0011  
                                  _RC5PPS 000EF7                                    _ODCONA 000F0A  
                                  _ODCONB 000F12                                    _ODCONC 000F1A  
                                  i2l1200 020E                                    i2l1202 0220  
                                  i2l1140 026A                                    i2l1142 027C  
                                  i2l1072 037E                                    i2l1240 0054  
                                  i2l1232 0012                                    i2l1242 0062  
                                  i2l1234 0022                                    i2l1236 0030  
                                  i2l1190 03D0                                    i2l1238 0046  
                                  i2l1192 03D4                                    i2l1194 03D8  
                                  i2l1196 03DC                                    i2l1198 020A  
                                  _INLVLA 000F08                                    _INLVLB 000F10  
                                  _INLVLC 000F18                                    _INLVLE 000F25  
                                  _OSCFRQ 000ED9                                    i2u2_40 027C  
                                  i2u2_41 0278                                    i2u3_48 0282  
                                  i2u3_49 0296                                    i2u8_40 0220  
                                  i2u8_41 021C                                    i2u9_48 0226  
                                  i2u9_49 023A                           _TMR4_StartTimer 03F6  
             __size_of_PWM3_LoadDutyValue 0034                       __size_of_TMR4_Start 0004  
                                  _msTick 037E                          ?_TMR0_Initialize 0011  
                 __end_of_TMR4_Initialize 02EE                                    clear_0 0352  
                                  _setRed 0120                                 ??_appInit 0017  
                                  isa$std 000001      __end_of_TMR4_DefaultInterruptHandler 0406  
   __size_of_TMR4_DefaultInterruptHandler 0002              _TMR4_DefaultInterruptHandler 0404  
                          _PMD_Initialize 0330                                    tblptru 000FF8  
                   __end_of_TMR0_CallBack 0298  TMR4_SetInterruptHandler@InterruptHandler 0013  
TMR0_SetInterruptHandler@InterruptHandler 0013             __size_of_INTERRUPT_Initialize 0004  
                        ?_PWM3_Initialize 0011                         _SYSTEM_Initialize 02EE  
                              __accesstop 0060                   __end_of__initialization 0358  
                      ?_SYSTEM_Initialize 0011                             ___rparam_used 000001  
             PWM1_LoadDutyValue@dutyValue 0013                            __pcstackCOMRAM 0011  
                     ??_SYSTEM_Initialize 0017                                 ?_TMR0_ISR 0011  
                               ?_TMR4_ISR 0011                        _PWM1_LoadDutyValue 023C  
                        ?_PWM4_Initialize 0011                    __end_of_PMD_Initialize 034C  
             PWM4_LoadDutyValue@dutyValue 0013                       ?_PWM1_LoadDutyValue 0013  
         fp__TMR4_DefaultInterruptHandler 0000             ?_TMR4_DefaultInterruptHandler 0011  
                 __end_of_TMR4_StartTimer 03FC                 __end_of_SYSTEM_Initialize 0314  
                              __pnvCOMRAM 001B                                _appHandler 00D2  
                   _TMR4_InterruptHandler 001B                      ??_PWM1_LoadDutyValue 0015  
        __end_of_TMR0_SetInterruptHandler 03F6                                ??_TMR0_ISR 0011  
                              ??_TMR4_ISR 0011                               setRed@value 0017  
                                 _CCP1CON 000FAB                                   ?_msTick 0011  
                                 ?_setRed 0017                          ?_TMR4_Initialize 0011  
                      appHandler@redValue 000D                           ?_PMD_Initialize 0011  
                                 _OSCCON1 000ED3                                   _OSCCON3 000ED5  
                                 i2u12_40 0022                                   i2u12_41 001E  
                                 i2u13_40 0030                                   i2u13_41 002C  
                                 i2u14_40 0046                                   i2u14_41 0042  
                                 i2u15_40 0054                                   i2u15_41 0050  
                                 i2u16_40 0062                                   i2u16_41 005E  
                                 _OSCTUNE 000ED8                                   _PWM3DCH 000FA3  
                                 _PWM3DCL 000FA2                                   _PWM4DCH 000FA0  
                                 _PWM4DCL 000F9F                                   _PWM3CON 000FA4  
                                 _PWM4CON 000FA1                                   _SLRCONA 000F09  
                                 _SLRCONB 000F11                                   _SLRCONC 000F19  
                            ??_TMR4_Start 0013                      appHandler@greenValue 000F  
                                 __Hparam 0000                                   __Lparam 0000  
                                 __pcinit 034C                           __size_of_msTick 0016  
                      __end_of_TMR4_Start 0400                                   _appInit 0298  
                                 __ramtop 0F00                           __size_of_setRed 0048  
                                 __ptext0 0314                                   __ptext1 0298  
                                 __ptext2 01A2                                   __ptext3 023C  
                                 __ptext4 00D2                                   __ptext5 0120  
                                 __ptext6 01D6                                   __ptext7 03F6  
                                 __ptext8 03FC                                   __ptext9 02EE  
                   _OSCILLATOR_Initialize 0366                                   _msTicks 0001  
                               _T4CONbits 000FB6                  ??_PIN_MANAGER_Initialize 0013  
       __size_of_TMR4_SetInterruptHandler 000A                 ?_TMR4_SetInterruptHandler 0013  
                               _T4HLTbits 000FB7                __size_of_SYSTEM_Initialize 0026  
                        ?_TMR4_StartTimer 0011                      end_of_initialization 0358  
          ??_TMR4_DefaultInterruptHandler 0011                                 _T4RSTbits 000FB9  
                           __Lmediumconst 0000                               ?_appHandler 0011  
                                 postinc0 000FEE                                   postinc2 000FDE  
             __size_of_PWM4_LoadDutyValue 0034                  _TMR0_SetInterruptHandler 03EC  
                             _CCP1CONbits 000FAB                __end_of_PWM3_LoadDutyValue 020A  
                __size_of_PWM1_Initialize 0014                      _timer0ReloadVal16bit 001F  
            __end_of_INTERRUPT_Initialize 0404                         __size_of_TMR0_ISR 0012  
                       __size_of_TMR4_ISR 0032                    ?_OSCILLATOR_Initialize 0011  
                          __end_of_msTick 0394                            __end_of_setRed 0168  
                     __size_of_appHandler 004E                       start_initialization 034C  
                __size_of_TMR0_Initialize 003A           __size_of_PIN_MANAGER_Initialize 0058  
                __size_of_PWM3_Initialize 0014                          ??_PMD_Initialize 0013  
                             _CCPTMRSbits 000FAD                    __size_of_TMR0_CallBack 002E  
                                ??_msTick 0011                                  ??_setRed 0019  
                             __pbssCOMRAM 0001                  __size_of_PWM4_Initialize 0014  
                   _TMR0_InterruptHandler 001D               __size_of_PWM1_LoadDutyValue 002E  
                  _PIN_MANAGER_Initialize 007A                       appHandler@blueValue 000B  
                               __pintcode 0008          __end_of_TMR4_SetInterruptHandler 03EC  
                                ?_appInit 0011                         ??_PWM1_Initialize 0013  
            ??_INTERRUPT_InterruptManager 0011                  __size_of_TMR4_Initialize 002A  
                           _TMR0_CallBack 026A                                  _T4CLKCON 000FB8  
                    _INTERRUPT_Initialize 0400                         ??_TMR0_Initialize 0015  
                            ??_appHandler 001B                                  _PIE0bits 000EBD  
                                _PIE4bits 000EC1       __size_of_INTERRUPT_InterruptManager 006E  
              ??_TMR0_SetInterruptHandler 0015                                  _PIR0bits 000EC5  
                                _PIR4bits 000EC9                                  _TMR0_ISR 03D0  
                                _TMR4_ISR 020A                         ??_PWM3_Initialize 0013  
                               fp__msTick 0000                        __end_of_appHandler 0120  
                          ?_TMR0_CallBack 0011                     ?_INTERRUPT_Initialize 0011  
                       ??_PWM4_Initialize 0013                  __size_of_TMR4_StartTimer 0006  
                                __Hrparam 0000                           appHandler@state 0009  
              __end_of_PWM4_LoadDutyValue 01D6                                  __Lrparam 0000  
                 ??_OSCILLATOR_Initialize 0013                  _TMR4_SetInterruptHandler 03E2  
                        __size_of_appInit 002C                        _PWM3_LoadDutyValue 01D6  
                              _T0CON0bits 000FD4                                  __ptext10 02C4  
                                __ptext11 03E2                                  __ptext20 0400  
                                __ptext12 0168                                  __ptext13 03EC  
                                __ptext22 020A                                  __ptext14 0394  
                                __ptext23 0404                                  __ptext15 03A8  
                                __ptext24 03D0                                  __ptext16 03BC  
                                __ptext25 026A                                  __ptext17 0330  
                                __ptext26 0406                                  __ptext18 007A  
                                __ptext27 037E                                  __ptext19 0366  
                                __ptext28 0000                       ?_PWM3_LoadDutyValue 0013  
                       ??_TMR4_Initialize 0015                             __size_of_main 001C  
    __end_of_TMR0_DefaultInterruptHandler 0408     __size_of_TMR0_DefaultInterruptHandler 0002  
            _TMR0_DefaultInterruptHandler 0406                      ??_PWM3_LoadDutyValue 0015  
                                isa$xinst 000000                                  int$flags 0021  
      __end_of_INTERRUPT_InterruptManager 0076                _INTERRUPT_InterruptManager 0008  
                              _INTCONbits 000FF2                           ??_TMR0_CallBack 0011  
                  ??_INTERRUPT_Initialize 0013                                  intlevel2 0000  
                 ?_PIN_MANAGER_Initialize 0011                           _PWM1_Initialize 03BC  
         fp__TMR0_DefaultInterruptHandler 0000             ?_TMR0_DefaultInterruptHandler 0011  
             PWM3_LoadDutyValue@dutyValue 0013                         ??_TMR4_StartTimer 0013  
                         _TMR0_Initialize 0168                                _TMR4_Start 03FC  
          __end_of_PIN_MANAGER_Initialize 00D2                __end_of_PWM1_LoadDutyValue 026A  
                         _PWM3_Initialize 03A8  
