

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jan 23 22:29:39 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F26Q10
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51  0000                     
    52                           ; Version 2.32
    53                           ; Generated 02/02/2021 GMT
    54                           ; 
    55                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F26Q10 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     
    88                           	psect	nvCOMRAM
    89  00003A                     __pnvCOMRAM:
    90                           	callstack 0
    91  00003A                     _blinkCounter:
    92                           	callstack 0
    93  00003A                     	ds	2
    94  00003C                     _TMR4_InterruptHandler:
    95                           	callstack 0
    96  00003C                     	ds	2
    97  00003E                     _TMR0_InterruptHandler:
    98                           	callstack 0
    99  00003E                     	ds	2
   100  000040                     _timer0ReloadVal16bit:
   101                           	callstack 0
   102  000040                     	ds	2
   103  000042                     _seed:
   104                           	callstack 0
   105  000042                     	ds	4
   106  0000                     _PIR4bits	set	3785
   107  0000                     _PIE4bits	set	3777
   108  0000                     _PIR0bits	set	3781
   109  0000                     _PIE0bits	set	3773
   110  0000                     _PMD5	set	3809
   111  0000                     _PMD4	set	3808
   112  0000                     _PMD3	set	3807
   113  0000                     _PMD2	set	3806
   114  0000                     _PMD1	set	3805
   115  0000                     _PMD0	set	3804
   116  0000                     _OSCTUNE	set	3800
   117  0000                     _OSCFRQ	set	3801
   118  0000                     _OSCEN	set	3799
   119  0000                     _OSCCON3	set	3797
   120  0000                     _OSCCON1	set	3795
   121  0000                     _RC5PPS	set	3831
   122  0000                     _RC1PPS	set	3827
   123  0000                     _RC3PPS	set	3829
   124  0000                     _INLVLE	set	3877
   125  0000                     _INLVLC	set	3864
   126  0000                     _INLVLB	set	3856
   127  0000                     _INLVLA	set	3848
   128  0000                     _SLRCONC	set	3865
   129  0000                     _SLRCONB	set	3857
   130  0000                     _SLRCONA	set	3849
   131  0000                     _ODCONC	set	3866
   132  0000                     _ODCONB	set	3858
   133  0000                     _ODCONA	set	3850
   134  0000                     _WPUC	set	3867
   135  0000                     _WPUA	set	3851
   136  0000                     _WPUB	set	3859
   137  0000                     _WPUE	set	3880
   138  0000                     _ANSELA	set	3852
   139  0000                     _ANSELB	set	3860
   140  0000                     _ANSELC	set	3868
   141  0000                     _PORTAbits	set	3980
   142  0000                     _PR4	set	4021
   143  0000                     _TMR4	set	4020
   144  0000                     _T4CONbits	set	4022
   145  0000                     _T4RSTbits	set	4025
   146  0000                     _T4HLTbits	set	4023
   147  0000                     _T4CON	set	4022
   148  0000                     _T4TMR	set	4020
   149  0000                     _T4PR	set	4021
   150  0000                     _T4RST	set	4025
   151  0000                     _T4HLT	set	4023
   152  0000                     _T4CLKCON	set	4024
   153  0000                     _PWM4DCL	set	3999
   154  0000                     _PWM4DCH	set	4000
   155  0000                     _PWM4CON	set	4001
   156  0000                     _PWM3DCL	set	4002
   157  0000                     _PWM3DCH	set	4003
   158  0000                     _PWM3CON	set	4004
   159  0000                     _CCP1CONbits	set	4011
   160  0000                     _CCPTMRSbits	set	4013
   161  0000                     _CCPR1L	set	4009
   162  0000                     _CCPR1H	set	4010
   163  0000                     _CCP1CON	set	4011
   164  0000                     _T0CON0bits	set	4052
   165  0000                     _T0CON0	set	4052
   166  0000                     _TMR0L	set	4050
   167  0000                     _TMR0H	set	4051
   168  0000                     _T0CON1	set	4053
   169  0000                     _INTCONbits	set	4082
   170  0000                     _TRISC	set	3977
   171  0000                     _TRISB	set	3976
   172  0000                     _TRISA	set	3975
   173  0000                     _LATC	set	3972
   174  0000                     _LATB	set	3971
   175  0000                     _LATA	set	3970
   176                           
   177                           ; #config settings
   178                           
   179                           	psect	cinit
   180  0006F0                     __pcinit:
   181                           	callstack 0
   182  0006F0                     start_initialization:
   183                           	callstack 0
   184  0006F0                     __initialization:
   185                           	callstack 0
   186                           
   187                           ; Clear objects allocated to COMRAM (31 bytes)
   188  0006F0  EE00  F001         	lfsr	0,__pbssCOMRAM
   189  0006F4  0E1F               	movlw	31
   190  0006F6                     clear_0:
   191  0006F6  6AEE               	clrf	postinc0,c
   192  0006F8  06E8               	decf	wreg,f,c
   193  0006FA  E1FD               	bnz	clear_0
   194  0006FC                     end_of_initialization:
   195                           	callstack 0
   196  0006FC                     __end_of__initialization:
   197                           	callstack 0
   198  0006FC  9046               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   199  0006FE  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   200  000700  0E00               	movlw	low (__Lmediumconst shr (0+16))
   201  000702  6EF8               	movwf	tblptru,c
   202  000704  0100               	movlb	0
   203  000706  EF5C  F003         	goto	_main	;jump to C main() function
   204                           
   205                           	psect	bssCOMRAM
   206  000001                     __pbssCOMRAM:
   207                           	callstack 0
   208  000001                     _cButton:
   209                           	callstack 0
   210  000001                     	ds	18
   211  000013                     _msTicks:
   212                           	callstack 0
   213  000013                     	ds	8
   214  00001B                     rgbButtonHandler@debounceBuffer:
   215                           	callstack 0
   216  00001B                     	ds	2
   217  00001D                     appHandler@state:
   218                           	callstack 0
   219  00001D                     	ds	2
   220  00001F                     appHandler@red:
   221                           	callstack 0
   222  00001F                     	ds	1
   223                           
   224                           	psect	cstackCOMRAM
   225  000020                     __pcstackCOMRAM:
   226                           	callstack 0
   227  000020                     ??_INTERRUPT_InterruptManager:
   228  000020                     
   229                           ; 1 bytes @ 0x0
   230  000020                     	ds	2
   231  000022                     ?___lmul:
   232                           	callstack 0
   233  000022                     setColor@green:
   234                           	callstack 0
   235  000022                     TMR0_SetInterruptHandler@InterruptHandler:
   236                           	callstack 0
   237  000022                     PWM1_LoadDutyValue@dutyValue:
   238                           	callstack 0
   239  000022                     PWM3_LoadDutyValue@dutyValue:
   240                           	callstack 0
   241  000022                     PWM4_LoadDutyValue@dutyValue:
   242                           	callstack 0
   243  000022                     TMR4_SetInterruptHandler@InterruptHandler:
   244                           	callstack 0
   245  000022                     srand@s:
   246                           	callstack 0
   247  000022                     setColorFromHex@color:
   248                           	callstack 0
   249  000022                     ___lmul@multiplier:
   250                           	callstack 0
   251                           
   252                           ; 4 bytes @ 0x2
   253  000022                     	ds	1
   254  000023                     setColor@blue:
   255                           	callstack 0
   256                           
   257                           ; 1 bytes @ 0x3
   258  000023                     	ds	1
   259  000024                     ??_TMR0_Initialize:
   260  000024                     ??_srand:
   261  000024                     ??_PWM3_LoadDutyValue:
   262  000024                     ??_PWM4_LoadDutyValue:
   263  000024                     setColor@red:
   264                           	callstack 0
   265                           
   266                           ; 1 bytes @ 0x4
   267  000024                     	ds	2
   268  000026                     ??_updateColor:
   269  000026                     ___lmul@multiplicand:
   270                           	callstack 0
   271                           
   272                           ; 4 bytes @ 0x6
   273  000026                     	ds	1
   274  000027                     updateColor@calculatedColorValue:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x7
   278  000027                     	ds	2
   279  000029                     ??_rgbButtonHandler:
   280                           
   281                           ; 1 bytes @ 0x9
   282  000029                     	ds	1
   283  00002A                     ___lmul@product:
   284                           	callstack 0
   285                           
   286                           ; 4 bytes @ 0xA
   287  00002A                     	ds	1
   288  00002B                     ??_appHandler:
   289                           
   290                           ; 1 bytes @ 0xB
   291  00002B                     	ds	3
   292  00002E                     ?_rand:
   293                           	callstack 0
   294                           
   295                           ; 2 bytes @ 0xE
   296  00002E                     	ds	2
   297  000030                     ??_rand:
   298                           
   299                           ; 1 bytes @ 0x10
   300  000030                     	ds	4
   301  000034                     ?___awmod:
   302                           	callstack 0
   303  000034                     ___awmod@dividend:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0x14
   307  000034                     	ds	2
   308  000036                     ___awmod@divisor:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0x16
   312  000036                     	ds	2
   313  000038                     ___awmod@counter:
   314                           	callstack 0
   315                           
   316                           ; 1 bytes @ 0x18
   317  000038                     	ds	1
   318  000039                     ___awmod@sign:
   319                           	callstack 0
   320                           
   321                           ; 1 bytes @ 0x19
   322  000039                     	ds	1
   323  00003A                     
   324                           ; 1 bytes @ 0x1A
   325 ;;
   326 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   327 ;;
   328 ;; *************** function _main *****************
   329 ;; Defined at:
   330 ;;		line 52 in file "main.c"
   331 ;; Parameters:    Size  Location     Type
   332 ;;		None
   333 ;; Auto vars:     Size  Location     Type
   334 ;;		None
   335 ;; Return value:  Size  Location     Type
   336 ;;                  1    wreg      void 
   337 ;; Registers used:
   338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   339 ;; Tracked objects:
   340 ;;		On entry : 0/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   348 ;;Total ram usage:        0 bytes
   349 ;; Hardware stack levels required when called: 9
   350 ;; This function calls:
   351 ;;		_SYSTEM_Initialize
   352 ;;		_TMR4_StartTimer
   353 ;;		_appHandler
   354 ;;		_appInit
   355 ;; This function is called by:
   356 ;;		Startup code after reset
   357 ;; This function uses a non-reentrant model
   358 ;;
   359                           
   360                           	psect	text0
   361  0006B8                     __ptext0:
   362                           	callstack 0
   363  0006B8                     _main:
   364                           	callstack 22
   365  0006B8                     
   366                           ;main.c: 55:     SYSTEM_Initialize();
   367  0006B8  EC36  F003         	call	_SYSTEM_Initialize	;wreg free
   368  0006BC                     
   369                           ;main.c: 56:     TMR4_StartTimer();
   370  0006BC  ECDE  F003         	call	_TMR4_StartTimer	;wreg free
   371  0006C0                     
   372                           ;main.c: 57:     appInit();
   373  0006C0  EC4F  F002         	call	_appInit	;wreg free
   374  0006C4                     
   375                           ;main.c: 64:     (INTCONbits.GIE = 1);
   376  0006C4  8EF2               	bsf	242,7,c	;volatile
   377  0006C6                     
   378                           ;main.c: 70:     (INTCONbits.PEIE = 1);
   379  0006C6  8CF2               	bsf	242,6,c	;volatile
   380  0006C8                     l1714:
   381                           
   382                           ;main.c: 78:     {;main.c: 79:         appHandler();
   383  0006C8  EC3D  F000         	call	_appHandler	;wreg free
   384  0006CC  EF64  F003         	goto	l1714
   385  0006D0  EF3B  F000         	goto	start
   386  0006D4                     __end_of_main:
   387                           	callstack 0
   388                           
   389 ;; *************** function _appInit *****************
   390 ;; Defined at:
   391 ;;		line 46 in file "app.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;		None
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		wreg, status,2, status,0, cstack
   400 ;; Tracked objects:
   401 ;;		On entry : 0/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   409 ;;Total ram usage:        0 bytes
   410 ;; Hardware stack levels used: 1
   411 ;; Hardware stack levels required when called: 7
   412 ;; This function calls:
   413 ;;		_TMR0_SetInterruptHandler
   414 ;;		___awmod
   415 ;;		_rand
   416 ;;		_setColorFromHex
   417 ;;		_srand
   418 ;; This function is called by:
   419 ;;		_main
   420 ;; This function uses a non-reentrant model
   421 ;;
   422                           
   423                           	psect	text1
   424  00049E                     __ptext1:
   425                           	callstack 0
   426  00049E                     _appInit:
   427                           	callstack 23
   428  00049E                     
   429                           ;app.c: 47:     TMR0_SetInterruptHandler(msTick);
   430  00049E  0E0A               	movlw	low _msTick
   431  0004A0  6E22               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
   432  0004A2  0E07               	movlw	high _msTick
   433  0004A4  6E23               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
   434  0004A6  ECD9  F003         	call	_TMR0_SetInterruptHandler	;wreg free
   435  0004AA                     
   436                           ;app.c: 48:     setColorFromHex(0x000000);
   437  0004AA  0E00               	movlw	0
   438  0004AC  6E22               	movwf	setColorFromHex@color^0,c
   439  0004AE  0E00               	movlw	0
   440  0004B0  6E23               	movwf	(setColorFromHex@color+1)^0,c
   441  0004B2  0E00               	movlw	0
   442  0004B4  6E24               	movwf	(setColorFromHex@color+2)^0,c
   443  0004B6  0E00               	movlw	0
   444  0004B8  6E25               	movwf	(setColorFromHex@color+3)^0,c
   445  0004BA  ECCD  F003         	call	_setColorFromHex	;wreg free
   446  0004BE                     
   447                           ;app.c: 50:     srand((unsigned) 318);
   448  0004BE  0E01               	movlw	1
   449  0004C0  6E23               	movwf	(srand@s+1)^0,c
   450  0004C2  0E3E               	movlw	62
   451  0004C4  6E22               	movwf	srand@s^0,c
   452  0004C6  EC23  F003         	call	_srand	;wreg free
   453  0004CA                     
   454                           ;app.c: 51:     blinkCounter = rand() % 5;
   455  0004CA  EC89  F001         	call	_rand	;wreg free
   456  0004CE  C02E  F034         	movff	?_rand,___awmod@dividend
   457  0004D2  C02F  F035         	movff	?_rand+1,___awmod@dividend+1
   458  0004D6  0E00               	movlw	0
   459  0004D8  6E37               	movwf	(___awmod@divisor+1)^0,c
   460  0004DA  0E05               	movlw	5
   461  0004DC  6E36               	movwf	___awmod@divisor^0,c
   462  0004DE  EC31  F001         	call	___awmod	;wreg free
   463  0004E2  C034  F03A         	movff	?___awmod,_blinkCounter
   464  0004E6  C035  F03B         	movff	?___awmod+1,_blinkCounter+1
   465  0004EA  0012               	return		;funcret
   466  0004EC                     __end_of_appInit:
   467                           	callstack 0
   468                           
   469 ;; *************** function _srand *****************
   470 ;; Defined at:
   471 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\rand.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;  s               2    2[COMRAM] unsigned int 
   474 ;; Auto vars:     Size  Location     Type
   475 ;;		None
   476 ;; Return value:  Size  Location     Type
   477 ;;                  1    wreg      void 
   478 ;; Registers used:
   479 ;;		wreg, status,2, status,0
   480 ;; Tracked objects:
   481 ;;		On entry : 0/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   485 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   487 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   488 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   489 ;;Total ram usage:        6 bytes
   490 ;; Hardware stack levels used: 1
   491 ;; Hardware stack levels required when called: 5
   492 ;; This function calls:
   493 ;;		Nothing
   494 ;; This function is called by:
   495 ;;		_appInit
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499                           	psect	text2
   500  000646                     __ptext2:
   501                           	callstack 0
   502  000646                     _srand:
   503                           	callstack 24
   504  000646  0EFF               	movlw	255
   505  000648  6E24               	movwf	??_srand^0,c
   506  00064A  0EFF               	movlw	255
   507  00064C  6E25               	movwf	(??_srand+1)^0,c
   508  00064E  C022  F026         	movff	srand@s,??_srand+2
   509  000652  C023  F027         	movff	srand@s+1,??_srand+3
   510  000656  5024               	movf	??_srand^0,w,c
   511  000658  2626               	addwf	(??_srand+2)^0,f,c
   512  00065A  5025               	movf	(??_srand+1)^0,w,c
   513  00065C  2227               	addwfc	(??_srand+3)^0,f,c
   514  00065E  C026  F042         	movff	??_srand+2,_seed
   515  000662  C027  F043         	movff	??_srand+3,_seed+1
   516  000666  6A44               	clrf	(_seed+2)^0,c
   517  000668  6A45               	clrf	(_seed+3)^0,c
   518  00066A  0012               	return		;funcret
   519  00066C                     __end_of_srand:
   520                           	callstack 0
   521                           
   522 ;; *************** function _rand *****************
   523 ;; Defined at:
   524 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\rand.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;		None
   527 ;; Auto vars:     Size  Location     Type
   528 ;;		None
   529 ;; Return value:  Size  Location     Type
   530 ;;                  2   14[COMRAM] int 
   531 ;; Registers used:
   532 ;;		wreg, status,2, status,0, cstack
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   538 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   540 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   541 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   542 ;;Total ram usage:        6 bytes
   543 ;; Hardware stack levels used: 1
   544 ;; Hardware stack levels required when called: 6
   545 ;; This function calls:
   546 ;;		___lmul
   547 ;; This function is called by:
   548 ;;		_appInit
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           	psect	text3
   553  000312                     __ptext3:
   554                           	callstack 0
   555  000312                     _rand:
   556                           	callstack 23
   557  000312  C042  F022         	movff	_seed,___lmul@multiplier
   558  000316  C043  F023         	movff	_seed+1,___lmul@multiplier+1
   559  00031A  C044  F024         	movff	_seed+2,___lmul@multiplier+2
   560  00031E  C045  F025         	movff	_seed+3,___lmul@multiplier+3
   561  000322  0E2D               	movlw	45
   562  000324  6E26               	movwf	___lmul@multiplicand^0,c
   563  000326  0E7F               	movlw	127
   564  000328  6E27               	movwf	(___lmul@multiplicand+1)^0,c
   565  00032A  0E95               	movlw	149
   566  00032C  6E28               	movwf	(___lmul@multiplicand+2)^0,c
   567  00032E  0E4C               	movlw	76
   568  000330  6E29               	movwf	(___lmul@multiplicand+3)^0,c
   569  000332  ECBF  F001         	call	___lmul	;wreg free
   570  000336  0E01               	movlw	1
   571  000338  2422               	addwf	?___lmul^0,w,c
   572  00033A  6E42               	movwf	_seed^0,c
   573  00033C  0E00               	movlw	0
   574  00033E  2023               	addwfc	(?___lmul+1)^0,w,c
   575  000340  6E43               	movwf	(_seed+1)^0,c
   576  000342  0E00               	movlw	0
   577  000344  2024               	addwfc	(?___lmul+2)^0,w,c
   578  000346  6E44               	movwf	(_seed+2)^0,c
   579  000348  0E00               	movlw	0
   580  00034A  2025               	addwfc	(?___lmul+3)^0,w,c
   581  00034C  6E45               	movwf	(_seed+3)^0,c
   582  00034E  C042  F030         	movff	_seed,??_rand
   583  000352  C043  F031         	movff	_seed+1,??_rand+1
   584  000356  C044  F032         	movff	_seed+2,??_rand+2
   585  00035A  C045  F033         	movff	_seed+3,??_rand+3
   586  00035E  0E12               	movlw	18
   587  000360  EFB7  F001         	goto	u410
   588  000364                     u415:
   589  000364  90D8               	bcf	status,0,c
   590  000366  3233               	rrcf	(??_rand+3)^0,f,c
   591  000368  3232               	rrcf	(??_rand+2)^0,f,c
   592  00036A  3231               	rrcf	(??_rand+1)^0,f,c
   593  00036C  3230               	rrcf	??_rand^0,f,c
   594  00036E                     u410:
   595  00036E  2EE8               	decfsz	wreg,f,c
   596  000370  EFB2  F001         	goto	u415
   597  000374  C030  F02E         	movff	??_rand,?_rand
   598  000378  C031  F02F         	movff	??_rand+1,?_rand+1
   599  00037C  0012               	return		;funcret
   600  00037E                     __end_of_rand:
   601                           	callstack 0
   602                           
   603 ;; *************** function ___lmul *****************
   604 ;; Defined at:
   605 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;  multiplier      4    2[COMRAM] unsigned long 
   608 ;;  multiplicand    4    6[COMRAM] unsigned long 
   609 ;; Auto vars:     Size  Location     Type
   610 ;;  product         4   10[COMRAM] unsigned long 
   611 ;; Return value:  Size  Location     Type
   612 ;;                  4    2[COMRAM] unsigned long 
   613 ;; Registers used:
   614 ;;		wreg, status,2, status,0
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   620 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   621 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   623 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   624 ;;Total ram usage:       12 bytes
   625 ;; Hardware stack levels used: 1
   626 ;; Hardware stack levels required when called: 5
   627 ;; This function calls:
   628 ;;		Nothing
   629 ;; This function is called by:
   630 ;;		_rand
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634                           	psect	text4
   635  00037E                     __ptext4:
   636                           	callstack 0
   637  00037E                     ___lmul:
   638                           	callstack 23
   639  00037E  0E00               	movlw	0
   640  000380  6E2A               	movwf	___lmul@product^0,c
   641  000382  0E00               	movlw	0
   642  000384  6E2B               	movwf	(___lmul@product+1)^0,c
   643  000386  0E00               	movlw	0
   644  000388  6E2C               	movwf	(___lmul@product+2)^0,c
   645  00038A  0E00               	movlw	0
   646  00038C  6E2D               	movwf	(___lmul@product+3)^0,c
   647  00038E                     l1528:
   648  00038E  A022               	btfss	___lmul@multiplier^0,0,c
   649  000390  EFCC  F001         	goto	u391
   650  000394  EFCE  F001         	goto	u390
   651  000398                     u391:
   652  000398  EFD6  F001         	goto	l1532
   653  00039C                     u390:
   654  00039C  5026               	movf	___lmul@multiplicand^0,w,c
   655  00039E  262A               	addwf	___lmul@product^0,f,c
   656  0003A0  5027               	movf	(___lmul@multiplicand+1)^0,w,c
   657  0003A2  222B               	addwfc	(___lmul@product+1)^0,f,c
   658  0003A4  5028               	movf	(___lmul@multiplicand+2)^0,w,c
   659  0003A6  222C               	addwfc	(___lmul@product+2)^0,f,c
   660  0003A8  5029               	movf	(___lmul@multiplicand+3)^0,w,c
   661  0003AA  222D               	addwfc	(___lmul@product+3)^0,f,c
   662  0003AC                     l1532:
   663  0003AC  90D8               	bcf	status,0,c
   664  0003AE  3626               	rlcf	___lmul@multiplicand^0,f,c
   665  0003B0  3627               	rlcf	(___lmul@multiplicand+1)^0,f,c
   666  0003B2  3628               	rlcf	(___lmul@multiplicand+2)^0,f,c
   667  0003B4  3629               	rlcf	(___lmul@multiplicand+3)^0,f,c
   668  0003B6  90D8               	bcf	status,0,c
   669  0003B8  3225               	rrcf	(___lmul@multiplier+3)^0,f,c
   670  0003BA  3224               	rrcf	(___lmul@multiplier+2)^0,f,c
   671  0003BC  3223               	rrcf	(___lmul@multiplier+1)^0,f,c
   672  0003BE  3222               	rrcf	___lmul@multiplier^0,f,c
   673  0003C0  5022               	movf	___lmul@multiplier^0,w,c
   674  0003C2  1023               	iorwf	(___lmul@multiplier+1)^0,w,c
   675  0003C4  1024               	iorwf	(___lmul@multiplier+2)^0,w,c
   676  0003C6  1025               	iorwf	(___lmul@multiplier+3)^0,w,c
   677  0003C8  A4D8               	btfss	status,2,c
   678  0003CA  EFE9  F001         	goto	u401
   679  0003CE  EFEB  F001         	goto	u400
   680  0003D2                     u401:
   681  0003D2  EFC7  F001         	goto	l1528
   682  0003D6                     u400:
   683  0003D6  C02A  F022         	movff	___lmul@product,?___lmul
   684  0003DA  C02B  F023         	movff	___lmul@product+1,?___lmul+1
   685  0003DE  C02C  F024         	movff	___lmul@product+2,?___lmul+2
   686  0003E2  C02D  F025         	movff	___lmul@product+3,?___lmul+3
   687  0003E6  0012               	return		;funcret
   688  0003E8                     __end_of___lmul:
   689                           	callstack 0
   690                           
   691 ;; *************** function ___awmod *****************
   692 ;; Defined at:
   693 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;  dividend        2   20[COMRAM] int 
   696 ;;  divisor         2   22[COMRAM] int 
   697 ;; Auto vars:     Size  Location     Type
   698 ;;  sign            1   25[COMRAM] unsigned char 
   699 ;;  counter         1   24[COMRAM] unsigned char 
   700 ;; Return value:  Size  Location     Type
   701 ;;                  2   20[COMRAM] int 
   702 ;; Registers used:
   703 ;;		wreg, status,2, status,0
   704 ;; Tracked objects:
   705 ;;		On entry : 0/0
   706 ;;		On exit  : 0/0
   707 ;;		Unchanged: 0/0
   708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   709 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   710 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   712 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   713 ;;Total ram usage:        6 bytes
   714 ;; Hardware stack levels used: 1
   715 ;; Hardware stack levels required when called: 5
   716 ;; This function calls:
   717 ;;		Nothing
   718 ;; This function is called by:
   719 ;;		_appInit
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723                           	psect	text5
   724  000262                     __ptext5:
   725                           	callstack 0
   726  000262                     ___awmod:
   727                           	callstack 24
   728  000262  0E00               	movlw	0
   729  000264  6E39               	movwf	___awmod@sign^0,c
   730  000266  BE35               	btfsc	(___awmod@dividend+1)^0,7,c
   731  000268  EF3A  F001         	goto	u470
   732  00026C  EF38  F001         	goto	u471
   733  000270                     u471:
   734  000270  EF40  F001         	goto	l1606
   735  000274                     u470:
   736  000274  6C34               	negf	___awmod@dividend^0,c
   737  000276  1E35               	comf	(___awmod@dividend+1)^0,f,c
   738  000278  B0D8               	btfsc	status,0,c
   739  00027A  2A35               	incf	(___awmod@dividend+1)^0,f,c
   740  00027C  0E01               	movlw	1
   741  00027E  6E39               	movwf	___awmod@sign^0,c
   742  000280                     l1606:
   743  000280  BE37               	btfsc	(___awmod@divisor+1)^0,7,c
   744  000282  EF47  F001         	goto	u480
   745  000286  EF45  F001         	goto	u481
   746  00028A                     u481:
   747  00028A  EF4B  F001         	goto	l1610
   748  00028E                     u480:
   749  00028E  6C36               	negf	___awmod@divisor^0,c
   750  000290  1E37               	comf	(___awmod@divisor+1)^0,f,c
   751  000292  B0D8               	btfsc	status,0,c
   752  000294  2A37               	incf	(___awmod@divisor+1)^0,f,c
   753  000296                     l1610:
   754  000296  5036               	movf	___awmod@divisor^0,w,c
   755  000298  1037               	iorwf	(___awmod@divisor+1)^0,w,c
   756  00029A  B4D8               	btfsc	status,2,c
   757  00029C  EF52  F001         	goto	u491
   758  0002A0  EF54  F001         	goto	u490
   759  0002A4                     u491:
   760  0002A4  EF78  F001         	goto	l1626
   761  0002A8                     u490:
   762  0002A8  0E01               	movlw	1
   763  0002AA  6E38               	movwf	___awmod@counter^0,c
   764  0002AC  EF5C  F001         	goto	l1616
   765  0002B0                     l1614:
   766  0002B0  90D8               	bcf	status,0,c
   767  0002B2  3636               	rlcf	___awmod@divisor^0,f,c
   768  0002B4  3637               	rlcf	(___awmod@divisor+1)^0,f,c
   769  0002B6  2A38               	incf	___awmod@counter^0,f,c
   770  0002B8                     l1616:
   771  0002B8  AE37               	btfss	(___awmod@divisor+1)^0,7,c
   772  0002BA  EF61  F001         	goto	u501
   773  0002BE  EF63  F001         	goto	u500
   774  0002C2                     u501:
   775  0002C2  EF58  F001         	goto	l1614
   776  0002C6                     u500:
   777  0002C6                     l1618:
   778  0002C6  5036               	movf	___awmod@divisor^0,w,c
   779  0002C8  5C34               	subwf	___awmod@dividend^0,w,c
   780  0002CA  5037               	movf	(___awmod@divisor+1)^0,w,c
   781  0002CC  5835               	subwfb	(___awmod@dividend+1)^0,w,c
   782  0002CE  A0D8               	btfss	status,0,c
   783  0002D0  EF6C  F001         	goto	u511
   784  0002D4  EF6E  F001         	goto	u510
   785  0002D8                     u511:
   786  0002D8  EF72  F001         	goto	l1622
   787  0002DC                     u510:
   788  0002DC  5036               	movf	___awmod@divisor^0,w,c
   789  0002DE  5E34               	subwf	___awmod@dividend^0,f,c
   790  0002E0  5037               	movf	(___awmod@divisor+1)^0,w,c
   791  0002E2  5A35               	subwfb	(___awmod@dividend+1)^0,f,c
   792  0002E4                     l1622:
   793  0002E4  90D8               	bcf	status,0,c
   794  0002E6  3237               	rrcf	(___awmod@divisor+1)^0,f,c
   795  0002E8  3236               	rrcf	___awmod@divisor^0,f,c
   796  0002EA  2E38               	decfsz	___awmod@counter^0,f,c
   797  0002EC  EF63  F001         	goto	l1618
   798  0002F0                     l1626:
   799  0002F0  5039               	movf	___awmod@sign^0,w,c
   800  0002F2  B4D8               	btfsc	status,2,c
   801  0002F4  EF7E  F001         	goto	u521
   802  0002F8  EF80  F001         	goto	u520
   803  0002FC                     u521:
   804  0002FC  EF84  F001         	goto	l1630
   805  000300                     u520:
   806  000300  6C34               	negf	___awmod@dividend^0,c
   807  000302  1E35               	comf	(___awmod@dividend+1)^0,f,c
   808  000304  B0D8               	btfsc	status,0,c
   809  000306  2A35               	incf	(___awmod@dividend+1)^0,f,c
   810  000308                     l1630:
   811  000308  C034  F034         	movff	___awmod@dividend,?___awmod
   812  00030C  C035  F035         	movff	___awmod@dividend+1,?___awmod+1
   813  000310  0012               	return		;funcret
   814  000312                     __end_of___awmod:
   815                           	callstack 0
   816                           
   817 ;; *************** function _appHandler *****************
   818 ;; Defined at:
   819 ;;		line 54 in file "app.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;		None
   822 ;; Auto vars:     Size  Location     Type
   823 ;;		None
   824 ;; Return value:  Size  Location     Type
   825 ;;                  1    wreg      void 
   826 ;; Registers used:
   827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   835 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   836 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   837 ;;Total ram usage:        2 bytes
   838 ;; Hardware stack levels used: 1
   839 ;; Hardware stack levels required when called: 8
   840 ;; This function calls:
   841 ;;		_rgbButtonHandler
   842 ;;		_setColor
   843 ;;		_setColorFromHex
   844 ;; This function is called by:
   845 ;;		_main
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849                           	psect	text6
   850  00007A                     __ptext6:
   851                           	callstack 0
   852  00007A                     _appHandler:
   853                           	callstack 22
   854  00007A                     
   855                           ;app.c: 55:     static int state = 0;;app.c: 56:     static uint8_t red = 0;;app.c: 58: 
      +                              rgbButtonHandler();
   856  00007A  ECD7  F000         	call	_rgbButtonHandler	;wreg free
   857                           
   858                           ;app.c: 80:     switch(state){
   859  00007E  EFBC  F000         	goto	l1698
   860  000082                     l1662:
   861                           
   862                           ;app.c: 82:             if(msTicks >= 30){
   863  000082  501A               	movf	(_msTicks+7)^0,w,c
   864  000084  1019               	iorwf	(_msTicks+6)^0,w,c
   865  000086  1018               	iorwf	(_msTicks+5)^0,w,c
   866  000088  1017               	iorwf	(_msTicks+4)^0,w,c
   867  00008A  1016               	iorwf	(_msTicks+3)^0,w,c
   868  00008C  1015               	iorwf	(_msTicks+2)^0,w,c
   869  00008E  1014               	iorwf	(_msTicks+1)^0,w,c
   870  000090  E109               	bnz	u530
   871  000092  0E1E               	movlw	30
   872  000094  5C13               	subwf	_msTicks^0,w,c
   873  000096  A0D8               	btfss	status,0,c
   874  000098  EF50  F000         	goto	u531
   875  00009C  EF52  F000         	goto	u530
   876  0000A0                     u531:
   877  0000A0  EF61  F000         	goto	l1670
   878  0000A4                     u530:
   879  0000A4                     
   880                           ;app.c: 83:                 msTicks = 0;
   881  0000A4  EE20  F013         	lfsr	2,_msTicks
   882  0000A8  0E07               	movlw	7
   883  0000AA                     u541:
   884  0000AA  6ADE               	clrf	postinc2,c
   885  0000AC  06E8               	decf	wreg,f,c
   886  0000AE  E2FD               	bc	u541
   887  0000B0                     
   888                           ;app.c: 84:                 red+=5;
   889  0000B0  0E05               	movlw	5
   890  0000B2  261F               	addwf	appHandler@red^0,f,c
   891  0000B4                     
   892                           ;app.c: 85:                 setColor(red,0,0);
   893  0000B4  0E00               	movlw	0
   894  0000B6  6E22               	movwf	setColor@green^0,c
   895  0000B8  0E00               	movlw	0
   896  0000BA  6E23               	movwf	setColor@blue^0,c
   897  0000BC  501F               	movf	appHandler@red^0,w,c
   898  0000BE  ECC5  F003         	call	_setColor
   899  0000C2                     l1670:
   900                           
   901                           ;app.c: 87:             if(red >= 250){
   902  0000C2  0EF9               	movlw	249
   903  0000C4  641F               	cpfsgt	appHandler@red^0,c
   904  0000C6  EF67  F000         	goto	u551
   905  0000CA  EF69  F000         	goto	u550
   906  0000CE                     u551:
   907  0000CE  EFD6  F000         	goto	l380
   908  0000D2                     u550:
   909  0000D2                     
   910                           ;app.c: 88:                 state = 1;
   911  0000D2  0E00               	movlw	0
   912  0000D4  6E1E               	movwf	(appHandler@state+1)^0,c
   913  0000D6  0E01               	movlw	1
   914  0000D8  6E1D               	movwf	appHandler@state^0,c
   915  0000DA  EFD6  F000         	goto	l380
   916  0000DE                     l1674:
   917                           
   918                           ;app.c: 92:             if(msTicks >= 30){
   919  0000DE  501A               	movf	(_msTicks+7)^0,w,c
   920  0000E0  1019               	iorwf	(_msTicks+6)^0,w,c
   921  0000E2  1018               	iorwf	(_msTicks+5)^0,w,c
   922  0000E4  1017               	iorwf	(_msTicks+4)^0,w,c
   923  0000E6  1016               	iorwf	(_msTicks+3)^0,w,c
   924  0000E8  1015               	iorwf	(_msTicks+2)^0,w,c
   925  0000EA  1014               	iorwf	(_msTicks+1)^0,w,c
   926  0000EC  E109               	bnz	u560
   927  0000EE  0E1E               	movlw	30
   928  0000F0  5C13               	subwf	_msTicks^0,w,c
   929  0000F2  A0D8               	btfss	status,0,c
   930  0000F4  EF7E  F000         	goto	u561
   931  0000F8  EF80  F000         	goto	u560
   932  0000FC                     u561:
   933  0000FC  EF90  F000         	goto	l1682
   934  000100                     u560:
   935  000100                     
   936                           ;app.c: 93:                 msTicks = 0;
   937  000100  EE20  F013         	lfsr	2,_msTicks
   938  000104  0E07               	movlw	7
   939  000106                     u571:
   940  000106  6ADE               	clrf	postinc2,c
   941  000108  06E8               	decf	wreg,f,c
   942  00010A  E2FD               	bc	u571
   943  00010C                     
   944                           ;app.c: 94:                 red = red - 5;
   945  00010C  501F               	movf	appHandler@red^0,w,c
   946  00010E  0FFB               	addlw	251
   947  000110  6E1F               	movwf	appHandler@red^0,c
   948  000112                     
   949                           ;app.c: 95:                 setColor(red,0,0);
   950  000112  0E00               	movlw	0
   951  000114  6E22               	movwf	setColor@green^0,c
   952  000116  0E00               	movlw	0
   953  000118  6E23               	movwf	setColor@blue^0,c
   954  00011A  501F               	movf	appHandler@red^0,w,c
   955  00011C  ECC5  F003         	call	_setColor
   956  000120                     l1682:
   957                           
   958                           ;app.c: 97:             if(red == 0){
   959  000120  501F               	movf	appHandler@red^0,w,c
   960  000122  A4D8               	btfss	status,2,c
   961  000124  EF96  F000         	goto	u581
   962  000128  EF98  F000         	goto	u580
   963  00012C                     u581:
   964  00012C  EFD6  F000         	goto	l380
   965  000130                     u580:
   966  000130                     
   967                           ;app.c: 98:                 blinkCounter--;
   968  000130  063A               	decf	_blinkCounter^0,f,c
   969  000132  A0D8               	btfss	status,0,c
   970  000134  063B               	decf	(_blinkCounter+1)^0,f,c
   971  000136                     
   972                           ;app.c: 99:                 if(blinkCounter == 0){
   973  000136  503A               	movf	_blinkCounter^0,w,c
   974  000138  103B               	iorwf	(_blinkCounter+1)^0,w,c
   975  00013A  A4D8               	btfss	status,2,c
   976  00013C  EFA2  F000         	goto	u591
   977  000140  EFA4  F000         	goto	u590
   978  000144                     u591:
   979  000144  EFAA  F000         	goto	l1690
   980  000148                     u590:
   981  000148                     
   982                           ;app.c: 100:                     state = 2;
   983  000148  0E00               	movlw	0
   984  00014A  6E1E               	movwf	(appHandler@state+1)^0,c
   985  00014C  0E02               	movlw	2
   986  00014E  6E1D               	movwf	appHandler@state^0,c
   987                           
   988                           ;app.c: 101:                 }else{
   989  000150  EFD6  F000         	goto	l380
   990  000154                     l1690:
   991                           
   992                           ;app.c: 102:                     state = 0;
   993  000154  0E00               	movlw	0
   994  000156  6E1E               	movwf	(appHandler@state+1)^0,c
   995  000158  0E00               	movlw	0
   996  00015A  6E1D               	movwf	appHandler@state^0,c
   997  00015C  EFD6  F000         	goto	l380
   998  000160                     l1692:
   999                           
  1000                           ;app.c: 107:             setColorFromHex(0xFFFFFF);
  1001  000160  0EFF               	movlw	255
  1002  000162  6E22               	movwf	setColorFromHex@color^0,c
  1003  000164  0EFF               	movlw	255
  1004  000166  6E23               	movwf	(setColorFromHex@color+1)^0,c
  1005  000168  0EFF               	movlw	255
  1006  00016A  6E24               	movwf	(setColorFromHex@color+2)^0,c
  1007  00016C  0E00               	movlw	0
  1008  00016E  6E25               	movwf	(setColorFromHex@color+3)^0,c
  1009  000170  ECCD  F003         	call	_setColorFromHex	;wreg free
  1010                           
  1011                           ;app.c: 108:             break;
  1012  000174  EFD6  F000         	goto	l380
  1013  000178                     l1698:
  1014  000178  C01D  F02B         	movff	appHandler@state,??_appHandler
  1015  00017C  C01E  F02C         	movff	appHandler@state+1,??_appHandler+1
  1016                           
  1017                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1018                           ; Switch size 1, requested type "simple"
  1019                           ; Number of cases is 1, Range of values is 0 to 0
  1020                           ; switch strategies available:
  1021                           ; Name         Instructions Cycles
  1022                           ; simple_byte            4     3 (average)
  1023                           ;	Chosen strategy is simple_byte
  1024  000180  502C               	movf	(??_appHandler+1)^0,w,c
  1025  000182  0A00               	xorlw	0	; case 0
  1026  000184  B4D8               	btfsc	status,2,c
  1027  000186  EFC7  F000         	goto	l1736
  1028  00018A  EFAA  F000         	goto	l1690
  1029  00018E                     l1736:
  1030                           
  1031                           ; Switch size 1, requested type "simple"
  1032                           ; Number of cases is 3, Range of values is 0 to 2
  1033                           ; switch strategies available:
  1034                           ; Name         Instructions Cycles
  1035                           ; simple_byte           10     6 (average)
  1036                           ;	Chosen strategy is simple_byte
  1037  00018E  502B               	movf	??_appHandler^0,w,c
  1038  000190  0A00               	xorlw	0	; case 0
  1039  000192  B4D8               	btfsc	status,2,c
  1040  000194  EF41  F000         	goto	l1662
  1041  000198  0A01               	xorlw	1	; case 1
  1042  00019A  B4D8               	btfsc	status,2,c
  1043  00019C  EF6F  F000         	goto	l1674
  1044  0001A0  0A03               	xorlw	3	; case 2
  1045  0001A2  B4D8               	btfsc	status,2,c
  1046  0001A4  EFB0  F000         	goto	l1692
  1047  0001A8  EFAA  F000         	goto	l1690
  1048  0001AC                     l380:
  1049  0001AC  0012               	return		;funcret
  1050  0001AE                     __end_of_appHandler:
  1051                           	callstack 0
  1052                           
  1053 ;; *************** function _setColorFromHex *****************
  1054 ;; Defined at:
  1055 ;;		line 117 in file "rgbButton.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;  color           4    2[COMRAM] unsigned long 
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;		None
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  1    wreg      void 
  1062 ;; Registers used:
  1063 ;;		None
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1069 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1072 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1073 ;;Total ram usage:        4 bytes
  1074 ;; Hardware stack levels used: 1
  1075 ;; Hardware stack levels required when called: 5
  1076 ;; This function calls:
  1077 ;;		Nothing
  1078 ;; This function is called by:
  1079 ;;		_appInit
  1080 ;;		_appHandler
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084                           	psect	text7
  1085  00079A                     __ptext7:
  1086                           	callstack 0
  1087  00079A                     _setColorFromHex:
  1088                           	callstack 24
  1089  00079A                     
  1090                           ;rgbButton.c: 118:     cButton.color.red = color >> 16;
  1091  00079A  C024  F010         	movff	setColorFromHex@color+2,_cButton+15
  1092                           
  1093                           ;rgbButton.c: 119:     cButton.color.green = color >> 8;
  1094  00079E  C023  F011         	movff	setColorFromHex@color+1,_cButton+16
  1095                           
  1096                           ;rgbButton.c: 120:     cButton.color.blue = color;
  1097  0007A2  C022  F012         	movff	setColorFromHex@color,_cButton+17
  1098  0007A6  0012               	return		;funcret
  1099  0007A8                     __end_of_setColorFromHex:
  1100                           	callstack 0
  1101                           
  1102 ;; *************** function _setColor *****************
  1103 ;; Defined at:
  1104 ;;		line 104 in file "rgbButton.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;  red             1    wreg     unsigned char 
  1107 ;;  green           1    2[COMRAM] unsigned char 
  1108 ;;  blue            1    3[COMRAM] unsigned char 
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;  red             1    4[COMRAM] unsigned char 
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  1    wreg      void 
  1113 ;; Registers used:
  1114 ;;		wreg
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1120 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1121 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1123 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1124 ;;Total ram usage:        3 bytes
  1125 ;; Hardware stack levels used: 1
  1126 ;; Hardware stack levels required when called: 5
  1127 ;; This function calls:
  1128 ;;		Nothing
  1129 ;; This function is called by:
  1130 ;;		_appHandler
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           	psect	text8
  1135  00078A                     __ptext8:
  1136                           	callstack 0
  1137  00078A                     _setColor:
  1138                           	callstack 24
  1139                           
  1140                           ;incstack = 0
  1141                           ;setColor@red stored from wreg
  1142  00078A  6E24               	movwf	setColor@red^0,c
  1143  00078C                     
  1144                           ;rgbButton.c: 105:     cButton.color.red = red;
  1145  00078C  C024  F010         	movff	setColor@red,_cButton+15
  1146  000790                     
  1147                           ;rgbButton.c: 106:     cButton.color.green = green;
  1148  000790  C022  F011         	movff	setColor@green,_cButton+16
  1149  000794                     
  1150                           ;rgbButton.c: 107:     cButton.color.blue = blue;
  1151  000794  C023  F012         	movff	setColor@blue,_cButton+17
  1152  000798  0012               	return		;funcret
  1153  00079A                     __end_of_setColor:
  1154                           	callstack 0
  1155                           
  1156 ;; *************** function _rgbButtonHandler *****************
  1157 ;; Defined at:
  1158 ;;		line 20 in file "rgbButton.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;		None
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;		None
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1174 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1175 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1176 ;;Total ram usage:        2 bytes
  1177 ;; Hardware stack levels used: 1
  1178 ;; Hardware stack levels required when called: 7
  1179 ;; This function calls:
  1180 ;;		_updateColor
  1181 ;; This function is called by:
  1182 ;;		_appHandler
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           	psect	text9
  1187  0001AE                     __ptext9:
  1188                           	callstack 0
  1189  0001AE                     _rgbButtonHandler:
  1190                           	callstack 22
  1191  0001AE                     
  1192                           ;rgbButton.c: 21:     static uint16_t debounceBuffer = 0x0000;;rgbButton.c: 24:     if(c
      +                          Button.ticks.colorRefreshTicks >= 5){
  1193  0001AE  500F               	movf	(_cButton+14)^0,w,c
  1194  0001B0  100E               	iorwf	(_cButton+13)^0,w,c
  1195  0001B2  100D               	iorwf	(_cButton+12)^0,w,c
  1196  0001B4  E109               	bnz	u420
  1197  0001B6  0E05               	movlw	5
  1198  0001B8  5C0C               	subwf	(_cButton+11)^0,w,c
  1199  0001BA  A0D8               	btfss	status,0,c
  1200  0001BC  EFE2  F000         	goto	u421
  1201  0001C0  EFE4  F000         	goto	u420
  1202  0001C4                     u421:
  1203  0001C4  EFEE  F000         	goto	l1576
  1204  0001C8                     u420:
  1205  0001C8                     
  1206                           ;rgbButton.c: 25:         cButton.ticks.colorRefreshTicks = 0;
  1207  0001C8  0E00               	movlw	0
  1208  0001CA  6E0C               	movwf	(_cButton+11)^0,c
  1209  0001CC  0E00               	movlw	0
  1210  0001CE  6E0D               	movwf	(_cButton+12)^0,c
  1211  0001D0  0E00               	movlw	0
  1212  0001D2  6E0E               	movwf	(_cButton+13)^0,c
  1213  0001D4  0E00               	movlw	0
  1214  0001D6  6E0F               	movwf	(_cButton+14)^0,c
  1215  0001D8                     
  1216                           ;rgbButton.c: 26:         updateColor();
  1217  0001D8  ECF4  F001         	call	_updateColor	;wreg free
  1218  0001DC                     l1576:
  1219                           
  1220                           ;rgbButton.c: 29:     cButton.buttonStates.lastIsPressed = cButton.buttonStates.isPresse
      +                          d;
  1221  0001DC  C001  F002         	movff	_cButton,_cButton+1
  1222  0001E0                     
  1223                           ;rgbButton.c: 31:     debounceBuffer = (debounceBuffer << 1) | !PORTAbits.RA6 | 0xFFFE;
  1224  0001E0  AC8C               	btfss	140,6,c	;volatile
  1225  0001E2  EFF5  F000         	goto	u431
  1226  0001E6  EFF8  F000         	goto	u430
  1227  0001EA                     u431:
  1228  0001EA  0E01               	movlw	1
  1229  0001EC  EFF9  F000         	goto	u440
  1230  0001F0                     u430:
  1231  0001F0  0E00               	movlw	0
  1232  0001F2                     u440:
  1233  0001F2  C01B  F029         	movff	rgbButtonHandler@debounceBuffer,??_rgbButtonHandler
  1234  0001F6  C01C  F02A         	movff	rgbButtonHandler@debounceBuffer+1,??_rgbButtonHandler+1
  1235  0001FA  90D8               	bcf	status,0,c
  1236  0001FC  3629               	rlcf	??_rgbButtonHandler^0,f,c
  1237  0001FE  362A               	rlcf	(??_rgbButtonHandler+1)^0,f,c
  1238  000200  1229               	iorwf	??_rgbButtonHandler^0,f,c
  1239  000202  0E00               	movlw	0
  1240  000204  122A               	iorwf	(??_rgbButtonHandler+1)^0,f,c
  1241  000206  0EFE               	movlw	254
  1242  000208  1029               	iorwf	??_rgbButtonHandler^0,w,c
  1243  00020A  6E1B               	movwf	rgbButtonHandler@debounceBuffer^0,c
  1244  00020C  0EFF               	movlw	255
  1245  00020E  102A               	iorwf	(??_rgbButtonHandler+1)^0,w,c
  1246  000210  6E1C               	movwf	(rgbButtonHandler@debounceBuffer+1)^0,c
  1247  000212                     
  1248                           ;rgbButton.c: 33:     if(debounceBuffer == 0xffff){
  1249  000212  281B               	incf	rgbButtonHandler@debounceBuffer^0,w,c
  1250  000214  E106               	bnz	u451
  1251  000216  281C               	incf	(rgbButtonHandler@debounceBuffer+1)^0,w,c
  1252  000218  A4D8               	btfss	status,2,c
  1253  00021A  EF11  F001         	goto	u451
  1254  00021E  EF13  F001         	goto	u450
  1255  000222                     u451:
  1256  000222  EF17  F001         	goto	l1584
  1257  000226                     u450:
  1258  000226                     
  1259                           ;rgbButton.c: 34:         cButton.buttonStates.isPressed = 1;
  1260  000226  0E01               	movlw	1
  1261  000228  6E01               	movwf	_cButton^0,c
  1262                           
  1263                           ;rgbButton.c: 35:     }
  1264  00022A  EF19  F001         	goto	l1586
  1265  00022E                     l1584:
  1266                           
  1267                           ;rgbButton.c: 37:         cButton.buttonStates.isPressed = 0;
  1268  00022E  0E00               	movlw	0
  1269  000230  6E01               	movwf	_cButton^0,c
  1270  000232                     l1586:
  1271                           
  1272                           ;rgbButton.c: 39:     if(cButton.buttonStates.isPressed != cButton.buttonStates.lastIsPr
      +                          essed){
  1273  000232  5001               	movf	_cButton^0,w,c
  1274  000234  1802               	xorwf	(_cButton+1)^0,w,c
  1275  000236  B4D8               	btfsc	status,2,c
  1276  000238  EF20  F001         	goto	u461
  1277  00023C  EF22  F001         	goto	u460
  1278  000240                     u461:
  1279  000240  EF2E  F001         	goto	l1590
  1280  000244                     u460:
  1281  000244                     
  1282                           ;rgbButton.c: 40:         cButton.buttonStates.changing = 1;
  1283  000244  0E01               	movlw	1
  1284  000246  6E03               	movwf	(_cButton+2)^0,c
  1285                           
  1286                           ;rgbButton.c: 41:         cButton.ticks.buttonPressedTicks = 0;
  1287  000248  0E00               	movlw	0
  1288  00024A  6E04               	movwf	(_cButton+3)^0,c
  1289  00024C  0E00               	movlw	0
  1290  00024E  6E05               	movwf	(_cButton+4)^0,c
  1291  000250  0E00               	movlw	0
  1292  000252  6E06               	movwf	(_cButton+5)^0,c
  1293  000254  0E00               	movlw	0
  1294  000256  6E07               	movwf	(_cButton+6)^0,c
  1295                           
  1296                           ;rgbButton.c: 42:     }
  1297  000258  EF30  F001         	goto	l405
  1298  00025C                     l1590:
  1299                           
  1300                           ;rgbButton.c: 44:         cButton.buttonStates.changing = 0;
  1301  00025C  0E00               	movlw	0
  1302  00025E  6E03               	movwf	(_cButton+2)^0,c
  1303  000260                     l405:
  1304  000260  0012               	return		;funcret
  1305  000262                     __end_of_rgbButtonHandler:
  1306                           	callstack 0
  1307                           
  1308 ;; *************** function _updateColor *****************
  1309 ;; Defined at:
  1310 ;;		line 130 in file "rgbButton.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;		None
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;  calculatedCo    2    7[COMRAM] unsigned short 
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  1    wreg      void 
  1317 ;; Registers used:
  1318 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1325 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1326 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1327 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1328 ;;Total ram usage:        3 bytes
  1329 ;; Hardware stack levels used: 1
  1330 ;; Hardware stack levels required when called: 6
  1331 ;; This function calls:
  1332 ;;		_PWM1_LoadDutyValue
  1333 ;;		_PWM3_LoadDutyValue
  1334 ;;		_PWM4_LoadDutyValue
  1335 ;; This function is called by:
  1336 ;;		_rgbButtonHandler
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           	psect	text10
  1341  0003E8                     __ptext10:
  1342                           	callstack 0
  1343  0003E8                     _updateColor:
  1344                           	callstack 22
  1345  0003E8                     
  1346                           ;rgbButton.c: 133:     calculatedColorValue = (255 - cButton.color.red) * (1024/256);
  1347  0003E8  5010               	movf	(_cButton+15)^0,w,c
  1348  0003EA  0AFF               	xorlw	255
  1349  0003EC  6E26               	movwf	??_updateColor^0,c
  1350  0003EE  5026               	movf	??_updateColor^0,w,c
  1351  0003F0  0D04               	mullw	4
  1352  0003F2  CFF3 F027          	movff	prodl,updateColor@calculatedColorValue
  1353  0003F6  CFF4 F028          	movff	prodh,updateColor@calculatedColorValue+1
  1354  0003FA                     
  1355                           ;rgbButton.c: 134:     PWM3_LoadDutyValue(calculatedColorValue);
  1356  0003FA  C027  F022         	movff	updateColor@calculatedColorValue,PWM3_LoadDutyValue@dutyValue
  1357  0003FE  C028  F023         	movff	updateColor@calculatedColorValue+1,PWM3_LoadDutyValue@dutyValue+1
  1358  000402  ECAD  F002         	call	_PWM3_LoadDutyValue	;wreg free
  1359  000406                     
  1360                           ;rgbButton.c: 136:     calculatedColorValue = (255 - cButton.color.green) * (1024/256);
  1361  000406  5011               	movf	(_cButton+16)^0,w,c
  1362  000408  0AFF               	xorlw	255
  1363  00040A  6E26               	movwf	??_updateColor^0,c
  1364  00040C  5026               	movf	??_updateColor^0,w,c
  1365  00040E  0D04               	mullw	4
  1366  000410  CFF3 F027          	movff	prodl,updateColor@calculatedColorValue
  1367  000414  CFF4 F028          	movff	prodh,updateColor@calculatedColorValue+1
  1368  000418                     
  1369                           ;rgbButton.c: 137:     PWM4_LoadDutyValue(calculatedColorValue);
  1370  000418  C027  F022         	movff	updateColor@calculatedColorValue,PWM4_LoadDutyValue@dutyValue
  1371  00041C  C028  F023         	movff	updateColor@calculatedColorValue+1,PWM4_LoadDutyValue@dutyValue+1
  1372  000420  EC93  F002         	call	_PWM4_LoadDutyValue	;wreg free
  1373  000424                     
  1374                           ;rgbButton.c: 139:     calculatedColorValue = (255 - cButton.color.blue) * (1024/256);
  1375  000424  5012               	movf	(_cButton+17)^0,w,c
  1376  000426  0AFF               	xorlw	255
  1377  000428  6E26               	movwf	??_updateColor^0,c
  1378  00042A  5026               	movf	??_updateColor^0,w,c
  1379  00042C  0D04               	mullw	4
  1380  00042E  CFF3 F027          	movff	prodl,updateColor@calculatedColorValue
  1381  000432  CFF4 F028          	movff	prodh,updateColor@calculatedColorValue+1
  1382  000436                     
  1383                           ;rgbButton.c: 140:     PWM1_LoadDutyValue(calculatedColorValue);
  1384  000436  C027  F022         	movff	updateColor@calculatedColorValue,PWM1_LoadDutyValue@dutyValue
  1385  00043A  C028  F023         	movff	updateColor@calculatedColorValue+1,PWM1_LoadDutyValue@dutyValue+1
  1386  00043E  ECE0  F002         	call	_PWM1_LoadDutyValue	;wreg free
  1387  000442  0012               	return		;funcret
  1388  000444                     __end_of_updateColor:
  1389                           	callstack 0
  1390                           
  1391 ;; *************** function _PWM4_LoadDutyValue *****************
  1392 ;; Defined at:
  1393 ;;		line 74 in file "mcc_generated_files/pwm4.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;  dutyValue       2    2[COMRAM] unsigned short 
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;		None
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1    wreg      void 
  1400 ;; Registers used:
  1401 ;;		wreg, status,2, status,0
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1407 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1409 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1410 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1411 ;;Total ram usage:        4 bytes
  1412 ;; Hardware stack levels used: 1
  1413 ;; Hardware stack levels required when called: 5
  1414 ;; This function calls:
  1415 ;;		Nothing
  1416 ;; This function is called by:
  1417 ;;		_updateColor
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421                           	psect	text11
  1422  000526                     __ptext11:
  1423                           	callstack 0
  1424  000526                     _PWM4_LoadDutyValue:
  1425                           	callstack 22
  1426  000526                     
  1427                           ;mcc_generated_files/pwm4.c: 74:  void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm4.c: 75:  {;mcc_generated_files/pwm4.c: 77:      PWM4DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  1428  000526  C022  F024         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
  1429  00052A  C023  F025         	movff	PWM4_LoadDutyValue@dutyValue+1,??_PWM4_LoadDutyValue+1
  1430  00052E  90D8               	bcf	status,0,c
  1431  000530  3225               	rrcf	(??_PWM4_LoadDutyValue+1)^0,f,c
  1432  000532  3224               	rrcf	??_PWM4_LoadDutyValue^0,f,c
  1433  000534  90D8               	bcf	status,0,c
  1434  000536  3225               	rrcf	(??_PWM4_LoadDutyValue+1)^0,f,c
  1435  000538  3224               	rrcf	??_PWM4_LoadDutyValue^0,f,c
  1436  00053A  5024               	movf	??_PWM4_LoadDutyValue^0,w,c
  1437  00053C  6EA0               	movwf	160,c	;volatile
  1438                           
  1439                           ;mcc_generated_files/pwm4.c: 80:      PWM4DCL = (dutyValue & 0x0003)<<6;
  1440  00053E  C022  F024         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
  1441  000542  0E03               	movlw	3
  1442  000544  1624               	andwf	??_PWM4_LoadDutyValue^0,f,c
  1443  000546  0E06               	movlw	6
  1444  000548  6E25               	movwf	(??_PWM4_LoadDutyValue+1)^0,c
  1445  00054A                     u385:
  1446  00054A  90D8               	bcf	status,0,c
  1447  00054C  3624               	rlcf	??_PWM4_LoadDutyValue^0,f,c
  1448  00054E  2E25               	decfsz	(??_PWM4_LoadDutyValue+1)^0,f,c
  1449  000550  EFA5  F002         	goto	u385
  1450  000554  5024               	movf	??_PWM4_LoadDutyValue^0,w,c
  1451  000556  6E9F               	movwf	159,c	;volatile
  1452  000558  0012               	return		;funcret
  1453  00055A                     __end_of_PWM4_LoadDutyValue:
  1454                           	callstack 0
  1455                           
  1456 ;; *************** function _PWM3_LoadDutyValue *****************
  1457 ;; Defined at:
  1458 ;;		line 74 in file "mcc_generated_files/pwm3.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;  dutyValue       2    2[COMRAM] unsigned short 
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;		None
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  1    wreg      void 
  1465 ;; Registers used:
  1466 ;;		wreg, status,2, status,0
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1472 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1474 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1475 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1476 ;;Total ram usage:        4 bytes
  1477 ;; Hardware stack levels used: 1
  1478 ;; Hardware stack levels required when called: 5
  1479 ;; This function calls:
  1480 ;;		Nothing
  1481 ;; This function is called by:
  1482 ;;		_updateColor
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           	psect	text12
  1487  00055A                     __ptext12:
  1488                           	callstack 0
  1489  00055A                     _PWM3_LoadDutyValue:
  1490                           	callstack 22
  1491  00055A                     
  1492                           ;mcc_generated_files/pwm3.c: 74:  void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm3.c: 75:  {;mcc_generated_files/pwm3.c: 77:      PWM3DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  1493  00055A  C022  F024         	movff	PWM3_LoadDutyValue@dutyValue,??_PWM3_LoadDutyValue
  1494  00055E  C023  F025         	movff	PWM3_LoadDutyValue@dutyValue+1,??_PWM3_LoadDutyValue+1
  1495  000562  90D8               	bcf	status,0,c
  1496  000564  3225               	rrcf	(??_PWM3_LoadDutyValue+1)^0,f,c
  1497  000566  3224               	rrcf	??_PWM3_LoadDutyValue^0,f,c
  1498  000568  90D8               	bcf	status,0,c
  1499  00056A  3225               	rrcf	(??_PWM3_LoadDutyValue+1)^0,f,c
  1500  00056C  3224               	rrcf	??_PWM3_LoadDutyValue^0,f,c
  1501  00056E  5024               	movf	??_PWM3_LoadDutyValue^0,w,c
  1502  000570  6EA3               	movwf	163,c	;volatile
  1503                           
  1504                           ;mcc_generated_files/pwm3.c: 80:      PWM3DCL = (dutyValue & 0x0003)<<6;
  1505  000572  C022  F024         	movff	PWM3_LoadDutyValue@dutyValue,??_PWM3_LoadDutyValue
  1506  000576  0E03               	movlw	3
  1507  000578  1624               	andwf	??_PWM3_LoadDutyValue^0,f,c
  1508  00057A  0E06               	movlw	6
  1509  00057C  6E25               	movwf	(??_PWM3_LoadDutyValue+1)^0,c
  1510  00057E                     u375:
  1511  00057E  90D8               	bcf	status,0,c
  1512  000580  3624               	rlcf	??_PWM3_LoadDutyValue^0,f,c
  1513  000582  2E25               	decfsz	(??_PWM3_LoadDutyValue+1)^0,f,c
  1514  000584  EFBF  F002         	goto	u375
  1515  000588  5024               	movf	??_PWM3_LoadDutyValue^0,w,c
  1516  00058A  6EA2               	movwf	162,c	;volatile
  1517  00058C  0012               	return		;funcret
  1518  00058E                     __end_of_PWM3_LoadDutyValue:
  1519                           	callstack 0
  1520                           
  1521 ;; *************** function _PWM1_LoadDutyValue *****************
  1522 ;; Defined at:
  1523 ;;		line 82 in file "mcc_generated_files/pwm1.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;  dutyValue       2    2[COMRAM] unsigned short 
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;		None
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      void 
  1530 ;; Registers used:
  1531 ;;		wreg, status,2, status,0
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1537 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1540 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1541 ;;Total ram usage:        2 bytes
  1542 ;; Hardware stack levels used: 1
  1543 ;; Hardware stack levels required when called: 5
  1544 ;; This function calls:
  1545 ;;		Nothing
  1546 ;; This function is called by:
  1547 ;;		_updateColor
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           	psect	text13
  1552  0005C0                     __ptext13:
  1553                           	callstack 0
  1554  0005C0                     _PWM1_LoadDutyValue:
  1555                           	callstack 22
  1556  0005C0                     
  1557                           ;mcc_generated_files/pwm1.c: 82: void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm1.c: 83: {;mcc_generated_files/pwm1.c: 84:     dutyValue &= 0x03FF;
  1558  0005C0  0EFF               	movlw	255
  1559  0005C2  1622               	andwf	PWM1_LoadDutyValue@dutyValue^0,f,c
  1560  0005C4  0E03               	movlw	3
  1561  0005C6  1623               	andwf	(PWM1_LoadDutyValue@dutyValue+1)^0,f,c
  1562  0005C8                     
  1563                           ;mcc_generated_files/pwm1.c: 87:     if(CCP1CONbits.FMT)
  1564  0005C8  A8AB               	btfss	171,4,c	;volatile
  1565  0005CA  EFE9  F002         	goto	u351
  1566  0005CE  EFEB  F002         	goto	u350
  1567  0005D2                     u351:
  1568  0005D2  EFF2  F002         	goto	l1496
  1569  0005D6                     u350:
  1570  0005D6                     
  1571                           ;mcc_generated_files/pwm1.c: 88:     {;mcc_generated_files/pwm1.c: 89:         dutyValue
      +                           <<= 6;
  1572  0005D6  0E06               	movlw	6
  1573  0005D8                     u365:
  1574  0005D8  90D8               	bcf	status,0,c
  1575  0005DA  3622               	rlcf	PWM1_LoadDutyValue@dutyValue^0,f,c
  1576  0005DC  3623               	rlcf	(PWM1_LoadDutyValue@dutyValue+1)^0,f,c
  1577  0005DE  2EE8               	decfsz	wreg,f,c
  1578  0005E0  EFEC  F002         	goto	u365
  1579  0005E4                     l1496:
  1580                           
  1581                           ;mcc_generated_files/pwm1.c: 90:         CCPR1H = dutyValue >> 8;
  1582  0005E4  5023               	movf	(PWM1_LoadDutyValue@dutyValue+1)^0,w,c
  1583  0005E6  6EAA               	movwf	170,c	;volatile
  1584  0005E8                     
  1585                           ;mcc_generated_files/pwm1.c: 91:         CCPR1L = dutyValue;
  1586  0005E8  C022  FFA9         	movff	PWM1_LoadDutyValue@dutyValue,4009	;volatile
  1587  0005EC  0012               	return		;funcret
  1588  0005EE                     __end_of_PWM1_LoadDutyValue:
  1589                           	callstack 0
  1590                           
  1591 ;; *************** function _TMR4_StartTimer *****************
  1592 ;; Defined at:
  1593 ;;		line 114 in file "mcc_generated_files/tmr4.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;		None
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;		None
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  1    wreg      void 
  1600 ;; Registers used:
  1601 ;;		cstack
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1611 ;;Total ram usage:        0 bytes
  1612 ;; Hardware stack levels used: 1
  1613 ;; Hardware stack levels required when called: 6
  1614 ;; This function calls:
  1615 ;;		_TMR4_Start
  1616 ;; This function is called by:
  1617 ;;		_main
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           	psect	text14
  1622  0007BC                     __ptext14:
  1623                           	callstack 0
  1624  0007BC                     _TMR4_StartTimer:
  1625                           	callstack 24
  1626  0007BC                     
  1627                           ;mcc_generated_files/tmr4.c: 116:     TMR4_Start();
  1628  0007BC  ECE1  F003         	call	_TMR4_Start	;wreg free
  1629  0007C0  0012               	return		;funcret
  1630  0007C2                     __end_of_TMR4_StartTimer:
  1631                           	callstack 0
  1632                           
  1633 ;; *************** function _TMR4_Start *****************
  1634 ;; Defined at:
  1635 ;;		line 108 in file "mcc_generated_files/tmr4.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;		None
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;		None
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  1    wreg      void 
  1642 ;; Registers used:
  1643 ;;		None
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1653 ;;Total ram usage:        0 bytes
  1654 ;; Hardware stack levels used: 1
  1655 ;; Hardware stack levels required when called: 5
  1656 ;; This function calls:
  1657 ;;		Nothing
  1658 ;; This function is called by:
  1659 ;;		_TMR4_StartTimer
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text15
  1664  0007C2                     __ptext15:
  1665                           	callstack 0
  1666  0007C2                     _TMR4_Start:
  1667                           	callstack 24
  1668  0007C2                     
  1669                           ;mcc_generated_files/tmr4.c: 111:     T4CONbits.TMR4ON = 1;
  1670  0007C2  8EB6               	bsf	182,7,c	;volatile
  1671  0007C4  0012               	return		;funcret
  1672  0007C6                     __end_of_TMR4_Start:
  1673                           	callstack 0
  1674                           
  1675 ;; *************** function _SYSTEM_Initialize *****************
  1676 ;; Defined at:
  1677 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;		None
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;		None
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  1    wreg      void 
  1684 ;; Registers used:
  1685 ;;		wreg, status,2, status,0, cstack
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1695 ;;Total ram usage:        0 bytes
  1696 ;; Hardware stack levels used: 1
  1697 ;; Hardware stack levels required when called: 7
  1698 ;; This function calls:
  1699 ;;		_INTERRUPT_Initialize
  1700 ;;		_OSCILLATOR_Initialize
  1701 ;;		_PIN_MANAGER_Initialize
  1702 ;;		_PMD_Initialize
  1703 ;;		_PWM1_Initialize
  1704 ;;		_PWM3_Initialize
  1705 ;;		_PWM4_Initialize
  1706 ;;		_TMR0_Initialize
  1707 ;;		_TMR4_Initialize
  1708 ;; This function is called by:
  1709 ;;		_main
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713                           	psect	text16
  1714  00066C                     __ptext16:
  1715                           	callstack 0
  1716  00066C                     _SYSTEM_Initialize:
  1717                           	callstack 23
  1718  00066C                     
  1719                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  1720  00066C  ECE3  F003         	call	_INTERRUPT_Initialize	;wreg free
  1721  000670                     
  1722                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  1723  000670  EC6A  F003         	call	_PMD_Initialize	;wreg free
  1724  000674                     
  1725                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1726  000674  EC22  F002         	call	_PIN_MANAGER_Initialize	;wreg free
  1727  000678                     
  1728                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1729  000678  EC92  F003         	call	_OSCILLATOR_Initialize	;wreg free
  1730  00067C                     
  1731                           ;mcc_generated_files/mcc.c: 56:     PWM1_Initialize();
  1732  00067C  ECB2  F003         	call	_PWM1_Initialize	;wreg free
  1733  000680                     
  1734                           ;mcc_generated_files/mcc.c: 57:     PWM4_Initialize();
  1735  000680  EC9E  F003         	call	_PWM4_Initialize	;wreg free
  1736  000684                     
  1737                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  1738  000684  EC0E  F003         	call	_TMR4_Initialize	;wreg free
  1739  000688                     
  1740                           ;mcc_generated_files/mcc.c: 59:     PWM3_Initialize();
  1741  000688  ECA8  F003         	call	_PWM3_Initialize	;wreg free
  1742  00068C                     
  1743                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  1744  00068C  EC76  F002         	call	_TMR0_Initialize	;wreg free
  1745  000690  0012               	return		;funcret
  1746  000692                     __end_of_SYSTEM_Initialize:
  1747                           	callstack 0
  1748                           
  1749 ;; *************** function _TMR4_Initialize *****************
  1750 ;; Defined at:
  1751 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;		None
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;		None
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  1    wreg      void 
  1758 ;; Registers used:
  1759 ;;		wreg, status,2, status,0, cstack
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1769 ;;Total ram usage:        0 bytes
  1770 ;; Hardware stack levels used: 1
  1771 ;; Hardware stack levels required when called: 6
  1772 ;; This function calls:
  1773 ;;		_TMR4_SetInterruptHandler
  1774 ;; This function is called by:
  1775 ;;		_SYSTEM_Initialize
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           	psect	text17
  1780  00061C                     __ptext17:
  1781                           	callstack 0
  1782  00061C                     _TMR4_Initialize:
  1783                           	callstack 23
  1784  00061C                     
  1785                           ;mcc_generated_files/tmr4.c: 69:     T4CLKCON = 0x01;
  1786  00061C  0E01               	movlw	1
  1787  00061E  6EB8               	movwf	184,c	;volatile
  1788                           
  1789                           ;mcc_generated_files/tmr4.c: 72:     T4HLT = 0x20;
  1790  000620  0E20               	movlw	32
  1791  000622  6EB7               	movwf	183,c	;volatile
  1792                           
  1793                           ;mcc_generated_files/tmr4.c: 75:     T4RST = 0x00;
  1794  000624  0E00               	movlw	0
  1795  000626  6EB9               	movwf	185,c	;volatile
  1796  000628                     
  1797                           ;mcc_generated_files/tmr4.c: 78:     T4PR = 0xFF;
  1798  000628  68B5               	setf	181,c	;volatile
  1799                           
  1800                           ;mcc_generated_files/tmr4.c: 81:     T4TMR = 0x00;
  1801  00062A  0E00               	movlw	0
  1802  00062C  6EB4               	movwf	180,c	;volatile
  1803  00062E                     
  1804                           ;mcc_generated_files/tmr4.c: 84:     PIR4bits.TMR4IF = 0;
  1805  00062E  010E               	movlb	14	; () banked
  1806  000630  97C9               	bcf	201,3,b	;volatile
  1807  000632                     
  1808                           ; BSR set to: 14
  1809                           ;mcc_generated_files/tmr4.c: 87:     PIE4bits.TMR4IE = 1;
  1810  000632  87C1               	bsf	193,3,b	;volatile
  1811  000634                     
  1812                           ; BSR set to: 14
  1813                           ;mcc_generated_files/tmr4.c: 90:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  1814  000634  0ECA               	movlw	low _TMR4_DefaultInterruptHandler
  1815  000636  6E22               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1816  000638  0E07               	movlw	high _TMR4_DefaultInterruptHandler
  1817  00063A  6E23               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1818  00063C  ECD4  F003         	call	_TMR4_SetInterruptHandler	;wreg free
  1819  000640                     
  1820                           ;mcc_generated_files/tmr4.c: 93:     T4CON = 0xF0;
  1821  000640  0EF0               	movlw	240
  1822  000642  6EB6               	movwf	182,c	;volatile
  1823  000644  0012               	return		;funcret
  1824  000646                     __end_of_TMR4_Initialize:
  1825                           	callstack 0
  1826                           
  1827 ;; *************** function _TMR4_SetInterruptHandler *****************
  1828 ;; Defined at:
  1829 ;;		line 178 in file "mcc_generated_files/tmr4.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  1832 ;;		 -> TMR4_DefaultInterruptHandler(1), 
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;		None
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      void 
  1837 ;; Registers used:
  1838 ;;		wreg, status,2, status,0
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1844 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1847 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1848 ;;Total ram usage:        2 bytes
  1849 ;; Hardware stack levels used: 1
  1850 ;; Hardware stack levels required when called: 5
  1851 ;; This function calls:
  1852 ;;		Nothing
  1853 ;; This function is called by:
  1854 ;;		_TMR4_Initialize
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           	psect	text18
  1859  0007A8                     __ptext18:
  1860                           	callstack 0
  1861  0007A8                     _TMR4_SetInterruptHandler:
  1862                           	callstack 23
  1863  0007A8                     
  1864                           ;mcc_generated_files/tmr4.c: 179:     TMR4_InterruptHandler = InterruptHandler;
  1865  0007A8  C022  F03C         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
  1866  0007AC  C023  F03D         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
  1867  0007B0  0012               	return		;funcret
  1868  0007B2                     __end_of_TMR4_SetInterruptHandler:
  1869                           	callstack 0
  1870                           
  1871 ;; *************** function _TMR0_Initialize *****************
  1872 ;; Defined at:
  1873 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;		None
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;		None
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      void 
  1880 ;; Registers used:
  1881 ;;		wreg, status,2, status,0, cstack
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1889 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1890 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1891 ;;Total ram usage:        2 bytes
  1892 ;; Hardware stack levels used: 1
  1893 ;; Hardware stack levels required when called: 6
  1894 ;; This function calls:
  1895 ;;		_TMR0_SetInterruptHandler
  1896 ;; This function is called by:
  1897 ;;		_SYSTEM_Initialize
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           	psect	text19
  1902  0004EC                     __ptext19:
  1903                           	callstack 0
  1904  0004EC                     _TMR0_Initialize:
  1905                           	callstack 23
  1906  0004EC                     
  1907                           ;mcc_generated_files/tmr0.c: 71:     T0CON1 = 0x40;
  1908  0004EC  0E40               	movlw	64
  1909  0004EE  6ED5               	movwf	213,c	;volatile
  1910                           
  1911                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0xC1;
  1912  0004F0  0EC1               	movlw	193
  1913  0004F2  6ED3               	movwf	211,c	;volatile
  1914                           
  1915                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0x80;
  1916  0004F4  0E80               	movlw	128
  1917  0004F6  6ED2               	movwf	210,c	;volatile
  1918  0004F8                     
  1919                           ;mcc_generated_files/tmr0.c: 80:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  1920  0004F8  50D2               	movf	210,w,c	;volatile
  1921  0004FA  CFD3 F024          	movff	4051,??_TMR0_Initialize	;volatile
  1922  0004FE  6A25               	clrf	(??_TMR0_Initialize+1)^0,c
  1923  000500  C024  F025         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  1924  000504  6A24               	clrf	??_TMR0_Initialize^0,c
  1925  000506  1024               	iorwf	??_TMR0_Initialize^0,w,c
  1926  000508  6E40               	movwf	_timer0ReloadVal16bit^0,c	;volatile
  1927  00050A  5025               	movf	(??_TMR0_Initialize+1)^0,w,c
  1928  00050C  6E41               	movwf	(_timer0ReloadVal16bit+1)^0,c	;volatile
  1929  00050E                     
  1930                           ;mcc_generated_files/tmr0.c: 83:     PIR0bits.TMR0IF = 0;
  1931  00050E  010E               	movlb	14	; () banked
  1932  000510  9BC5               	bcf	197,5,b	;volatile
  1933  000512                     
  1934                           ; BSR set to: 14
  1935                           ;mcc_generated_files/tmr0.c: 86:     PIE0bits.TMR0IE = 1;
  1936  000512  8BBD               	bsf	189,5,b	;volatile
  1937  000514                     
  1938                           ; BSR set to: 14
  1939                           ;mcc_generated_files/tmr0.c: 89:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  1940  000514  0ECC               	movlw	low _TMR0_DefaultInterruptHandler
  1941  000516  6E22               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1942  000518  0E07               	movlw	high _TMR0_DefaultInterruptHandler
  1943  00051A  6E23               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1944  00051C  ECD9  F003         	call	_TMR0_SetInterruptHandler	;wreg free
  1945  000520                     
  1946                           ;mcc_generated_files/tmr0.c: 92:     T0CON0 = 0x90;
  1947  000520  0E90               	movlw	144
  1948  000522  6ED4               	movwf	212,c	;volatile
  1949  000524  0012               	return		;funcret
  1950  000526                     __end_of_TMR0_Initialize:
  1951                           	callstack 0
  1952                           
  1953 ;; *************** function _TMR0_SetInterruptHandler *****************
  1954 ;; Defined at:
  1955 ;;		line 159 in file "mcc_generated_files/tmr0.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  1958 ;;		 -> msTick(1), TMR0_DefaultInterruptHandler(1), 
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;		None
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  1    wreg      void 
  1963 ;; Registers used:
  1964 ;;		wreg, status,2, status,0
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1970 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1973 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1974 ;;Total ram usage:        2 bytes
  1975 ;; Hardware stack levels used: 1
  1976 ;; Hardware stack levels required when called: 5
  1977 ;; This function calls:
  1978 ;;		Nothing
  1979 ;; This function is called by:
  1980 ;;		_TMR0_Initialize
  1981 ;;		_appInit
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           	psect	text20
  1986  0007B2                     __ptext20:
  1987                           	callstack 0
  1988  0007B2                     _TMR0_SetInterruptHandler:
  1989                           	callstack 24
  1990  0007B2                     
  1991                           ;mcc_generated_files/tmr0.c: 160:     TMR0_InterruptHandler = InterruptHandler;
  1992  0007B2  C022  F03E         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1993  0007B6  C023  F03F         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1994  0007BA  0012               	return		;funcret
  1995  0007BC                     __end_of_TMR0_SetInterruptHandler:
  1996                           	callstack 0
  1997                           
  1998 ;; *************** function _PWM4_Initialize *****************
  1999 ;; Defined at:
  2000 ;;		line 58 in file "mcc_generated_files/pwm4.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;		None
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;		None
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  1    wreg      void 
  2007 ;; Registers used:
  2008 ;;		wreg, status,2
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2018 ;;Total ram usage:        0 bytes
  2019 ;; Hardware stack levels used: 1
  2020 ;; Hardware stack levels required when called: 5
  2021 ;; This function calls:
  2022 ;;		Nothing
  2023 ;; This function is called by:
  2024 ;;		_SYSTEM_Initialize
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           	psect	text21
  2029  00073C                     __ptext21:
  2030                           	callstack 0
  2031  00073C                     _PWM4_Initialize:
  2032                           	callstack 24
  2033  00073C                     
  2034                           ;mcc_generated_files/pwm4.c: 62:     PWM4CON = 0x80;
  2035  00073C  0E80               	movlw	128
  2036  00073E  6EA1               	movwf	161,c	;volatile
  2037  000740                     
  2038                           ;mcc_generated_files/pwm4.c: 65:     PWM4DCH = 0xFF;
  2039  000740  68A0               	setf	160,c	;volatile
  2040                           
  2041                           ;mcc_generated_files/pwm4.c: 68:     PWM4DCL = 0xC0;
  2042  000742  0EC0               	movlw	192
  2043  000744  6E9F               	movwf	159,c	;volatile
  2044                           
  2045                           ;mcc_generated_files/pwm4.c: 71:     CCPTMRSbits.P4TSEL = 2;
  2046  000746  50AD               	movf	173,w,c	;volatile
  2047  000748  0B3F               	andlw	-193
  2048  00074A  0980               	iorlw	128
  2049  00074C  6EAD               	movwf	173,c	;volatile
  2050  00074E  0012               	return		;funcret
  2051  000750                     __end_of_PWM4_Initialize:
  2052                           	callstack 0
  2053                           
  2054 ;; *************** function _PWM3_Initialize *****************
  2055 ;; Defined at:
  2056 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;		None
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;		None
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  1    wreg      void 
  2063 ;; Registers used:
  2064 ;;		wreg, status,2
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2074 ;;Total ram usage:        0 bytes
  2075 ;; Hardware stack levels used: 1
  2076 ;; Hardware stack levels required when called: 5
  2077 ;; This function calls:
  2078 ;;		Nothing
  2079 ;; This function is called by:
  2080 ;;		_SYSTEM_Initialize
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           	psect	text22
  2085  000750                     __ptext22:
  2086                           	callstack 0
  2087  000750                     _PWM3_Initialize:
  2088                           	callstack 24
  2089  000750                     
  2090                           ;mcc_generated_files/pwm3.c: 62:     PWM3CON = 0x80;
  2091  000750  0E80               	movlw	128
  2092  000752  6EA4               	movwf	164,c	;volatile
  2093  000754                     
  2094                           ;mcc_generated_files/pwm3.c: 65:     PWM3DCH = 0xFF;
  2095  000754  68A3               	setf	163,c	;volatile
  2096                           
  2097                           ;mcc_generated_files/pwm3.c: 68:     PWM3DCL = 0xC0;
  2098  000756  0EC0               	movlw	192
  2099  000758  6EA2               	movwf	162,c	;volatile
  2100                           
  2101                           ;mcc_generated_files/pwm3.c: 71:     CCPTMRSbits.P3TSEL = 2;
  2102  00075A  50AD               	movf	173,w,c	;volatile
  2103  00075C  0BCF               	andlw	-49
  2104  00075E  0920               	iorlw	32
  2105  000760  6EAD               	movwf	173,c	;volatile
  2106  000762  0012               	return		;funcret
  2107  000764                     __end_of_PWM3_Initialize:
  2108                           	callstack 0
  2109                           
  2110 ;; *************** function _PWM1_Initialize *****************
  2111 ;; Defined at:
  2112 ;;		line 64 in file "mcc_generated_files/pwm1.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;		None
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;		None
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      void 
  2119 ;; Registers used:
  2120 ;;		wreg, status,2
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2130 ;;Total ram usage:        0 bytes
  2131 ;; Hardware stack levels used: 1
  2132 ;; Hardware stack levels required when called: 5
  2133 ;; This function calls:
  2134 ;;		Nothing
  2135 ;; This function is called by:
  2136 ;;		_SYSTEM_Initialize
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           	psect	text23
  2141  000764                     __ptext23:
  2142                           	callstack 0
  2143  000764                     _PWM1_Initialize:
  2144                           	callstack 24
  2145  000764                     
  2146                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8C;
  2147  000764  0E8C               	movlw	140
  2148  000766  6EAB               	movwf	171,c	;volatile
  2149                           
  2150                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x03;
  2151  000768  0E03               	movlw	3
  2152  00076A  6EAA               	movwf	170,c	;volatile
  2153  00076C                     
  2154                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0xFF;
  2155  00076C  68A9               	setf	169,c	;volatile
  2156                           
  2157                           ;mcc_generated_files/pwm1.c: 78:  CCPTMRSbits.C1TSEL = 0x2;
  2158  00076E  50AD               	movf	173,w,c	;volatile
  2159  000770  0BFC               	andlw	-4
  2160  000772  0902               	iorlw	2
  2161  000774  6EAD               	movwf	173,c	;volatile
  2162  000776  0012               	return		;funcret
  2163  000778                     __end_of_PWM1_Initialize:
  2164                           	callstack 0
  2165                           
  2166 ;; *************** function _PMD_Initialize *****************
  2167 ;; Defined at:
  2168 ;;		line 77 in file "mcc_generated_files/mcc.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;		None
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;		None
  2173 ;; Return value:  Size  Location     Type
  2174 ;;                  1    wreg      void 
  2175 ;; Registers used:
  2176 ;;		wreg, status,2
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2186 ;;Total ram usage:        0 bytes
  2187 ;; Hardware stack levels used: 1
  2188 ;; Hardware stack levels required when called: 5
  2189 ;; This function calls:
  2190 ;;		Nothing
  2191 ;; This function is called by:
  2192 ;;		_SYSTEM_Initialize
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           	psect	text24
  2197  0006D4                     __ptext24:
  2198                           	callstack 0
  2199  0006D4                     _PMD_Initialize:
  2200                           	callstack 24
  2201  0006D4                     
  2202                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
  2203  0006D4  0E00               	movlw	0
  2204  0006D6  010E               	movlb	14	; () banked
  2205  0006D8  6FDC               	movwf	220,b	;volatile
  2206                           
  2207                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
  2208  0006DA  0E00               	movlw	0
  2209  0006DC  6FDD               	movwf	221,b	;volatile
  2210                           
  2211                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
  2212  0006DE  0E00               	movlw	0
  2213  0006E0  6FDE               	movwf	222,b	;volatile
  2214                           
  2215                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
  2216  0006E2  0E00               	movlw	0
  2217  0006E4  6FDF               	movwf	223,b	;volatile
  2218                           
  2219                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
  2220  0006E6  0E00               	movlw	0
  2221  0006E8  6FE0               	movwf	224,b	;volatile
  2222                           
  2223                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
  2224  0006EA  0E00               	movlw	0
  2225  0006EC  6FE1               	movwf	225,b	;volatile
  2226  0006EE                     
  2227                           ; BSR set to: 14
  2228  0006EE  0012               	return		;funcret
  2229  0006F0                     __end_of_PMD_Initialize:
  2230                           	callstack 0
  2231                           
  2232 ;; *************** function _PIN_MANAGER_Initialize *****************
  2233 ;; Defined at:
  2234 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;		None
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;		None
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  1    wreg      void 
  2241 ;; Registers used:
  2242 ;;		wreg, status,2
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2252 ;;Total ram usage:        0 bytes
  2253 ;; Hardware stack levels used: 1
  2254 ;; Hardware stack levels required when called: 5
  2255 ;; This function calls:
  2256 ;;		Nothing
  2257 ;; This function is called by:
  2258 ;;		_SYSTEM_Initialize
  2259 ;; This function uses a non-reentrant model
  2260 ;;
  2261                           
  2262                           	psect	text25
  2263  000444                     __ptext25:
  2264                           	callstack 0
  2265  000444                     _PIN_MANAGER_Initialize:
  2266                           	callstack 24
  2267  000444                     
  2268                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2269  000444  0E00               	movlw	0
  2270  000446  6E82               	movwf	130,c	;volatile
  2271                           
  2272                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2273  000448  0E00               	movlw	0
  2274  00044A  6E83               	movwf	131,c	;volatile
  2275                           
  2276                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x02;
  2277  00044C  0E02               	movlw	2
  2278  00044E  6E84               	movwf	132,c	;volatile
  2279  000450                     
  2280                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  2281  000450  6887               	setf	135,c	;volatile
  2282  000452                     
  2283                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  2284  000452  6888               	setf	136,c	;volatile
  2285                           
  2286                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xD5;
  2287  000454  0ED5               	movlw	213
  2288  000456  6E89               	movwf	137,c	;volatile
  2289  000458                     
  2290                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
  2291  000458  010F               	movlb	15	; () banked
  2292  00045A  691C               	setf	28,b	;volatile
  2293  00045C                     
  2294                           ; BSR set to: 15
  2295                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xFF;
  2296  00045C  6914               	setf	20,b	;volatile
  2297                           
  2298                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xBF;
  2299  00045E  0EBF               	movlw	191
  2300  000460  6F0C               	movwf	12,b	;volatile
  2301                           
  2302                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
  2303  000462  0E00               	movlw	0
  2304  000464  6F28               	movwf	40,b	;volatile
  2305                           
  2306                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
  2307  000466  0E00               	movlw	0
  2308  000468  6F13               	movwf	19,b	;volatile
  2309                           
  2310                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
  2311  00046A  0E00               	movlw	0
  2312  00046C  6F0B               	movwf	11,b	;volatile
  2313                           
  2314                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
  2315  00046E  0E00               	movlw	0
  2316  000470  6F1B               	movwf	27,b	;volatile
  2317                           
  2318                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  2319  000472  0E00               	movlw	0
  2320  000474  6F0A               	movwf	10,b	;volatile
  2321                           
  2322                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  2323  000476  0E00               	movlw	0
  2324  000478  6F12               	movwf	18,b	;volatile
  2325                           
  2326                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
  2327  00047A  0E00               	movlw	0
  2328  00047C  6F1A               	movwf	26,b	;volatile
  2329  00047E                     
  2330                           ; BSR set to: 15
  2331                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
  2332  00047E  6909               	setf	9,b	;volatile
  2333  000480                     
  2334                           ; BSR set to: 15
  2335                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
  2336  000480  6911               	setf	17,b	;volatile
  2337  000482                     
  2338                           ; BSR set to: 15
  2339                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  2340  000482  6919               	setf	25,b	;volatile
  2341  000484                     
  2342                           ; BSR set to: 15
  2343                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0xFF;
  2344  000484  6908               	setf	8,b	;volatile
  2345  000486                     
  2346                           ; BSR set to: 15
  2347                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xFF;
  2348  000486  6910               	setf	16,b	;volatile
  2349  000488                     
  2350                           ; BSR set to: 15
  2351                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
  2352  000488  6918               	setf	24,b	;volatile
  2353                           
  2354                           ;mcc_generated_files/pin_manager.c: 106:     INLVLE = 0x08;
  2355  00048A  0E08               	movlw	8
  2356  00048C  6F25               	movwf	37,b	;volatile
  2357                           
  2358                           ;mcc_generated_files/pin_manager.c: 115:     RC3PPS = 0x07;
  2359  00048E  0E07               	movlw	7
  2360  000490  010E               	movlb	14	; () banked
  2361  000492  6FF5               	movwf	245,b	;volatile
  2362                           
  2363                           ;mcc_generated_files/pin_manager.c: 116:     RC1PPS = 0x05;
  2364  000494  0E05               	movlw	5
  2365  000496  6FF3               	movwf	243,b	;volatile
  2366                           
  2367                           ;mcc_generated_files/pin_manager.c: 117:     RC5PPS = 0x08;
  2368  000498  0E08               	movlw	8
  2369  00049A  6FF7               	movwf	247,b	;volatile
  2370  00049C                     
  2371                           ; BSR set to: 14
  2372  00049C  0012               	return		;funcret
  2373  00049E                     __end_of_PIN_MANAGER_Initialize:
  2374                           	callstack 0
  2375                           
  2376 ;; *************** function _OSCILLATOR_Initialize *****************
  2377 ;; Defined at:
  2378 ;;		line 63 in file "mcc_generated_files/mcc.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;		None
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;		None
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  1    wreg      void 
  2385 ;; Registers used:
  2386 ;;		wreg, status,2
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2396 ;;Total ram usage:        0 bytes
  2397 ;; Hardware stack levels used: 1
  2398 ;; Hardware stack levels required when called: 5
  2399 ;; This function calls:
  2400 ;;		Nothing
  2401 ;; This function is called by:
  2402 ;;		_SYSTEM_Initialize
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           	psect	text26
  2407  000724                     __ptext26:
  2408                           	callstack 0
  2409  000724                     _OSCILLATOR_Initialize:
  2410                           	callstack 24
  2411  000724                     
  2412                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x60;
  2413  000724  0E60               	movlw	96
  2414  000726  010E               	movlb	14	; () banked
  2415  000728  6FD3               	movwf	211,b	;volatile
  2416                           
  2417                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
  2418  00072A  0E00               	movlw	0
  2419  00072C  6FD5               	movwf	213,b	;volatile
  2420                           
  2421                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
  2422  00072E  0E00               	movlw	0
  2423  000730  6FD7               	movwf	215,b	;volatile
  2424                           
  2425                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x08;
  2426  000732  0E08               	movlw	8
  2427  000734  6FD9               	movwf	217,b	;volatile
  2428                           
  2429                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  2430  000736  0E00               	movlw	0
  2431  000738  6FD8               	movwf	216,b	;volatile
  2432  00073A                     
  2433                           ; BSR set to: 14
  2434  00073A  0012               	return		;funcret
  2435  00073C                     __end_of_OSCILLATOR_Initialize:
  2436                           	callstack 0
  2437                           
  2438 ;; *************** function _INTERRUPT_Initialize *****************
  2439 ;; Defined at:
  2440 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;		None
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;		None
  2445 ;; Return value:  Size  Location     Type
  2446 ;;                  1    wreg      void 
  2447 ;; Registers used:
  2448 ;;		None
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2458 ;;Total ram usage:        0 bytes
  2459 ;; Hardware stack levels used: 1
  2460 ;; Hardware stack levels required when called: 5
  2461 ;; This function calls:
  2462 ;;		Nothing
  2463 ;; This function is called by:
  2464 ;;		_SYSTEM_Initialize
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           	psect	text27
  2469  0007C6                     __ptext27:
  2470                           	callstack 0
  2471  0007C6                     _INTERRUPT_Initialize:
  2472                           	callstack 24
  2473  0007C6                     
  2474                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  2475  0007C6  9AF2               	bcf	242,5,c	;volatile
  2476  0007C8  0012               	return		;funcret
  2477  0007CA                     __end_of_INTERRUPT_Initialize:
  2478                           	callstack 0
  2479                           
  2480 ;; *************** function _INTERRUPT_InterruptManager *****************
  2481 ;; Defined at:
  2482 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;		None
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;		None
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  1    wreg      void 
  2489 ;; Registers used:
  2490 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2498 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2499 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2500 ;;Total ram usage:        2 bytes
  2501 ;; Hardware stack levels used: 1
  2502 ;; Hardware stack levels required when called: 4
  2503 ;; This function calls:
  2504 ;;		_TMR0_ISR
  2505 ;;		_TMR4_ISR
  2506 ;; This function is called by:
  2507 ;;		Interrupt level 2
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511                           	psect	intcode
  2512  000008                     __pintcode:
  2513                           	callstack 0
  2514  000008                     _INTERRUPT_InterruptManager:
  2515                           	callstack 22
  2516                           
  2517                           ;incstack = 0
  2518  000008  8246               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2519  00000A  CFFA F020          	movff	pclath,??_INTERRUPT_InterruptManager
  2520  00000E  CFFB F021          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2521  000012                     
  2522                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
  2523  000012  010E               	movlb	14	; () banked
  2524  000014  ABBD               	btfss	189,5,b	;volatile
  2525  000016  EF0F  F000         	goto	i2u30_41
  2526  00001A  EF11  F000         	goto	i2u30_40
  2527  00001E                     i2u30_41:
  2528  00001E  EF1C  F000         	goto	i2l129
  2529  000022                     i2u30_40:
  2530  000022                     
  2531                           ; BSR set to: 14
  2532  000022  ABC5               	btfss	197,5,b	;volatile
  2533  000024  EF16  F000         	goto	i2u31_41
  2534  000028  EF18  F000         	goto	i2u31_40
  2535  00002C                     i2u31_41:
  2536  00002C  EF1C  F000         	goto	i2l129
  2537  000030                     i2u31_40:
  2538  000030                     
  2539                           ; BSR set to: 14
  2540                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  2541  000030  ECBC  F003         	call	_TMR0_ISR	;wreg free
  2542                           
  2543                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  2544  000034  EF35  F000         	goto	i2l135
  2545  000038                     i2l129:
  2546                           
  2547                           ; BSR set to: 14
  2548  000038  ACF2               	btfss	242,6,c	;volatile
  2549  00003A  EF21  F000         	goto	i2u32_41
  2550  00003E  EF23  F000         	goto	i2u32_40
  2551  000042                     i2u32_41:
  2552  000042  EF35  F000         	goto	i2l135
  2553  000046                     i2u32_40:
  2554  000046                     
  2555                           ; BSR set to: 14
  2556                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE4bits.TMR4IE == 1 && PIR4bits.TMR4IF == 1)
  2557  000046  A7C1               	btfss	193,3,b	;volatile
  2558  000048  EF28  F000         	goto	i2u33_41
  2559  00004C  EF2A  F000         	goto	i2u33_40
  2560  000050                     i2u33_41:
  2561  000050  EF35  F000         	goto	i2l134
  2562  000054                     i2u33_40:
  2563  000054                     
  2564                           ; BSR set to: 14
  2565  000054  A7C9               	btfss	201,3,b	;volatile
  2566  000056  EF2F  F000         	goto	i2u34_41
  2567  00005A  EF31  F000         	goto	i2u34_40
  2568  00005E                     i2u34_41:
  2569  00005E  EF35  F000         	goto	i2l134
  2570  000062                     i2u34_40:
  2571  000062                     
  2572                           ; BSR set to: 14
  2573                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             TMR4_ISR();
  2574  000062  ECC7  F002         	call	_TMR4_ISR	;wreg free
  2575                           
  2576                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  2577  000066  EF35  F000         	goto	i2l135
  2578  00006A                     i2l134:
  2579  00006A                     i2l135:
  2580  00006A  C021  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2581  00006E  C020  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2582  000072  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2583  000074  0011               	retfie		f
  2584  000076                     __end_of_INTERRUPT_InterruptManager:
  2585                           	callstack 0
  2586                           
  2587 ;; *************** function _TMR4_ISR *****************
  2588 ;; Defined at:
  2589 ;;		line 165 in file "mcc_generated_files/tmr4.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;		None
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;		None
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  1    wreg      void 
  2596 ;; Registers used:
  2597 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2607 ;;Total ram usage:        0 bytes
  2608 ;; Hardware stack levels used: 1
  2609 ;; Hardware stack levels required when called: 1
  2610 ;; This function calls:
  2611 ;;		Absolute function
  2612 ;;		_TMR4_DefaultInterruptHandler
  2613 ;; This function is called by:
  2614 ;;		_INTERRUPT_InterruptManager
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           	psect	text29
  2619  00058E                     __ptext29:
  2620                           	callstack 0
  2621  00058E                     _TMR4_ISR:
  2622                           	callstack 24
  2623  00058E                     
  2624                           ;mcc_generated_files/tmr4.c: 169:     PIR4bits.TMR4IF = 0;
  2625  00058E  010E               	movlb	14	; () banked
  2626  000590  97C9               	bcf	201,3,b	;volatile
  2627  000592                     
  2628                           ; BSR set to: 14
  2629                           ;mcc_generated_files/tmr4.c: 171:     if(TMR4_InterruptHandler)
  2630  000592  503C               	movf	_TMR4_InterruptHandler^0,w,c
  2631  000594  103D               	iorwf	(_TMR4_InterruptHandler+1)^0,w,c
  2632  000596  B4D8               	btfsc	status,2,c
  2633  000598  EFD0  F002         	goto	i2u21_41
  2634  00059C  EFD2  F002         	goto	i2u21_40
  2635  0005A0                     i2u21_41:
  2636  0005A0  EFDF  F002         	goto	i2l314
  2637  0005A4                     i2u21_40:
  2638  0005A4                     
  2639                           ; BSR set to: 14
  2640                           ;mcc_generated_files/tmr4.c: 172:     {;mcc_generated_files/tmr4.c: 173:         TMR4_In
      +                          terruptHandler();
  2641  0005A4  D802               	call	i2u22_48
  2642  0005A6  EFDF  F002         	goto	i2u22_49
  2643  0005AA                     i2u22_48:
  2644  0005AA  0005               	push	
  2645  0005AC  6EFA               	movwf	pclath,c
  2646  0005AE  503C               	movf	_TMR4_InterruptHandler^0,w,c
  2647  0005B0  6EFD               	movwf	tosl,c
  2648  0005B2  503D               	movf	(_TMR4_InterruptHandler+1)^0,w,c
  2649  0005B4  6EFE               	movwf	tosh,c
  2650  0005B6  50F8               	movf	tblptru,w,c
  2651  0005B8  6EFF               	movwf	tosu,c
  2652  0005BA  50FA               	movf	pclath,w,c
  2653  0005BC  0012               	return		;indir
  2654  0005BE                     i2u22_49:
  2655  0005BE                     i2l314:
  2656  0005BE  0012               	return		;funcret
  2657  0005C0                     __end_of_TMR4_ISR:
  2658                           	callstack 0
  2659                           
  2660 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  2661 ;; Defined at:
  2662 ;;		line 182 in file "mcc_generated_files/tmr4.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;		None
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;		None
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  1    wreg      void 
  2669 ;; Registers used:
  2670 ;;		None
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2680 ;;Total ram usage:        0 bytes
  2681 ;; Hardware stack levels used: 1
  2682 ;; This function calls:
  2683 ;;		Nothing
  2684 ;; This function is called by:
  2685 ;;		_TMR4_Initialize
  2686 ;;		_TMR4_ISR
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           
  2690                           	psect	text30
  2691  0007CA                     __ptext30:
  2692                           	callstack 0
  2693  0007CA                     _TMR4_DefaultInterruptHandler:
  2694                           	callstack 24
  2695  0007CA  0012               	return		;funcret
  2696  0007CC                     __end_of_TMR4_DefaultInterruptHandler:
  2697                           	callstack 0
  2698                           
  2699 ;; *************** function _TMR0_ISR *****************
  2700 ;; Defined at:
  2701 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;		None
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;		None
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  1    wreg      void 
  2708 ;; Registers used:
  2709 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2719 ;;Total ram usage:        0 bytes
  2720 ;; Hardware stack levels used: 1
  2721 ;; Hardware stack levels required when called: 3
  2722 ;; This function calls:
  2723 ;;		_TMR0_CallBack
  2724 ;; This function is called by:
  2725 ;;		_INTERRUPT_InterruptManager
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           	psect	text31
  2730  000778                     __ptext31:
  2731                           	callstack 0
  2732  000778                     _TMR0_ISR:
  2733                           	callstack 22
  2734  000778                     
  2735                           ;mcc_generated_files/tmr0.c: 137:     PIR0bits.TMR0IF = 0;
  2736  000778  010E               	movlb	14	; () banked
  2737  00077A  9BC5               	bcf	197,5,b	;volatile
  2738  00077C                     
  2739                           ; BSR set to: 14
  2740                           ;mcc_generated_files/tmr0.c: 139:     TMR0H = timer0ReloadVal16bit >> 8;
  2741  00077C  5041               	movf	(_timer0ReloadVal16bit+1)^0,w,c	;volatile
  2742  00077E  6ED3               	movwf	211,c	;volatile
  2743  000780                     
  2744                           ; BSR set to: 14
  2745                           ;mcc_generated_files/tmr0.c: 140:     TMR0L = (uint8_t) timer0ReloadVal16bit;
  2746  000780  C040  FFD2         	movff	_timer0ReloadVal16bit,4050	;volatile
  2747  000784                     
  2748                           ; BSR set to: 14
  2749                           ;mcc_generated_files/tmr0.c: 144:     TMR0_CallBack();
  2750  000784  ECF7  F002         	call	_TMR0_CallBack	;wreg free
  2751  000788  0012               	return		;funcret
  2752  00078A                     __end_of_TMR0_ISR:
  2753                           	callstack 0
  2754                           
  2755 ;; *************** function _TMR0_CallBack *****************
  2756 ;; Defined at:
  2757 ;;		line 149 in file "mcc_generated_files/tmr0.c"
  2758 ;; Parameters:    Size  Location     Type
  2759 ;;		None
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;		None
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  1    wreg      void 
  2764 ;; Registers used:
  2765 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2775 ;;Total ram usage:        0 bytes
  2776 ;; Hardware stack levels used: 1
  2777 ;; Hardware stack levels required when called: 2
  2778 ;; This function calls:
  2779 ;;		Absolute function
  2780 ;;		_TMR0_DefaultInterruptHandler
  2781 ;;		_msTick
  2782 ;; This function is called by:
  2783 ;;		_TMR0_ISR
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           	psect	text32
  2788  0005EE                     __ptext32:
  2789                           	callstack 0
  2790  0005EE                     _TMR0_CallBack:
  2791                           	callstack 22
  2792  0005EE                     
  2793                           ;mcc_generated_files/tmr0.c: 153:     if(TMR0_InterruptHandler)
  2794  0005EE  503E               	movf	_TMR0_InterruptHandler^0,w,c
  2795  0005F0  103F               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  2796  0005F2  B4D8               	btfsc	status,2,c
  2797  0005F4  EFFE  F002         	goto	i2u7_41
  2798  0005F8  EF00  F003         	goto	i2u7_40
  2799  0005FC                     i2u7_41:
  2800  0005FC  EF0D  F003         	goto	i2l184
  2801  000600                     i2u7_40:
  2802  000600                     
  2803                           ;mcc_generated_files/tmr0.c: 154:     {;mcc_generated_files/tmr0.c: 155:         TMR0_In
      +                          terruptHandler();
  2804  000600  D802               	call	i2u8_48
  2805  000602  EF0D  F003         	goto	i2u8_49
  2806  000606                     i2u8_48:
  2807  000606  0005               	push	
  2808  000608  6EFA               	movwf	pclath,c
  2809  00060A  503E               	movf	_TMR0_InterruptHandler^0,w,c
  2810  00060C  6EFD               	movwf	tosl,c
  2811  00060E  503F               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  2812  000610  6EFE               	movwf	tosh,c
  2813  000612  50F8               	movf	tblptru,w,c
  2814  000614  6EFF               	movwf	tosu,c
  2815  000616  50FA               	movf	pclath,w,c
  2816  000618  0012               	return		;indir
  2817  00061A                     i2u8_49:
  2818  00061A                     i2l184:
  2819  00061A  0012               	return		;funcret
  2820  00061C                     __end_of_TMR0_CallBack:
  2821                           	callstack 0
  2822                           
  2823 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  2824 ;; Defined at:
  2825 ;;		line 163 in file "mcc_generated_files/tmr0.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;		None
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;		None
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  1    wreg      void 
  2832 ;; Registers used:
  2833 ;;		None
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2843 ;;Total ram usage:        0 bytes
  2844 ;; Hardware stack levels used: 1
  2845 ;; This function calls:
  2846 ;;		Nothing
  2847 ;; This function is called by:
  2848 ;;		_TMR0_Initialize
  2849 ;;		_TMR0_CallBack
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           
  2853                           	psect	text33
  2854  0007CC                     __ptext33:
  2855                           	callstack 0
  2856  0007CC                     _TMR0_DefaultInterruptHandler:
  2857                           	callstack 23
  2858  0007CC  0012               	return		;funcret
  2859  0007CE                     __end_of_TMR0_DefaultInterruptHandler:
  2860                           	callstack 0
  2861                           
  2862 ;; *************** function _msTick *****************
  2863 ;; Defined at:
  2864 ;;		line 115 in file "app.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;		None
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;		None
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  1    wreg      void 
  2871 ;; Registers used:
  2872 ;;		wreg, status,2, status,0, cstack
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2882 ;;Total ram usage:        0 bytes
  2883 ;; Hardware stack levels used: 1
  2884 ;; Hardware stack levels required when called: 1
  2885 ;; This function calls:
  2886 ;;		_rgbButtonTick
  2887 ;; This function is called by:
  2888 ;;		_appInit
  2889 ;;		_TMR0_CallBack
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           	psect	text34
  2894  00070A                     __ptext34:
  2895                           	callstack 0
  2896  00070A                     _msTick:
  2897                           	callstack 22
  2898  00070A                     
  2899                           ;app.c: 116:     rgbButtonTick();
  2900  00070A  EC49  F003         	call	_rgbButtonTick	;wreg free
  2901  00070E                     
  2902                           ;app.c: 117:     msTicks++;
  2903  00070E  0E01               	movlw	1
  2904  000710  2613               	addwf	_msTicks^0,f,c
  2905  000712  0E00               	movlw	0
  2906  000714  2214               	addwfc	(_msTicks+1)^0,f,c
  2907  000716  2215               	addwfc	(_msTicks+2)^0,f,c
  2908  000718  2216               	addwfc	(_msTicks+3)^0,f,c
  2909  00071A  2217               	addwfc	(_msTicks+4)^0,f,c
  2910  00071C  2218               	addwfc	(_msTicks+5)^0,f,c
  2911  00071E  2219               	addwfc	(_msTicks+6)^0,f,c
  2912  000720  221A               	addwfc	(_msTicks+7)^0,f,c
  2913  000722  0012               	return		;funcret
  2914  000724                     __end_of_msTick:
  2915                           	callstack 0
  2916                           
  2917 ;; *************** function _rgbButtonTick *****************
  2918 ;; Defined at:
  2919 ;;		line 56 in file "rgbButton.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;		None
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;		None
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  1    wreg      void 
  2926 ;; Registers used:
  2927 ;;		wreg, status,2, status,0
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2937 ;;Total ram usage:        0 bytes
  2938 ;; Hardware stack levels used: 1
  2939 ;; This function calls:
  2940 ;;		Nothing
  2941 ;; This function is called by:
  2942 ;;		_msTick
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           	psect	text35
  2947  000692                     __ptext35:
  2948                           	callstack 0
  2949  000692                     _rgbButtonTick:
  2950                           	callstack 22
  2951  000692                     
  2952                           ;rgbButton.c: 57:     cButton.ticks.colorRefreshTicks++;
  2953  000692  0E01               	movlw	1
  2954  000694  260C               	addwf	(_cButton+11)^0,f,c
  2955  000696  0E00               	movlw	0
  2956  000698  220D               	addwfc	(_cButton+12)^0,f,c
  2957  00069A  220E               	addwfc	(_cButton+13)^0,f,c
  2958  00069C  220F               	addwfc	(_cButton+14)^0,f,c
  2959                           
  2960                           ;rgbButton.c: 58:     cButton.ticks.buttonPressedTicks++;
  2961  00069E  0E01               	movlw	1
  2962  0006A0  2604               	addwf	(_cButton+3)^0,f,c
  2963  0006A2  0E00               	movlw	0
  2964  0006A4  2205               	addwfc	(_cButton+4)^0,f,c
  2965  0006A6  2206               	addwfc	(_cButton+5)^0,f,c
  2966  0006A8  2207               	addwfc	(_cButton+6)^0,f,c
  2967                           
  2968                           ;rgbButton.c: 59:     cButton.ticks.debounceTicks++;
  2969  0006AA  0E01               	movlw	1
  2970  0006AC  2608               	addwf	(_cButton+7)^0,f,c
  2971  0006AE  0E00               	movlw	0
  2972  0006B0  2209               	addwfc	(_cButton+8)^0,f,c
  2973  0006B2  220A               	addwfc	(_cButton+9)^0,f,c
  2974  0006B4  220B               	addwfc	(_cButton+10)^0,f,c
  2975  0006B6  0012               	return		;funcret
  2976  0006B8                     __end_of_rgbButtonTick:
  2977                           	callstack 0
  2978  0000                     
  2979                           	psect	text36
  2980  000000                     __ptext36:
  2981                           	callstack 0
  2982  000000                     
  2983                           	psect	rparam
  2984  0000                     
  2985                           	psect	temp
  2986  000046                     btemp:
  2987                           	callstack 0
  2988  000046                     	ds	1
  2989  0000                     int$flags	set	btemp
  2990  0000                     wtemp8	set	btemp+1
  2991  0000                     ttemp5	set	btemp+1
  2992  0000                     ttemp6	set	btemp+4
  2993  0000                     ttemp7	set	btemp+8
  2994                           
  2995                           	psect	idloc
  2996                           
  2997                           ;Config register IDLOC0 @ 0x200000
  2998                           ;	unspecified, using default values
  2999  200000                     	org	2097152
  3000  200000  FFFF               	dw	65535
  3001                           
  3002                           ;Config register IDLOC1 @ 0x200002
  3003                           ;	unspecified, using default values
  3004  200002                     	org	2097154
  3005  200002  FFFF               	dw	65535
  3006                           
  3007                           ;Config register IDLOC2 @ 0x200004
  3008                           ;	unspecified, using default values
  3009  200004                     	org	2097156
  3010  200004  FFFF               	dw	65535
  3011                           
  3012                           ;Config register IDLOC3 @ 0x200006
  3013                           ;	unspecified, using default values
  3014  200006                     	org	2097158
  3015  200006  FFFF               	dw	65535
  3016                           
  3017                           ;Config register IDLOC4 @ 0x200008
  3018                           ;	unspecified, using default values
  3019  200008                     	org	2097160
  3020  200008  FFFF               	dw	65535
  3021                           
  3022                           ;Config register IDLOC5 @ 0x20000A
  3023                           ;	unspecified, using default values
  3024  20000A                     	org	2097162
  3025  20000A  FFFF               	dw	65535
  3026                           
  3027                           ;Config register IDLOC6 @ 0x20000C
  3028                           ;	unspecified, using default values
  3029  20000C                     	org	2097164
  3030  20000C  FFFF               	dw	65535
  3031                           
  3032                           ;Config register IDLOC7 @ 0x20000E
  3033                           ;	unspecified, using default values
  3034  20000E                     	org	2097166
  3035  20000E  FFFF               	dw	65535
  3036                           
  3037                           ;Config register IDLOC8 @ 0x200010
  3038                           ;	unspecified, using default values
  3039  200010                     	org	2097168
  3040  200010  FFFF               	dw	65535
  3041                           
  3042                           ;Config register IDLOC9 @ 0x200012
  3043                           ;	unspecified, using default values
  3044  200012                     	org	2097170
  3045  200012  FFFF               	dw	65535
  3046                           
  3047                           ;Config register IDLOC10 @ 0x200014
  3048                           ;	unspecified, using default values
  3049  200014                     	org	2097172
  3050  200014  FFFF               	dw	65535
  3051                           
  3052                           ;Config register IDLOC11 @ 0x200016
  3053                           ;	unspecified, using default values
  3054  200016                     	org	2097174
  3055  200016  FFFF               	dw	65535
  3056                           
  3057                           ;Config register IDLOC12 @ 0x200018
  3058                           ;	unspecified, using default values
  3059  200018                     	org	2097176
  3060  200018  FFFF               	dw	65535
  3061                           
  3062                           ;Config register IDLOC13 @ 0x20001A
  3063                           ;	unspecified, using default values
  3064  20001A                     	org	2097178
  3065  20001A  FFFF               	dw	65535
  3066                           
  3067                           ;Config register IDLOC14 @ 0x20001C
  3068                           ;	unspecified, using default values
  3069  20001C                     	org	2097180
  3070  20001C  FFFF               	dw	65535
  3071                           
  3072                           ;Config register IDLOC15 @ 0x20001E
  3073                           ;	unspecified, using default values
  3074  20001E                     	org	2097182
  3075  20001E  FFFF               	dw	65535
  3076                           
  3077                           ;Config register IDLOC16 @ 0x200020
  3078                           ;	unspecified, using default values
  3079  200020                     	org	2097184
  3080  200020  FFFF               	dw	65535
  3081                           
  3082                           ;Config register IDLOC17 @ 0x200022
  3083                           ;	unspecified, using default values
  3084  200022                     	org	2097186
  3085  200022  FFFF               	dw	65535
  3086                           
  3087                           ;Config register IDLOC18 @ 0x200024
  3088                           ;	unspecified, using default values
  3089  200024                     	org	2097188
  3090  200024  FFFF               	dw	65535
  3091                           
  3092                           ;Config register IDLOC19 @ 0x200026
  3093                           ;	unspecified, using default values
  3094  200026                     	org	2097190
  3095  200026  FFFF               	dw	65535
  3096                           
  3097                           ;Config register IDLOC20 @ 0x200028
  3098                           ;	unspecified, using default values
  3099  200028                     	org	2097192
  3100  200028  FFFF               	dw	65535
  3101                           
  3102                           ;Config register IDLOC21 @ 0x20002A
  3103                           ;	unspecified, using default values
  3104  20002A                     	org	2097194
  3105  20002A  FFFF               	dw	65535
  3106                           
  3107                           ;Config register IDLOC22 @ 0x20002C
  3108                           ;	unspecified, using default values
  3109  20002C                     	org	2097196
  3110  20002C  FFFF               	dw	65535
  3111                           
  3112                           ;Config register IDLOC23 @ 0x20002E
  3113                           ;	unspecified, using default values
  3114  20002E                     	org	2097198
  3115  20002E  FFFF               	dw	65535
  3116                           
  3117                           ;Config register IDLOC24 @ 0x200030
  3118                           ;	unspecified, using default values
  3119  200030                     	org	2097200
  3120  200030  FFFF               	dw	65535
  3121                           
  3122                           ;Config register IDLOC25 @ 0x200032
  3123                           ;	unspecified, using default values
  3124  200032                     	org	2097202
  3125  200032  FFFF               	dw	65535
  3126                           
  3127                           ;Config register IDLOC26 @ 0x200034
  3128                           ;	unspecified, using default values
  3129  200034                     	org	2097204
  3130  200034  FFFF               	dw	65535
  3131                           
  3132                           ;Config register IDLOC27 @ 0x200036
  3133                           ;	unspecified, using default values
  3134  200036                     	org	2097206
  3135  200036  FFFF               	dw	65535
  3136                           
  3137                           ;Config register IDLOC28 @ 0x200038
  3138                           ;	unspecified, using default values
  3139  200038                     	org	2097208
  3140  200038  FFFF               	dw	65535
  3141                           
  3142                           ;Config register IDLOC29 @ 0x20003A
  3143                           ;	unspecified, using default values
  3144  20003A                     	org	2097210
  3145  20003A  FFFF               	dw	65535
  3146                           
  3147                           ;Config register IDLOC30 @ 0x20003C
  3148                           ;	unspecified, using default values
  3149  20003C                     	org	2097212
  3150  20003C  FFFF               	dw	65535
  3151                           
  3152                           ;Config register IDLOC31 @ 0x20003E
  3153                           ;	unspecified, using default values
  3154  20003E                     	org	2097214
  3155  20003E  FFFF               	dw	65535
  3156                           
  3157                           ;Config register IDLOC32 @ 0x200040
  3158                           ;	unspecified, using default values
  3159  200040                     	org	2097216
  3160  200040  FFFF               	dw	65535
  3161                           
  3162                           ;Config register IDLOC33 @ 0x200042
  3163                           ;	unspecified, using default values
  3164  200042                     	org	2097218
  3165  200042  FFFF               	dw	65535
  3166                           
  3167                           ;Config register IDLOC34 @ 0x200044
  3168                           ;	unspecified, using default values
  3169  200044                     	org	2097220
  3170  200044  FFFF               	dw	65535
  3171                           
  3172                           ;Config register IDLOC35 @ 0x200046
  3173                           ;	unspecified, using default values
  3174  200046                     	org	2097222
  3175  200046  FFFF               	dw	65535
  3176                           
  3177                           ;Config register IDLOC36 @ 0x200048
  3178                           ;	unspecified, using default values
  3179  200048                     	org	2097224
  3180  200048  FFFF               	dw	65535
  3181                           
  3182                           ;Config register IDLOC37 @ 0x20004A
  3183                           ;	unspecified, using default values
  3184  20004A                     	org	2097226
  3185  20004A  FFFF               	dw	65535
  3186                           
  3187                           ;Config register IDLOC38 @ 0x20004C
  3188                           ;	unspecified, using default values
  3189  20004C                     	org	2097228
  3190  20004C  FFFF               	dw	65535
  3191                           
  3192                           ;Config register IDLOC39 @ 0x20004E
  3193                           ;	unspecified, using default values
  3194  20004E                     	org	2097230
  3195  20004E  FFFF               	dw	65535
  3196                           
  3197                           ;Config register IDLOC40 @ 0x200050
  3198                           ;	unspecified, using default values
  3199  200050                     	org	2097232
  3200  200050  FFFF               	dw	65535
  3201                           
  3202                           ;Config register IDLOC41 @ 0x200052
  3203                           ;	unspecified, using default values
  3204  200052                     	org	2097234
  3205  200052  FFFF               	dw	65535
  3206                           
  3207                           ;Config register IDLOC42 @ 0x200054
  3208                           ;	unspecified, using default values
  3209  200054                     	org	2097236
  3210  200054  FFFF               	dw	65535
  3211                           
  3212                           ;Config register IDLOC43 @ 0x200056
  3213                           ;	unspecified, using default values
  3214  200056                     	org	2097238
  3215  200056  FFFF               	dw	65535
  3216                           
  3217                           ;Config register IDLOC44 @ 0x200058
  3218                           ;	unspecified, using default values
  3219  200058                     	org	2097240
  3220  200058  FFFF               	dw	65535
  3221                           
  3222                           ;Config register IDLOC45 @ 0x20005A
  3223                           ;	unspecified, using default values
  3224  20005A                     	org	2097242
  3225  20005A  FFFF               	dw	65535
  3226                           
  3227                           ;Config register IDLOC46 @ 0x20005C
  3228                           ;	unspecified, using default values
  3229  20005C                     	org	2097244
  3230  20005C  FFFF               	dw	65535
  3231                           
  3232                           ;Config register IDLOC47 @ 0x20005E
  3233                           ;	unspecified, using default values
  3234  20005E                     	org	2097246
  3235  20005E  FFFF               	dw	65535
  3236                           
  3237                           ;Config register IDLOC48 @ 0x200060
  3238                           ;	unspecified, using default values
  3239  200060                     	org	2097248
  3240  200060  FFFF               	dw	65535
  3241                           
  3242                           ;Config register IDLOC49 @ 0x200062
  3243                           ;	unspecified, using default values
  3244  200062                     	org	2097250
  3245  200062  FFFF               	dw	65535
  3246                           
  3247                           ;Config register IDLOC50 @ 0x200064
  3248                           ;	unspecified, using default values
  3249  200064                     	org	2097252
  3250  200064  FFFF               	dw	65535
  3251                           
  3252                           ;Config register IDLOC51 @ 0x200066
  3253                           ;	unspecified, using default values
  3254  200066                     	org	2097254
  3255  200066  FFFF               	dw	65535
  3256                           
  3257                           ;Config register IDLOC52 @ 0x200068
  3258                           ;	unspecified, using default values
  3259  200068                     	org	2097256
  3260  200068  FFFF               	dw	65535
  3261                           
  3262                           ;Config register IDLOC53 @ 0x20006A
  3263                           ;	unspecified, using default values
  3264  20006A                     	org	2097258
  3265  20006A  FFFF               	dw	65535
  3266                           
  3267                           ;Config register IDLOC54 @ 0x20006C
  3268                           ;	unspecified, using default values
  3269  20006C                     	org	2097260
  3270  20006C  FFFF               	dw	65535
  3271                           
  3272                           ;Config register IDLOC55 @ 0x20006E
  3273                           ;	unspecified, using default values
  3274  20006E                     	org	2097262
  3275  20006E  FFFF               	dw	65535
  3276                           
  3277                           ;Config register IDLOC56 @ 0x200070
  3278                           ;	unspecified, using default values
  3279  200070                     	org	2097264
  3280  200070  FFFF               	dw	65535
  3281                           
  3282                           ;Config register IDLOC57 @ 0x200072
  3283                           ;	unspecified, using default values
  3284  200072                     	org	2097266
  3285  200072  FFFF               	dw	65535
  3286                           
  3287                           ;Config register IDLOC58 @ 0x200074
  3288                           ;	unspecified, using default values
  3289  200074                     	org	2097268
  3290  200074  FFFF               	dw	65535
  3291                           
  3292                           ;Config register IDLOC59 @ 0x200076
  3293                           ;	unspecified, using default values
  3294  200076                     	org	2097270
  3295  200076  FFFF               	dw	65535
  3296                           
  3297                           ;Config register IDLOC60 @ 0x200078
  3298                           ;	unspecified, using default values
  3299  200078                     	org	2097272
  3300  200078  FFFF               	dw	65535
  3301                           
  3302                           ;Config register IDLOC61 @ 0x20007A
  3303                           ;	unspecified, using default values
  3304  20007A                     	org	2097274
  3305  20007A  FFFF               	dw	65535
  3306                           
  3307                           ;Config register IDLOC62 @ 0x20007C
  3308                           ;	unspecified, using default values
  3309  20007C                     	org	2097276
  3310  20007C  FFFF               	dw	65535
  3311                           
  3312                           ;Config register IDLOC63 @ 0x20007E
  3313                           ;	unspecified, using default values
  3314  20007E                     	org	2097278
  3315  20007E  FFFF               	dw	65535
  3316                           
  3317                           ;Config register IDLOC64 @ 0x200080
  3318                           ;	unspecified, using default values
  3319  200080                     	org	2097280
  3320  200080  FFFF               	dw	65535
  3321                           
  3322                           ;Config register IDLOC65 @ 0x200082
  3323                           ;	unspecified, using default values
  3324  200082                     	org	2097282
  3325  200082  FFFF               	dw	65535
  3326                           
  3327                           ;Config register IDLOC66 @ 0x200084
  3328                           ;	unspecified, using default values
  3329  200084                     	org	2097284
  3330  200084  FFFF               	dw	65535
  3331                           
  3332                           ;Config register IDLOC67 @ 0x200086
  3333                           ;	unspecified, using default values
  3334  200086                     	org	2097286
  3335  200086  FFFF               	dw	65535
  3336                           
  3337                           ;Config register IDLOC68 @ 0x200088
  3338                           ;	unspecified, using default values
  3339  200088                     	org	2097288
  3340  200088  FFFF               	dw	65535
  3341                           
  3342                           ;Config register IDLOC69 @ 0x20008A
  3343                           ;	unspecified, using default values
  3344  20008A                     	org	2097290
  3345  20008A  FFFF               	dw	65535
  3346                           
  3347                           ;Config register IDLOC70 @ 0x20008C
  3348                           ;	unspecified, using default values
  3349  20008C                     	org	2097292
  3350  20008C  FFFF               	dw	65535
  3351                           
  3352                           ;Config register IDLOC71 @ 0x20008E
  3353                           ;	unspecified, using default values
  3354  20008E                     	org	2097294
  3355  20008E  FFFF               	dw	65535
  3356                           
  3357                           ;Config register IDLOC72 @ 0x200090
  3358                           ;	unspecified, using default values
  3359  200090                     	org	2097296
  3360  200090  FFFF               	dw	65535
  3361                           
  3362                           ;Config register IDLOC73 @ 0x200092
  3363                           ;	unspecified, using default values
  3364  200092                     	org	2097298
  3365  200092  FFFF               	dw	65535
  3366                           
  3367                           ;Config register IDLOC74 @ 0x200094
  3368                           ;	unspecified, using default values
  3369  200094                     	org	2097300
  3370  200094  FFFF               	dw	65535
  3371                           
  3372                           ;Config register IDLOC75 @ 0x200096
  3373                           ;	unspecified, using default values
  3374  200096                     	org	2097302
  3375  200096  FFFF               	dw	65535
  3376                           
  3377                           ;Config register IDLOC76 @ 0x200098
  3378                           ;	unspecified, using default values
  3379  200098                     	org	2097304
  3380  200098  FFFF               	dw	65535
  3381                           
  3382                           ;Config register IDLOC77 @ 0x20009A
  3383                           ;	unspecified, using default values
  3384  20009A                     	org	2097306
  3385  20009A  FFFF               	dw	65535
  3386                           
  3387                           ;Config register IDLOC78 @ 0x20009C
  3388                           ;	unspecified, using default values
  3389  20009C                     	org	2097308
  3390  20009C  FFFF               	dw	65535
  3391                           
  3392                           ;Config register IDLOC79 @ 0x20009E
  3393                           ;	unspecified, using default values
  3394  20009E                     	org	2097310
  3395  20009E  FFFF               	dw	65535
  3396                           
  3397                           ;Config register IDLOC80 @ 0x2000A0
  3398                           ;	unspecified, using default values
  3399  2000A0                     	org	2097312
  3400  2000A0  FFFF               	dw	65535
  3401                           
  3402                           ;Config register IDLOC81 @ 0x2000A2
  3403                           ;	unspecified, using default values
  3404  2000A2                     	org	2097314
  3405  2000A2  FFFF               	dw	65535
  3406                           
  3407                           ;Config register IDLOC82 @ 0x2000A4
  3408                           ;	unspecified, using default values
  3409  2000A4                     	org	2097316
  3410  2000A4  FFFF               	dw	65535
  3411                           
  3412                           ;Config register IDLOC83 @ 0x2000A6
  3413                           ;	unspecified, using default values
  3414  2000A6                     	org	2097318
  3415  2000A6  FFFF               	dw	65535
  3416                           
  3417                           ;Config register IDLOC84 @ 0x2000A8
  3418                           ;	unspecified, using default values
  3419  2000A8                     	org	2097320
  3420  2000A8  FFFF               	dw	65535
  3421                           
  3422                           ;Config register IDLOC85 @ 0x2000AA
  3423                           ;	unspecified, using default values
  3424  2000AA                     	org	2097322
  3425  2000AA  FFFF               	dw	65535
  3426                           
  3427                           ;Config register IDLOC86 @ 0x2000AC
  3428                           ;	unspecified, using default values
  3429  2000AC                     	org	2097324
  3430  2000AC  FFFF               	dw	65535
  3431                           
  3432                           ;Config register IDLOC87 @ 0x2000AE
  3433                           ;	unspecified, using default values
  3434  2000AE                     	org	2097326
  3435  2000AE  FFFF               	dw	65535
  3436                           
  3437                           ;Config register IDLOC88 @ 0x2000B0
  3438                           ;	unspecified, using default values
  3439  2000B0                     	org	2097328
  3440  2000B0  FFFF               	dw	65535
  3441                           
  3442                           ;Config register IDLOC89 @ 0x2000B2
  3443                           ;	unspecified, using default values
  3444  2000B2                     	org	2097330
  3445  2000B2  FFFF               	dw	65535
  3446                           
  3447                           ;Config register IDLOC90 @ 0x2000B4
  3448                           ;	unspecified, using default values
  3449  2000B4                     	org	2097332
  3450  2000B4  FFFF               	dw	65535
  3451                           
  3452                           ;Config register IDLOC91 @ 0x2000B6
  3453                           ;	unspecified, using default values
  3454  2000B6                     	org	2097334
  3455  2000B6  FFFF               	dw	65535
  3456                           
  3457                           ;Config register IDLOC92 @ 0x2000B8
  3458                           ;	unspecified, using default values
  3459  2000B8                     	org	2097336
  3460  2000B8  FFFF               	dw	65535
  3461                           
  3462                           ;Config register IDLOC93 @ 0x2000BA
  3463                           ;	unspecified, using default values
  3464  2000BA                     	org	2097338
  3465  2000BA  FFFF               	dw	65535
  3466                           
  3467                           ;Config register IDLOC94 @ 0x2000BC
  3468                           ;	unspecified, using default values
  3469  2000BC                     	org	2097340
  3470  2000BC  FFFF               	dw	65535
  3471                           
  3472                           ;Config register IDLOC95 @ 0x2000BE
  3473                           ;	unspecified, using default values
  3474  2000BE                     	org	2097342
  3475  2000BE  FFFF               	dw	65535
  3476                           
  3477                           ;Config register IDLOC96 @ 0x2000C0
  3478                           ;	unspecified, using default values
  3479  2000C0                     	org	2097344
  3480  2000C0  FFFF               	dw	65535
  3481                           
  3482                           ;Config register IDLOC97 @ 0x2000C2
  3483                           ;	unspecified, using default values
  3484  2000C2                     	org	2097346
  3485  2000C2  FFFF               	dw	65535
  3486                           
  3487                           ;Config register IDLOC98 @ 0x2000C4
  3488                           ;	unspecified, using default values
  3489  2000C4                     	org	2097348
  3490  2000C4  FFFF               	dw	65535
  3491                           
  3492                           ;Config register IDLOC99 @ 0x2000C6
  3493                           ;	unspecified, using default values
  3494  2000C6                     	org	2097350
  3495  2000C6  FFFF               	dw	65535
  3496                           
  3497                           ;Config register IDLOC100 @ 0x2000C8
  3498                           ;	unspecified, using default values
  3499  2000C8                     	org	2097352
  3500  2000C8  FFFF               	dw	65535
  3501                           
  3502                           ;Config register IDLOC101 @ 0x2000CA
  3503                           ;	unspecified, using default values
  3504  2000CA                     	org	2097354
  3505  2000CA  FFFF               	dw	65535
  3506                           
  3507                           ;Config register IDLOC102 @ 0x2000CC
  3508                           ;	unspecified, using default values
  3509  2000CC                     	org	2097356
  3510  2000CC  FFFF               	dw	65535
  3511                           
  3512                           ;Config register IDLOC103 @ 0x2000CE
  3513                           ;	unspecified, using default values
  3514  2000CE                     	org	2097358
  3515  2000CE  FFFF               	dw	65535
  3516                           
  3517                           ;Config register IDLOC104 @ 0x2000D0
  3518                           ;	unspecified, using default values
  3519  2000D0                     	org	2097360
  3520  2000D0  FFFF               	dw	65535
  3521                           
  3522                           ;Config register IDLOC105 @ 0x2000D2
  3523                           ;	unspecified, using default values
  3524  2000D2                     	org	2097362
  3525  2000D2  FFFF               	dw	65535
  3526                           
  3527                           ;Config register IDLOC106 @ 0x2000D4
  3528                           ;	unspecified, using default values
  3529  2000D4                     	org	2097364
  3530  2000D4  FFFF               	dw	65535
  3531                           
  3532                           ;Config register IDLOC107 @ 0x2000D6
  3533                           ;	unspecified, using default values
  3534  2000D6                     	org	2097366
  3535  2000D6  FFFF               	dw	65535
  3536                           
  3537                           ;Config register IDLOC108 @ 0x2000D8
  3538                           ;	unspecified, using default values
  3539  2000D8                     	org	2097368
  3540  2000D8  FFFF               	dw	65535
  3541                           
  3542                           ;Config register IDLOC109 @ 0x2000DA
  3543                           ;	unspecified, using default values
  3544  2000DA                     	org	2097370
  3545  2000DA  FFFF               	dw	65535
  3546                           
  3547                           ;Config register IDLOC110 @ 0x2000DC
  3548                           ;	unspecified, using default values
  3549  2000DC                     	org	2097372
  3550  2000DC  FFFF               	dw	65535
  3551                           
  3552                           ;Config register IDLOC111 @ 0x2000DE
  3553                           ;	unspecified, using default values
  3554  2000DE                     	org	2097374
  3555  2000DE  FFFF               	dw	65535
  3556                           
  3557                           ;Config register IDLOC112 @ 0x2000E0
  3558                           ;	unspecified, using default values
  3559  2000E0                     	org	2097376
  3560  2000E0  FFFF               	dw	65535
  3561                           
  3562                           ;Config register IDLOC113 @ 0x2000E2
  3563                           ;	unspecified, using default values
  3564  2000E2                     	org	2097378
  3565  2000E2  FFFF               	dw	65535
  3566                           
  3567                           ;Config register IDLOC114 @ 0x2000E4
  3568                           ;	unspecified, using default values
  3569  2000E4                     	org	2097380
  3570  2000E4  FFFF               	dw	65535
  3571                           
  3572                           ;Config register IDLOC115 @ 0x2000E6
  3573                           ;	unspecified, using default values
  3574  2000E6                     	org	2097382
  3575  2000E6  FFFF               	dw	65535
  3576                           
  3577                           ;Config register IDLOC116 @ 0x2000E8
  3578                           ;	unspecified, using default values
  3579  2000E8                     	org	2097384
  3580  2000E8  FFFF               	dw	65535
  3581                           
  3582                           ;Config register IDLOC117 @ 0x2000EA
  3583                           ;	unspecified, using default values
  3584  2000EA                     	org	2097386
  3585  2000EA  FFFF               	dw	65535
  3586                           
  3587                           ;Config register IDLOC118 @ 0x2000EC
  3588                           ;	unspecified, using default values
  3589  2000EC                     	org	2097388
  3590  2000EC  FFFF               	dw	65535
  3591                           
  3592                           ;Config register IDLOC119 @ 0x2000EE
  3593                           ;	unspecified, using default values
  3594  2000EE                     	org	2097390
  3595  2000EE  FFFF               	dw	65535
  3596                           
  3597                           ;Config register IDLOC120 @ 0x2000F0
  3598                           ;	unspecified, using default values
  3599  2000F0                     	org	2097392
  3600  2000F0  FFFF               	dw	65535
  3601                           
  3602                           ;Config register IDLOC121 @ 0x2000F2
  3603                           ;	unspecified, using default values
  3604  2000F2                     	org	2097394
  3605  2000F2  FFFF               	dw	65535
  3606                           
  3607                           ;Config register IDLOC122 @ 0x2000F4
  3608                           ;	unspecified, using default values
  3609  2000F4                     	org	2097396
  3610  2000F4  FFFF               	dw	65535
  3611                           
  3612                           ;Config register IDLOC123 @ 0x2000F6
  3613                           ;	unspecified, using default values
  3614  2000F6                     	org	2097398
  3615  2000F6  FFFF               	dw	65535
  3616                           
  3617                           ;Config register IDLOC124 @ 0x2000F8
  3618                           ;	unspecified, using default values
  3619  2000F8                     	org	2097400
  3620  2000F8  FFFF               	dw	65535
  3621                           
  3622                           ;Config register IDLOC125 @ 0x2000FA
  3623                           ;	unspecified, using default values
  3624  2000FA                     	org	2097402
  3625  2000FA  FFFF               	dw	65535
  3626                           
  3627                           ;Config register IDLOC126 @ 0x2000FC
  3628                           ;	unspecified, using default values
  3629  2000FC                     	org	2097404
  3630  2000FC  FFFF               	dw	65535
  3631                           
  3632                           ;Config register IDLOC127 @ 0x2000FE
  3633                           ;	unspecified, using default values
  3634  2000FE                     	org	2097406
  3635  2000FE  FFFF               	dw	65535
  3636                           
  3637                           	psect	config
  3638                           
  3639                           ;Config register CONFIG1L @ 0x300000
  3640                           ;	External Oscillator mode Selection bits
  3641                           ;	FEXTOSC = OFF, Oscillator not enabled
  3642                           ;	Power-up default value for COSC bits
  3643                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  3644  300000                     	org	3145728
  3645  300000  8C                 	db	140
  3646                           
  3647                           ;Config register CONFIG1H @ 0x300001
  3648                           ;	Clock Out Enable bit
  3649                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3650                           ;	Clock Switch Enable bit
  3651                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3652                           ;	Fail-Safe Clock Monitor Enable bit
  3653                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3654  300001                     	org	3145729
  3655  300001  FF                 	db	255
  3656                           
  3657                           ;Config register CONFIG2L @ 0x300002
  3658                           ;	Master Clear Enable bit
  3659                           ;	MCLRE = EXTMCLR, MCLR pin (RE3) is MCLR
  3660                           ;	Power-up Timer Enable bit
  3661                           ;	PWRTE = OFF, Power up timer disabled
  3662                           ;	Low-power BOR enable bit
  3663                           ;	LPBOREN = OFF, Low power BOR is disabled
  3664                           ;	Brown-out Reset Enable bits
  3665                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  3666  300002                     	org	3145730
  3667  300002  FF                 	db	255
  3668                           
  3669                           ;Config register CONFIG2H @ 0x300003
  3670                           ;	Brown Out Reset Voltage selection bits
  3671                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
  3672                           ;	ZCD Disable bit
  3673                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  3674                           ;	PPSLOCK bit One-Way Set Enable bit
  3675                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  3676                           ;	Stack Full/Underflow Reset Enable bit
  3677                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3678                           ;	Extended Instruction Set Enable bit
  3679                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3680  300003                     	org	3145731
  3681  300003  FF                 	db	255
  3682                           
  3683                           ;Config register CONFIG3L @ 0x300004
  3684                           ;	WDT Period Select bits
  3685                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3686                           ;	WDT operating mode
  3687                           ;	WDTE = OFF, WDT Disabled
  3688  300004                     	org	3145732
  3689  300004  9F                 	db	159
  3690                           
  3691                           ;Config register CONFIG3H @ 0x300005
  3692                           ;	WDT Window Select bits
  3693                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3694                           ;	WDT input clock selector
  3695                           ;	WDTCCS = SC, Software Control
  3696  300005                     	org	3145733
  3697  300005  FF                 	db	255
  3698                           
  3699                           ;Config register CONFIG4L @ 0x300006
  3700                           ;	Write Protection Block 0
  3701                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3702                           ;	Write Protection Block 1
  3703                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3704                           ;	Write Protection Block 2
  3705                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3706                           ;	Write Protection Block 3
  3707                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3708  300006                     	org	3145734
  3709  300006  FF                 	db	255
  3710                           
  3711                           ;Config register CONFIG4H @ 0x300007
  3712                           ;	Configuration Register Write Protection bit
  3713                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  3714                           ;	Boot Block Write Protection bit
  3715                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3716                           ;	Data EEPROM Write Protection bit
  3717                           ;	WRTD = OFF, Data EEPROM not write-protected
  3718                           ;	Scanner Enable bit
  3719                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  3720                           ;	Low Voltage Programming Enable bit
  3721                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  3722  300007                     	org	3145735
  3723  300007  FF                 	db	255
  3724                           
  3725                           ;Config register CONFIG5L @ 0x300008
  3726                           ;	UserNVM Program Memory Code Protection bit
  3727                           ;	CP = OFF, UserNVM code protection disabled
  3728                           ;	DataNVM Memory Code Protection bit
  3729                           ;	CPD = OFF, DataNVM code protection disabled
  3730  300008                     	org	3145736
  3731  300008  FF                 	db	255
  3732                           
  3733                           ;Config register CONFIG5H @ 0x300009
  3734                           ;	unspecified, using default values
  3735  300009                     	org	3145737
  3736  300009  FF                 	db	255
  3737                           
  3738                           ;Config register CONFIG6L @ 0x30000A
  3739                           ;	Table Read Protection Block 0
  3740                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3741                           ;	Table Read Protection Block 1
  3742                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3743                           ;	Table Read Protection Block 2
  3744                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3745                           ;	Table Read Protection Block 3
  3746                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3747  30000A                     	org	3145738
  3748  30000A  FF                 	db	255
  3749                           
  3750                           ;Config register CONFIG6H @ 0x30000B
  3751                           ;	Boot Block Table Read Protection bit
  3752                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3753  30000B                     	org	3145739
  3754  30000B  FF                 	db	255
  3755                           tosu	equ	0xFFF
  3756                           tosh	equ	0xFFE
  3757                           tosl	equ	0xFFD
  3758                           stkptr	equ	0xFFC
  3759                           pclatu	equ	0xFFB
  3760                           pclath	equ	0xFFA
  3761                           pcl	equ	0xFF9
  3762                           tblptru	equ	0xFF8
  3763                           tblptrh	equ	0xFF7
  3764                           tblptrl	equ	0xFF6
  3765                           tablat	equ	0xFF5
  3766                           prodh	equ	0xFF4
  3767                           prodl	equ	0xFF3
  3768                           indf0	equ	0xFEF
  3769                           postinc0	equ	0xFEE
  3770                           postdec0	equ	0xFED
  3771                           preinc0	equ	0xFEC
  3772                           plusw0	equ	0xFEB
  3773                           fsr0h	equ	0xFEA
  3774                           fsr0l	equ	0xFE9
  3775                           wreg	equ	0xFE8
  3776                           indf1	equ	0xFE7
  3777                           postinc1	equ	0xFE6
  3778                           postdec1	equ	0xFE5
  3779                           preinc1	equ	0xFE4
  3780                           plusw1	equ	0xFE3
  3781                           fsr1h	equ	0xFE2
  3782                           fsr1l	equ	0xFE1
  3783                           bsr	equ	0xFE0
  3784                           indf2	equ	0xFDF
  3785                           postinc2	equ	0xFDE
  3786                           postdec2	equ	0xFDD
  3787                           preinc2	equ	0xFDC
  3788                           plusw2	equ	0xFDB
  3789                           fsr2h	equ	0xFDA
  3790                           fsr2l	equ	0xFD9
  3791                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         31
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      69
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           31      0       0

Pointer List with Targets:

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> msTick(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> msTick(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _appInit->___awmod
    _rand->___lmul
    ___awmod->_rand
    _appHandler->_rgbButtonHandler
    _rgbButtonHandler->_updateColor
    _updateColor->_PWM3_LoadDutyValue
    _updateColor->_PWM4_LoadDutyValue
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2644
                  _SYSTEM_Initialize
                    _TMR4_StartTimer
                         _appHandler
                            _appInit
 ---------------------------------------------------------------------------------
 (1) _appInit                                              0     0      0    1308
           _TMR0_SetInterruptHandler
                            ___awmod
                               _rand
                    _setColorFromHex
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                6     4      2      98
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _rand                                                 6     4      2     370
                                             14 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             20 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _appHandler                                           2     2      0    1064
                                             11 COMRAM     2     2      0
                   _rgbButtonHandler
                           _setColor
                    _setColorFromHex
 ---------------------------------------------------------------------------------
 (2) _setColorFromHex                                      4     0      4     218
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _setColor                                             3     1      2     370
                                              2 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _rgbButtonHandler                                     2     2      0     476
                                              9 COMRAM     2     2      0
                        _updateColor
 ---------------------------------------------------------------------------------
 (3) _updateColor                                          3     3      0     476
                                              6 COMRAM     3     3      0
                 _PWM1_LoadDutyValue
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM4_LoadDutyValue                                   4     2      2     120
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM3_LoadDutyValue                                   4     2      2     120
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM1_LoadDutyValue                                   2     0      2     166
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR4_StartTimer                                      0     0      0       0
                         _TMR4_Start
 ---------------------------------------------------------------------------------
 (2) _TMR4_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     272
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR0_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0      98
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR4_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                              4 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     174
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           2     2      0       0
                                              0 COMRAM     2     2      0
                           _TMR0_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR4_ISR                                             0     0      0       0
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                             _msTick *
 ---------------------------------------------------------------------------------
 (8) _msTick                                               0     0      0       0
                      _rgbButtonTick
 ---------------------------------------------------------------------------------
 (9) _rgbButtonTick                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM1_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
   _TMR4_StartTimer
     _TMR4_Start
   _appHandler
     _rgbButtonHandler
       _updateColor
         _PWM1_LoadDutyValue
         _PWM3_LoadDutyValue
         _PWM4_LoadDutyValue
     _setColor
     _setColorFromHex
   _appInit
     _TMR0_SetInterruptHandler
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
     _setColorFromHex
     _srand

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _msTick *
         _rgbButtonTick
   _TMR4_ISR
     Absolute function(Fake) *
     _TMR4_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E1E      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1A      45       1       73.4%
BITBANK14           1F      0       0      33        0.0%
BANK14              1F      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      45       6        0.0%
DATA                 0      0      45       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jan 23 22:29:39 2022

                                      l55 049C                                       l101 0690  
                                     l104 073A                                       l107 06EE  
                                     l203 0776                                       l124 07C8  
                                     l222 0762                                       l208 05EC  
                                     l225 058C                                       l162 0524  
                                     l236 074E                                       l420 0798  
                                     l317 07B0                                       l405 0260  
                                     l239 0558                                       l423 07A6  
                                     l440 03D6                                       l441 03E6  
                                     l361 04EA                                       l274 0644  
                                     l426 0442                                       l187 07BA  
                                     l283 07C4                                       l380 01AC  
                                     l286 07C0                                       l673 0310  
                                     u400 03D6                                       u401 03D2  
                                     u410 036E                                       u420 01C8  
                                     u500 02C6                                       u421 01C4  
                                     u501 02C2                                       u350 05D6  
                                     u430 01F0                                       u510 02DC  
                                     u351 05D2                                       u431 01EA  
                                     u511 02D8                                       u415 0364  
                                     u440 01F2                                       u520 0300  
                                     _PR4 000FB5                                       u521 02FC  
                                     u450 0226                                       u530 00A4  
                                     u451 0222                                       u531 00A0  
                                     u460 0244                                       u365 05D8  
                                     u461 0240                                       u541 00AA  
                                     u550 00D2                                       u470 0274  
                                     u390 039C                                       u375 057E  
                                     u551 00CE                                       u471 0270  
                                     u391 0398                                       u560 0100  
                                     u480 028E                                       u385 054A  
                                     u561 00FC                                       u481 028A  
                                     u490 02A8                                       u571 0106  
                                     u491 02A4                                       u580 0130  
                                     u581 012C                                       u590 0148  
                                     u591 0144                   __size_of_PMD_Initialize 001C  
                            ___awmod@sign 0039                           _PWM4_Initialize 073C  
                                     tosl 000FFD                                       wreg 000FE8  
                                    l1105 066A                                      l1210 0750  
                                    l1212 0754                                      l1108 037C  
                                    l1230 07C2                                      l1170 045C  
                                    l1162 0444                                      l1180 0486  
                                    l1172 047E                                      l1164 0450  
                                    l1182 0488                                      l1174 0480  
                                    l1166 0452                                      l1190 0764  
                                    l1510 07A8                                      l1184 07C6  
                                    l1176 0482                                      l1168 0458  
                                    l1192 076C                                      l1504 055A  
                                    l1520 0418                                      l1512 03E8  
                                    l1600 0266                                      l1178 0484  
                                    l1186 06D4                                      l1194 073C  
                                    l1338 07BC                                      l1506 0526  
                                    l1522 0424                                      l1514 03E8  
                                    l1610 0296                                      l1602 0274  
                                    l1530 039C                                      l1188 0724  
                                    l1196 0740                                      l1508 07B2  
                                    l1540 062E                                      l1524 0436  
                                    l1516 03FA                                      l1620 02DC  
                                    l1612 02A8                                      l1604 027C  
                                    l1532 03AC                                      l1550 04F8  
                                    l1542 0632                                      l1518 0406  
                                    l1630 0308                                      l1622 02E4  
                                    l1614 02B0                                      l1606 0280  
                                    l1534 03B6                                      l1526 037E  
                                    l1710 06C4                                      l1552 050E  
                                    l1544 0634                                      l1536 061C  
                                    l1640 0678                                      l1560 079A  
                                    l1624 02EA                                      l1616 02B8  
                                    l1608 028E                                      l1528 038E  
                                    l1712 06C6                                      l1704 06B8  
                                    l1554 0512                                      l1546 0640  
                                    l1538 0628                                      l1650 068C  
                                    l1642 067C                                      l1634 066C  
                                    l1490 05C0                                      l1570 01AE  
                                    l1618 02C6                                      l1626 02F0  
                                    l1562 0646                                      l1714 06C8  
                                    l1706 06BC                                      l1556 0514  
                                    l1548 04EC                                      l1644 0680  
                                    l1636 0670                                      l1492 05C8  
                                    l1580 0212                                      l1572 01C8  
                                    l1660 007A                                      l1628 0300  
                                    l1564 0312                                      l1652 049E  
                                    l1708 06C0                                      l1558 0520  
                                    l1646 0684                                      l1638 0674  
                                    l1494 05D6                                      l1590 025C  
                                    l1582 0226                                      l1574 01D8  
                                    l1670 00C2                                      l1662 0082  
                                    l1566 034E                                      l1654 04AA  
                                    l1648 0688                                      l1496 05E4  
                                    l1584 022E                                      l1576 01DC  
                                    l1592 078C                                      l1736 018E  
                                    l1680 0112                                      l1672 00D2  
                                    l1664 00A4                                      l1656 04BE  
                                    l1498 05E8                                      l1586 0232  
                                    l1578 01E0                                      l1594 0790  
                                    l1690 0154                                      l1682 0120  
                                    l1674 00DE                                      l1666 00B0  
                                    l1658 04CA                                      l1588 0244  
                                    l1596 0794                                      l1692 0160  
                                    l1684 0130                                      l1676 0100  
                                    l1668 00B4                                      l1686 0136  
                                    l1678 010C                                      l1598 0262  
                                    l1688 0148                                      l1698 0178  
                 __end_of_PWM1_Initialize 0778                                      _LATA 000F82  
                                    _LATB 000F83                                      _LATC 000F84  
                                    _T4PR 000FB5                                      _PMD0 000EDC  
                                    _PMD1 000EDD                                      _PMD2 000EDE  
                                    _PMD3 000EDF                                      _PMD4 000EE0  
                                    _PMD5 000EE1                                      _TMR4 000FB4  
                                    _WPUA 000F0B                                      _WPUB 000F13  
                                    _WPUC 000F1B                                      _WPUE 000F28  
                                    _main 06B8                                      _rand 0312  
                                    _seed 0042                                      btemp 0046  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 0076                ??_TMR4_SetInterruptHandler 0024  
                            ___param_bank 000000                   __end_of_TMR0_Initialize 0526  
          ??_TMR0_DefaultInterruptHandler 0020            __size_of_OSCILLATOR_Initialize 0018  
           __end_of_OSCILLATOR_Initialize 073C                                     ?_main 0020  
                                   ?_rand 002E                           __end_of___awmod 0312  
                                   _T4CON 000FB6                                     _T4HLT 000FB7  
                                   _T4TMR 000FB4                                     i2l134 006A  
                                   i2l135 006A                                     i2l320 07CA  
                                   i2l129 0038                                     i2l314 05BE  
                                   _T4RST 000FB9                                     i2l180 0788  
                                   i2l190 07CC                                     i2l408 06B6  
                                   i2l184 061A                                     i2l383 0722  
                                   _OSCEN 000ED7                        _PWM4_LoadDutyValue 0526  
                                   _TMR0H 000FD3                                     _TMR0L 000FD2  
                                   _TRISA 000F87                                     _TRISB 000F88  
                                   _TRISC 000F89         __size_of_TMR0_SetInterruptHandler 000A  
                         __end_of_appInit 04EC                           _TMR4_Initialize 061C  
                     ___lmul@multiplicand 0026                 ?_TMR0_SetInterruptHandler 0022  
                         _setColorFromHex 079A                          __end_of_TMR0_ISR 078A  
                        _rgbButtonHandler 01AE                          __end_of_TMR4_ISR 05C0  
                             ?_TMR4_Start 0020                       ?_PWM4_LoadDutyValue 0022  
                                   _srand 0646                   __end_of_PWM3_Initialize 0764  
                                   pclath 000FFA                                     ttemp5 0047  
                                   ttemp6 004A                                     ttemp7 004E  
                                   status 000FD8                                     wtemp8 0047  
                         __initialization 06F0                              __end_of_main 06D4  
                            __end_of_rand 037E                      ??_PWM4_LoadDutyValue 0024  
                 __end_of_PWM4_Initialize 0750               ?_INTERRUPT_InterruptManager 0020  
                                  ??_main 003A                                    ??_rand 0030  
                           __activetblptr 000002                    __size_of_rgbButtonTick 0026  
                                  _CCPR1H 000FAA                                    _CCPR1L 000FA9  
                                  ?_srand 0022                                    _ANSELA 000F0C  
                                  _ANSELB 000F14                                    _ANSELC 000F1C  
                                  _T0CON0 000FD4                                    _T0CON1 000FD5  
                                  _RC1PPS 000EF3                                    _RC3PPS 000EF5  
                        ?_PWM1_Initialize 0020                                    _RC5PPS 000EF7  
                                  _ODCONA 000F0A                                    _ODCONB 000F12  
                                  _ODCONC 000F1A                                    i2l1134 070A  
                                  i2l1128 0692                                    i2l1136 070E  
                                  i2l1226 05EE                                    i2l1330 0784  
                                  i2l1410 0046                                    i2l1228 0600  
                                  i2l1324 0778                                    i2l1332 058E  
                                  i2l1412 0054                                    i2l1404 0012  
                                  i2l1326 077C                                    i2l1334 0592  
                                  i2l1414 0062                                    i2l1406 0022  
                                  i2l1328 0780                                    i2l1336 05A4  
                                  i2l1408 0030                                    _INLVLA 000F08  
                                  _INLVLB 000F10                                    _INLVLC 000F18  
                                  _INLVLE 000F25                                    _OSCFRQ 000ED9  
                                  i2u7_40 0600                                    i2u7_41 05FC  
                                  i2u8_48 0606                                    i2u8_49 061A  
                         _TMR4_StartTimer 07BC                                    ___lmul 037E  
             __size_of_PWM3_LoadDutyValue 0034                                 ??___awmod 0038  
                     __size_of_TMR4_Start 0004                                    _msTick 070A  
                        ?_TMR0_Initialize 0020                   __end_of_TMR4_Initialize 0646  
                                  clear_0 06F6                           ___awmod@divisor 0036  
                               ??_appInit 003A                                    isa$std 000001  
                 __end_of_setColorFromHex 07A8                           ___awmod@counter 0038  
                        __end_of_setColor 079A      __end_of_TMR4_DefaultInterruptHandler 07CC  
   __size_of_TMR4_DefaultInterruptHandler 0002              _TMR4_DefaultInterruptHandler 07CA  
                          _PMD_Initialize 06D4                                    tblptru 000FF8  
                                  srand@s 0022                     __end_of_TMR0_CallBack 061C  
TMR4_SetInterruptHandler@InterruptHandler 0022  TMR0_SetInterruptHandler@InterruptHandler 0022  
           __size_of_INTERRUPT_Initialize 0004                          ?_PWM3_Initialize 0020  
                       _SYSTEM_Initialize 066C                                __accesstop 0060  
                 __end_of__initialization 06FC                        ?_SYSTEM_Initialize 0020  
                           ___rparam_used 000001                              ?_updateColor 0020  
             PWM1_LoadDutyValue@dutyValue 0022                             _rgbButtonTick 0692  
                          __pcstackCOMRAM 0020                       ??_SYSTEM_Initialize 0026  
                               ?_TMR0_ISR 0020                                 ?_TMR4_ISR 0020  
                           __end_of_srand 066C                        _PWM1_LoadDutyValue 05C0  
                        ?_PWM4_Initialize 0020                    __end_of_PMD_Initialize 06F0  
             PWM4_LoadDutyValue@dutyValue 0022                       ?_PWM1_LoadDutyValue 0022  
         fp__TMR4_DefaultInterruptHandler 0000             ?_TMR4_DefaultInterruptHandler 0020  
                 __end_of_TMR4_StartTimer 07C2                 __end_of_SYSTEM_Initialize 0692  
                                 ??_srand 0024                             setColor@green 0022  
                              __pnvCOMRAM 003A                                _appHandler 007A  
                   _TMR4_InterruptHandler 003C                            ?_rgbButtonTick 0020  
                    ??_PWM1_LoadDutyValue 0024                               setColor@red 0024  
                __end_of_rgbButtonHandler 0262          __end_of_TMR0_SetInterruptHandler 07BC  
                                 ?___lmul 0022                                ??_TMR0_ISR 0020  
                              ??_TMR4_ISR 0020                                   _CCP1CON 000FAB  
                                 ?_msTick 0020                            ___lmul@product 002A  
                            _blinkCounter 003A                          ?_TMR4_Initialize 0020  
                         ?_PMD_Initialize 0020                          ?_setColorFromHex 0022  
                                 _OSCCON1 000ED3                                   _OSCCON3 000ED5  
                                 i2u21_40 05A4                                   i2u21_41 05A0  
                                 i2u30_40 0022                                   i2u30_41 001E  
                                 i2u22_48 05AA                                   i2u31_40 0030  
                                 i2u22_49 05BE                                   i2u31_41 002C  
                                 i2u32_40 0046                                   i2u32_41 0042  
                                 i2u33_40 0054                                   i2u33_41 0050  
                                 i2u34_40 0062                                   i2u34_41 005E  
                                 _OSCTUNE 000ED8                                   _PWM3DCH 000FA3  
                                 _PWM3DCL 000FA2                                   _PWM4DCH 000FA0  
                                 _PWM4DCL 000F9F                                   _PWM3CON 000FA4  
                                 _PWM4CON 000FA1                                   _SLRCONA 000F09  
                                 _SLRCONB 000F11                                   _SLRCONC 000F19  
                            ??_TMR4_Start 0022                                 ?_setColor 0022  
                                 __Hparam 0000                                   __Lparam 0000  
                                 _cButton 0001                           __size_of___lmul 006A  
                                 ___awmod 0262                                   __pcinit 06F0  
                         __size_of_msTick 001A                        __end_of_TMR4_Start 07C6  
                                 _appInit 049E                                   __ramtop 0F00  
                                 __ptext0 06B8                                   __ptext1 049E  
                                 __ptext2 0646                                   __ptext3 0312  
                                 __ptext4 037E                                   __ptext5 0262  
                                 __ptext6 007A                                   __ptext7 079A  
                                 __ptext8 078A                                   __ptext9 01AE  
                   _OSCILLATOR_Initialize 0724                                   _msTicks 0013  
                        ___awmod@dividend 0034                                 _T4CONbits 000FB6  
                ??_PIN_MANAGER_Initialize 0022         __size_of_TMR4_SetInterruptHandler 000A  
               ?_TMR4_SetInterruptHandler 0022                                 _T4HLTbits 000FB7  
              __size_of_SYSTEM_Initialize 0026                          ?_TMR4_StartTimer 0020  
                    end_of_initialization 06FC            ??_TMR4_DefaultInterruptHandler 0020  
                           appHandler@red 001F                                 _T4RSTbits 000FB9  
                           __Lmediumconst 0000                           ??_rgbButtonTick 0020  
                             ?_appHandler 0020                                ??_setColor 0024  
         updateColor@calculatedColorValue 0027                      __size_of_updateColor 005C  
                                 postinc0 000FEE                                   postinc2 000FDE  
             __size_of_PWM4_LoadDutyValue 0034                  _TMR0_SetInterruptHandler 07B2  
                               _PORTAbits 000F8C                               _CCP1CONbits 000FAB  
              __end_of_PWM3_LoadDutyValue 058E                  __size_of_PWM1_Initialize 0014  
                    _timer0ReloadVal16bit 0040              __end_of_INTERRUPT_Initialize 07CA  
                          __end_of___lmul 03E8                         __size_of_TMR0_ISR 0012  
                       __size_of_TMR4_ISR 0032                    ?_OSCILLATOR_Initialize 0020  
                          __end_of_msTick 0724                       __size_of_appHandler 0134  
                     start_initialization 06F0                  __size_of_TMR0_Initialize 003A  
         __size_of_PIN_MANAGER_Initialize 005A                  __size_of_PWM3_Initialize 0014  
                        ??_PMD_Initialize 0022                                  ??___lmul 002A  
                       ?_rgbButtonHandler 0020            rgbButtonHandler@debounceBuffer 001B  
                             _CCPTMRSbits 000FAD                    __size_of_TMR0_CallBack 002E  
                      ??_rgbButtonHandler 0029                                  ??_msTick 0020  
                             __pbssCOMRAM 0001                  __size_of_PWM4_Initialize 0014  
                            setColor@blue 0023                     _TMR0_InterruptHandler 003E  
             __size_of_PWM1_LoadDutyValue 002E                    _PIN_MANAGER_Initialize 0444  
                       __size_of_setColor 0010                                 __pintcode 0008  
        __end_of_TMR4_SetInterruptHandler 07B2                                  ?___awmod 0034  
                                ?_appInit 0020                         ??_PWM1_Initialize 0022  
            ??_INTERRUPT_InterruptManager 0020                  __size_of_TMR4_Initialize 002A  
                __size_of_setColorFromHex 000E                             _TMR0_CallBack 05EE  
                                _T4CLKCON 000FB8                            __size_of_srand 0026  
                    _INTERRUPT_Initialize 07C6                         ??_TMR0_Initialize 0024  
                            ??_appHandler 002B                                  _PIE0bits 000EBD  
                                _PIE4bits 000EC1       __size_of_INTERRUPT_InterruptManager 006E  
              ??_TMR0_SetInterruptHandler 0024                                  _PIR0bits 000EC5  
                                _PIR4bits 000EC9                                  _TMR0_ISR 0778  
                                _TMR4_ISR 058E                         ??_PWM3_Initialize 0022  
                               fp__msTick 0000                        __end_of_appHandler 01AE  
                          ?_TMR0_CallBack 0020                         ___lmul@multiplier 0022  
                   ?_INTERRUPT_Initialize 0020                         ??_PWM4_Initialize 0022  
                           ??_updateColor 0026                     __end_of_rgbButtonTick 06B8  
                __size_of_TMR4_StartTimer 0006                                  __Hrparam 0000  
                         appHandler@state 001D                __end_of_PWM4_LoadDutyValue 055A  
                                __Lrparam 0000                   ??_OSCILLATOR_Initialize 0022  
                        __size_of___awmod 00B0                  _TMR4_SetInterruptHandler 07A8  
                        __size_of_appInit 004E                        _PWM3_LoadDutyValue 055A  
                              _T0CON0bits 000FD4                                  __ptext10 03E8  
                                __ptext11 0526                                  __ptext20 07B2  
                                __ptext12 055A                                  __ptext21 073C  
                                __ptext13 05C0                                  __ptext30 07CA  
                                __ptext22 0750                                  __ptext14 07BC  
                                __ptext31 0778                                  __ptext23 0764  
                                __ptext15 07C2                                  __ptext32 05EE  
                                __ptext24 06D4                                  __ptext16 066C  
                                __ptext33 07CC                                  __ptext25 0444  
                                __ptext17 061C                                  __ptext34 070A  
                                __ptext26 0724                                  __ptext18 07A8  
                                __ptext35 0692                                  __ptext27 07C6  
                                __ptext19 04EC                                  __ptext36 0000  
                                __ptext29 058E                       ?_PWM3_LoadDutyValue 0022  
                       ??_TMR4_Initialize 0024                             __size_of_main 001C  
                           __size_of_rand 006C                         ??_setColorFromHex 0026  
    __end_of_TMR0_DefaultInterruptHandler 07CE     __size_of_TMR0_DefaultInterruptHandler 0002  
            _TMR0_DefaultInterruptHandler 07CC                                  _setColor 078A  
                    ??_PWM3_LoadDutyValue 0024                                  isa$xinst 000000  
                                int$flags 0046                       __end_of_updateColor 0444  
      __end_of_INTERRUPT_InterruptManager 0076                _INTERRUPT_InterruptManager 0008  
                              _INTCONbits 000FF2                           ??_TMR0_CallBack 0020  
               __size_of_rgbButtonHandler 00B4                    ??_INTERRUPT_Initialize 0022  
                                intlevel2 0000                   ?_PIN_MANAGER_Initialize 0020  
                         _PWM1_Initialize 0764           fp__TMR0_DefaultInterruptHandler 0000  
           ?_TMR0_DefaultInterruptHandler 0020               PWM3_LoadDutyValue@dutyValue 0022  
                       ??_TMR4_StartTimer 0022                           _TMR0_Initialize 04EC  
                              _TMR4_Start 07C2            __end_of_PIN_MANAGER_Initialize 049E  
              __end_of_PWM1_LoadDutyValue 05EE                      setColorFromHex@color 0022  
                         _PWM3_Initialize 0750                               _updateColor 03E8  
