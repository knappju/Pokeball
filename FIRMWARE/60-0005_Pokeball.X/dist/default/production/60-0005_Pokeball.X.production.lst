

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Dec 21 13:01:13 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F26Q10
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45  0000                     
    46                           ; Version 2.30
    47                           ; Generated 20/08/2020 GMT
    48                           ; 
    49                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F26Q10 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82                           	psect	nvCOMRAM
    83  00001D                     __pnvCOMRAM:
    84                           	callstack 0
    85  00001D                     _TMR4_InterruptHandler:
    86                           	callstack 0
    87  00001D                     	ds	2
    88  00001F                     _TMR0_InterruptHandler:
    89                           	callstack 0
    90  00001F                     	ds	2
    91  000021                     _timer0ReloadVal16bit:
    92                           	callstack 0
    93  000021                     	ds	2
    94  0000                     _PIR4bits	set	3785
    95  0000                     _PIE4bits	set	3777
    96  0000                     _PIR0bits	set	3781
    97  0000                     _PIE0bits	set	3773
    98  0000                     _PMD5	set	3809
    99  0000                     _PMD4	set	3808
   100  0000                     _PMD3	set	3807
   101  0000                     _PMD2	set	3806
   102  0000                     _PMD1	set	3805
   103  0000                     _PMD0	set	3804
   104  0000                     _OSCTUNE	set	3800
   105  0000                     _OSCFRQ	set	3801
   106  0000                     _OSCEN	set	3799
   107  0000                     _OSCCON3	set	3797
   108  0000                     _OSCCON1	set	3795
   109  0000                     _RC5PPS	set	3831
   110  0000                     _RC1PPS	set	3827
   111  0000                     _RC3PPS	set	3829
   112  0000                     _INLVLE	set	3877
   113  0000                     _INLVLC	set	3864
   114  0000                     _INLVLB	set	3856
   115  0000                     _INLVLA	set	3848
   116  0000                     _SLRCONC	set	3865
   117  0000                     _SLRCONB	set	3857
   118  0000                     _SLRCONA	set	3849
   119  0000                     _ODCONC	set	3866
   120  0000                     _ODCONB	set	3858
   121  0000                     _ODCONA	set	3850
   122  0000                     _WPUC	set	3867
   123  0000                     _WPUA	set	3851
   124  0000                     _WPUB	set	3859
   125  0000                     _WPUE	set	3880
   126  0000                     _ANSELA	set	3852
   127  0000                     _ANSELB	set	3860
   128  0000                     _ANSELC	set	3868
   129  0000                     _PR4	set	4021
   130  0000                     _TMR4	set	4020
   131  0000                     _T4CONbits	set	4022
   132  0000                     _T4RSTbits	set	4025
   133  0000                     _T4HLTbits	set	4023
   134  0000                     _T4CON	set	4022
   135  0000                     _T4TMR	set	4020
   136  0000                     _T4PR	set	4021
   137  0000                     _T4RST	set	4025
   138  0000                     _T4HLT	set	4023
   139  0000                     _T4CLKCON	set	4024
   140  0000                     _PWM4DCL	set	3999
   141  0000                     _PWM4DCH	set	4000
   142  0000                     _PWM4CON	set	4001
   143  0000                     _PWM3DCL	set	4002
   144  0000                     _PWM3DCH	set	4003
   145  0000                     _PWM3CON	set	4004
   146  0000                     _CCP1CONbits	set	4011
   147  0000                     _CCPTMRSbits	set	4013
   148  0000                     _CCPR1L	set	4009
   149  0000                     _CCPR1H	set	4010
   150  0000                     _CCP1CON	set	4011
   151  0000                     _T0CON0bits	set	4052
   152  0000                     _T0CON0	set	4052
   153  0000                     _TMR0L	set	4050
   154  0000                     _TMR0H	set	4051
   155  0000                     _T0CON1	set	4053
   156  0000                     _INTCONbits	set	4082
   157  0000                     _TRISC	set	3977
   158  0000                     _TRISB	set	3976
   159  0000                     _TRISA	set	3975
   160  0000                     _LATC	set	3972
   161  0000                     _LATB	set	3971
   162  0000                     _LATA	set	3970
   163                           
   164                           ; #config settings
   165                           
   166                           	psect	cinit
   167  0005FA                     __pcinit:
   168                           	callstack 0
   169  0005FA                     start_initialization:
   170                           	callstack 0
   171  0005FA                     __initialization:
   172                           	callstack 0
   173                           
   174                           ; Clear objects allocated to COMRAM (16 bytes)
   175  0005FA  EE00  F001         	lfsr	0,__pbssCOMRAM
   176  0005FE  0E10               	movlw	16
   177  000600                     clear_0:
   178  000600  6AEE               	clrf	postinc0,c
   179  000602  06E8               	decf	wreg,f,c
   180  000604  E1FD               	bnz	clear_0
   181  000606                     end_of_initialization:
   182                           	callstack 0
   183  000606                     __end_of__initialization:
   184                           	callstack 0
   185  000606  9023               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   186  000608  9223               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   187  00060A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   188  00060C  6EF8               	movwf	tblptru,c
   189  00060E  0100               	movlb	0
   190  000610  EFE1  F002         	goto	_main	;jump to C main() function
   191                           
   192                           	psect	bssCOMRAM
   193  000001                     __pbssCOMRAM:
   194                           	callstack 0
   195  000001                     _msTicks:
   196                           	callstack 0
   197  000001                     	ds	8
   198  000009                     appHandler@state:
   199                           	callstack 0
   200  000009                     	ds	2
   201  00000B                     appHandler@blueValue:
   202                           	callstack 0
   203  00000B                     	ds	2
   204  00000D                     appHandler@redValue:
   205                           	callstack 0
   206  00000D                     	ds	2
   207  00000F                     appHandler@greenValue:
   208                           	callstack 0
   209  00000F                     	ds	2
   210                           
   211                           	psect	cstackCOMRAM
   212  000011                     __pcstackCOMRAM:
   213                           	callstack 0
   214  000011                     ??_INTERRUPT_InterruptManager:
   215  000011                     
   216                           ; 1 bytes @ 0x0
   217  000011                     	ds	2
   218  000013                     TMR0_SetInterruptHandler@InterruptHandler:
   219                           	callstack 0
   220  000013                     PWM1_LoadDutyValue@dutyValue:
   221                           	callstack 0
   222  000013                     PWM3_LoadDutyValue@dutyValue:
   223                           	callstack 0
   224  000013                     PWM4_LoadDutyValue@dutyValue:
   225                           	callstack 0
   226  000013                     TMR4_SetInterruptHandler@InterruptHandler:
   227                           	callstack 0
   228                           
   229                           ; 2 bytes @ 0x2
   230  000013                     	ds	2
   231  000015                     ??_TMR0_Initialize:
   232  000015                     ??_PWM3_LoadDutyValue:
   233  000015                     ??_PWM4_LoadDutyValue:
   234  000015                     setBlue@value:
   235                           	callstack 0
   236                           
   237                           ; 2 bytes @ 0x4
   238  000015                     	ds	2
   239  000017                     ??_setBlue:
   240  000017                     setRed@value:
   241                           	callstack 0
   242  000017                     setGreen@value:
   243                           	callstack 0
   244                           
   245                           ; 2 bytes @ 0x6
   246  000017                     	ds	2
   247  000019                     ??_setGreen:
   248  000019                     ??_setRed:
   249                           
   250                           ; 1 bytes @ 0x8
   251  000019                     	ds	2
   252  00001B                     ??_appHandler:
   253                           
   254                           ; 1 bytes @ 0xA
   255  00001B                     	ds	2
   256  00001D                     
   257                           ; 1 bytes @ 0xC
   258 ;;
   259 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   260 ;;
   261 ;; *************** function _main *****************
   262 ;; Defined at:
   263 ;;		line 52 in file "main.c"
   264 ;; Parameters:    Size  Location     Type
   265 ;;		None
   266 ;; Auto vars:     Size  Location     Type
   267 ;;		None
   268 ;; Return value:  Size  Location     Type
   269 ;;                  1    wreg      void 
   270 ;; Registers used:
   271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   272 ;; Tracked objects:
   273 ;;		On entry : 0/0
   274 ;;		On exit  : 0/0
   275 ;;		Unchanged: 0/0
   276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   281 ;;Total ram usage:        0 bytes
   282 ;; Hardware stack levels required when called: 7
   283 ;; This function calls:
   284 ;;		_SYSTEM_Initialize
   285 ;;		_TMR4_StartTimer
   286 ;;		_appHandler
   287 ;;		_appInit
   288 ;; This function is called by:
   289 ;;		Startup code after reset
   290 ;; This function uses a non-reentrant model
   291 ;;
   292                           
   293                           	psect	text0
   294  0005C2                     __ptext0:
   295                           	callstack 0
   296  0005C2                     _main:
   297                           	callstack 24
   298  0005C2                     
   299                           ;main.c: 55:     SYSTEM_Initialize();
   300  0005C2  ECCE  F002         	call	_SYSTEM_Initialize	;wreg free
   301  0005C6                     
   302                           ;main.c: 56:     TMR4_StartTimer();
   303  0005C6  EC52  F003         	call	_TMR4_StartTimer	;wreg free
   304  0005CA                     
   305                           ;main.c: 57:     appInit();
   306  0005CA  ECA3  F002         	call	_appInit	;wreg free
   307  0005CE                     
   308                           ;main.c: 64:     (INTCONbits.GIE = 1);
   309  0005CE  8EF2               	bsf	242,7,c	;volatile
   310  0005D0                     
   311                           ;main.c: 70:     (INTCONbits.PEIE = 1);
   312  0005D0  8CF2               	bsf	242,6,c	;volatile
   313  0005D2                     l1586:
   314                           
   315                           ;main.c: 78:     {;main.c: 79:         appHandler();
   316  0005D2  EC3D  F000         	call	_appHandler	;wreg free
   317  0005D6  EFE9  F002         	goto	l1586
   318  0005DA  EF3B  F000         	goto	start
   319  0005DE                     __end_of_main:
   320                           	callstack 0
   321                           
   322 ;; *************** function _appInit *****************
   323 ;; Defined at:
   324 ;;		line 51 in file "app.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;		None
   327 ;; Auto vars:     Size  Location     Type
   328 ;;		None
   329 ;; Return value:  Size  Location     Type
   330 ;;                  1    wreg      void 
   331 ;; Registers used:
   332 ;;		wreg, status,2, status,0, cstack
   333 ;; Tracked objects:
   334 ;;		On entry : 0/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   342 ;;Total ram usage:        0 bytes
   343 ;; Hardware stack levels used: 1
   344 ;; Hardware stack levels required when called: 5
   345 ;; This function calls:
   346 ;;		_PWM1_LoadDutyValue
   347 ;;		_PWM3_LoadDutyValue
   348 ;;		_PWM4_LoadDutyValue
   349 ;;		_TMR0_SetInterruptHandler
   350 ;; This function is called by:
   351 ;;		_main
   352 ;; This function uses a non-reentrant model
   353 ;;
   354                           
   355                           	psect	text1
   356  000546                     __ptext1:
   357                           	callstack 0
   358  000546                     _appInit:
   359                           	callstack 25
   360  000546                     
   361                           ;app.c: 52:     TMR0_SetInterruptHandler(msTick);
   362  000546  0E2C               	movlw	low _msTick
   363  000548  6E13               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
   364  00054A  0E06               	movlw	high _msTick
   365  00054C  6E14               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
   366  00054E  EC4D  F003         	call	_TMR0_SetInterruptHandler	;wreg free
   367                           
   368                           ;app.c: 54:     PWM4_LoadDutyValue(0xFFFF);
   369  000552  0EFF               	movlw	255
   370  000554  6E14               	movwf	(PWM4_LoadDutyValue@dutyValue+1)^0,c
   371  000556  6813               	setf	PWM4_LoadDutyValue@dutyValue^0,c
   372  000558  EC42  F002         	call	_PWM4_LoadDutyValue	;wreg free
   373                           
   374                           ;app.c: 55:     PWM3_LoadDutyValue(0xFFFF);
   375  00055C  0EFF               	movlw	255
   376  00055E  6E14               	movwf	(PWM3_LoadDutyValue@dutyValue+1)^0,c
   377  000560  6813               	setf	PWM3_LoadDutyValue@dutyValue^0,c
   378  000562  EC28  F002         	call	_PWM3_LoadDutyValue	;wreg free
   379                           
   380                           ;app.c: 56:     PWM1_LoadDutyValue(0xFFFF);
   381  000566  0EFF               	movlw	255
   382  000568  6E14               	movwf	(PWM1_LoadDutyValue@dutyValue+1)^0,c
   383  00056A  6813               	setf	PWM1_LoadDutyValue@dutyValue^0,c
   384  00056C  EC75  F002         	call	_PWM1_LoadDutyValue	;wreg free
   385  000570  0012               	return		;funcret
   386  000572                     __end_of_appInit:
   387                           	callstack 0
   388                           
   389 ;; *************** function _appHandler *****************
   390 ;; Defined at:
   391 ;;		line 59 in file "app.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;		None
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   400 ;; Tracked objects:
   401 ;;		On entry : 0/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   407 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   408 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   409 ;;Total ram usage:        2 bytes
   410 ;; Hardware stack levels used: 1
   411 ;; Hardware stack levels required when called: 6
   412 ;; This function calls:
   413 ;;		_setBlue
   414 ;;		_setGreen
   415 ;;		_setRed
   416 ;; This function is called by:
   417 ;;		_main
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421                           	psect	text2
   422  00007A                     __ptext2:
   423                           	callstack 0
   424  00007A                     _appHandler:
   425                           	callstack 24
   426  00007A                     
   427                           ;app.c: 60:     static uint16_t greenValue = 0;;app.c: 61:     static uint16_t redValue 
      +                          = 0;;app.c: 62:     static uint16_t blueValue = 0;;app.c: 63:     static int state = 0;;
      +                          app.c: 76:     if(msTicks >= 50){
   428  00007A  5008               	movf	(_msTicks+7)^0,w,c
   429  00007C  1007               	iorwf	(_msTicks+6)^0,w,c
   430  00007E  1006               	iorwf	(_msTicks+5)^0,w,c
   431  000080  1005               	iorwf	(_msTicks+4)^0,w,c
   432  000082  1004               	iorwf	(_msTicks+3)^0,w,c
   433  000084  1003               	iorwf	(_msTicks+2)^0,w,c
   434  000086  1002               	iorwf	(_msTicks+1)^0,w,c
   435  000088  E109               	bnz	u340
   436  00008A  0E32               	movlw	50
   437  00008C  5C01               	subwf	_msTicks^0,w,c
   438  00008E  A0D8               	btfss	status,0,c
   439  000090  EF4C  F000         	goto	u341
   440  000094  EF4E  F000         	goto	u340
   441  000098                     u341:
   442  000098  EF72  F001         	goto	l389
   443  00009C                     u340:
   444  00009C                     
   445                           ;app.c: 77:         msTicks = 0;
   446  00009C  EE20  F001         	lfsr	2,_msTicks
   447  0000A0  0E07               	movlw	7
   448  0000A2                     u351:
   449  0000A2  6ADE               	clrf	postinc2,c
   450  0000A4  06E8               	decf	wreg,f,c
   451  0000A6  E2FD               	bc	u351
   452                           
   453                           ;app.c: 79:         switch(state){
   454  0000A8  EF32  F001         	goto	l1568
   455  0000AC                     l1510:
   456                           
   457                           ;app.c: 81:                 greenValue += 4;
   458  0000AC  0E04               	movlw	4
   459  0000AE  260F               	addwf	appHandler@greenValue^0,f,c
   460  0000B0  0E00               	movlw	0
   461  0000B2  2210               	addwfc	(appHandler@greenValue+1)^0,f,c
   462  0000B4                     
   463                           ;app.c: 82:                 redValue = 0;
   464  0000B4  0E00               	movlw	0
   465  0000B6  6E0E               	movwf	(appHandler@redValue+1)^0,c
   466  0000B8  0E00               	movlw	0
   467  0000BA  6E0D               	movwf	appHandler@redValue^0,c
   468  0000BC                     
   469                           ;app.c: 83:                 blueValue = 0;
   470  0000BC  0E00               	movlw	0
   471  0000BE  6E0C               	movwf	(appHandler@blueValue+1)^0,c
   472  0000C0  0E00               	movlw	0
   473  0000C2  6E0B               	movwf	appHandler@blueValue^0,c
   474                           
   475                           ;app.c: 84:                 if(greenValue >= 255){
   476  0000C4  5010               	movf	(appHandler@greenValue+1)^0,w,c
   477  0000C6  E108               	bnz	u360
   478  0000C8  280F               	incf	appHandler@greenValue^0,w,c
   479  0000CA  A0D8               	btfss	status,0,c
   480  0000CC  EF6A  F000         	goto	u361
   481  0000D0  EF6C  F000         	goto	u360
   482  0000D4                     u361:
   483  0000D4  EF60  F001         	goto	l1570
   484  0000D8                     u360:
   485  0000D8                     
   486                           ;app.c: 85:                     state = 1;
   487  0000D8  0E00               	movlw	0
   488  0000DA  6E0A               	movwf	(appHandler@state+1)^0,c
   489  0000DC  0E01               	movlw	1
   490  0000DE  6E09               	movwf	appHandler@state^0,c
   491  0000E0  EF60  F001         	goto	l1570
   492  0000E4                     l1518:
   493                           
   494                           ;app.c: 89:                 greenValue -= 4;
   495  0000E4  0E04               	movlw	4
   496  0000E6  5E0F               	subwf	appHandler@greenValue^0,f,c
   497  0000E8  0E00               	movlw	0
   498  0000EA  5A10               	subwfb	(appHandler@greenValue+1)^0,f,c
   499  0000EC                     
   500                           ;app.c: 90:                 redValue = 0;
   501  0000EC  0E00               	movlw	0
   502  0000EE  6E0E               	movwf	(appHandler@redValue+1)^0,c
   503  0000F0  0E00               	movlw	0
   504  0000F2  6E0D               	movwf	appHandler@redValue^0,c
   505  0000F4                     
   506                           ;app.c: 91:                 blueValue = 0;
   507  0000F4  0E00               	movlw	0
   508  0000F6  6E0C               	movwf	(appHandler@blueValue+1)^0,c
   509  0000F8  0E00               	movlw	0
   510  0000FA  6E0B               	movwf	appHandler@blueValue^0,c
   511                           
   512                           ;app.c: 92:                 if(greenValue <= 0){
   513  0000FC  500F               	movf	appHandler@greenValue^0,w,c
   514  0000FE  1010               	iorwf	(appHandler@greenValue+1)^0,w,c
   515  000100  A4D8               	btfss	status,2,c
   516  000102  EF85  F000         	goto	u371
   517  000106  EF87  F000         	goto	u370
   518  00010A                     u371:
   519  00010A  EF60  F001         	goto	l1570
   520  00010E                     u370:
   521  00010E                     
   522                           ;app.c: 93:                     state = 2;
   523  00010E  0E00               	movlw	0
   524  000110  6E0A               	movwf	(appHandler@state+1)^0,c
   525  000112  0E02               	movlw	2
   526  000114  6E09               	movwf	appHandler@state^0,c
   527  000116  EF60  F001         	goto	l1570
   528  00011A                     l1526:
   529                           
   530                           ;app.c: 97:                 redValue += 4;
   531  00011A  0E04               	movlw	4
   532  00011C  260D               	addwf	appHandler@redValue^0,f,c
   533  00011E  0E00               	movlw	0
   534  000120  220E               	addwfc	(appHandler@redValue+1)^0,f,c
   535  000122                     
   536                           ;app.c: 98:                 greenValue = 0;
   537  000122  0E00               	movlw	0
   538  000124  6E10               	movwf	(appHandler@greenValue+1)^0,c
   539  000126  0E00               	movlw	0
   540  000128  6E0F               	movwf	appHandler@greenValue^0,c
   541  00012A                     
   542                           ;app.c: 99:                 blueValue = 0;
   543  00012A  0E00               	movlw	0
   544  00012C  6E0C               	movwf	(appHandler@blueValue+1)^0,c
   545  00012E  0E00               	movlw	0
   546  000130  6E0B               	movwf	appHandler@blueValue^0,c
   547                           
   548                           ;app.c: 100:                 if(redValue >= 255){
   549  000132  500E               	movf	(appHandler@redValue+1)^0,w,c
   550  000134  E108               	bnz	u380
   551  000136  280D               	incf	appHandler@redValue^0,w,c
   552  000138  A0D8               	btfss	status,0,c
   553  00013A  EFA1  F000         	goto	u381
   554  00013E  EFA3  F000         	goto	u380
   555  000142                     u381:
   556  000142  EF60  F001         	goto	l1570
   557  000146                     u380:
   558  000146                     
   559                           ;app.c: 101:                     state = 3;
   560  000146  0E00               	movlw	0
   561  000148  6E0A               	movwf	(appHandler@state+1)^0,c
   562  00014A  0E03               	movlw	3
   563  00014C  6E09               	movwf	appHandler@state^0,c
   564  00014E  EF60  F001         	goto	l1570
   565  000152                     l1534:
   566                           
   567                           ;app.c: 105:                 redValue -= 4;
   568  000152  0E04               	movlw	4
   569  000154  5E0D               	subwf	appHandler@redValue^0,f,c
   570  000156  0E00               	movlw	0
   571  000158  5A0E               	subwfb	(appHandler@redValue+1)^0,f,c
   572  00015A                     
   573                           ;app.c: 106:                 greenValue = 0;
   574  00015A  0E00               	movlw	0
   575  00015C  6E10               	movwf	(appHandler@greenValue+1)^0,c
   576  00015E  0E00               	movlw	0
   577  000160  6E0F               	movwf	appHandler@greenValue^0,c
   578  000162                     
   579                           ;app.c: 107:                 blueValue = 0;
   580  000162  0E00               	movlw	0
   581  000164  6E0C               	movwf	(appHandler@blueValue+1)^0,c
   582  000166  0E00               	movlw	0
   583  000168  6E0B               	movwf	appHandler@blueValue^0,c
   584                           
   585                           ;app.c: 108:                 if(redValue <= 0){
   586  00016A  500D               	movf	appHandler@redValue^0,w,c
   587  00016C  100E               	iorwf	(appHandler@redValue+1)^0,w,c
   588  00016E  A4D8               	btfss	status,2,c
   589  000170  EFBC  F000         	goto	u391
   590  000174  EFBE  F000         	goto	u390
   591  000178                     u391:
   592  000178  EF60  F001         	goto	l1570
   593  00017C                     u390:
   594  00017C                     
   595                           ;app.c: 109:                     state = 4;
   596  00017C  0E00               	movlw	0
   597  00017E  6E0A               	movwf	(appHandler@state+1)^0,c
   598  000180  0E04               	movlw	4
   599  000182  6E09               	movwf	appHandler@state^0,c
   600  000184  EF60  F001         	goto	l1570
   601  000188                     l1542:
   602                           
   603                           ;app.c: 113:                 blueValue += 4;
   604  000188  0E04               	movlw	4
   605  00018A  260B               	addwf	appHandler@blueValue^0,f,c
   606  00018C  0E00               	movlw	0
   607  00018E  220C               	addwfc	(appHandler@blueValue+1)^0,f,c
   608  000190                     
   609                           ;app.c: 114:                 greenValue = 0;
   610  000190  0E00               	movlw	0
   611  000192  6E10               	movwf	(appHandler@greenValue+1)^0,c
   612  000194  0E00               	movlw	0
   613  000196  6E0F               	movwf	appHandler@greenValue^0,c
   614  000198                     
   615                           ;app.c: 115:                 redValue = 0;
   616  000198  0E00               	movlw	0
   617  00019A  6E0E               	movwf	(appHandler@redValue+1)^0,c
   618  00019C  0E00               	movlw	0
   619  00019E  6E0D               	movwf	appHandler@redValue^0,c
   620                           
   621                           ;app.c: 116:                 if(blueValue >= 255){
   622  0001A0  500C               	movf	(appHandler@blueValue+1)^0,w,c
   623  0001A2  E108               	bnz	u400
   624  0001A4  280B               	incf	appHandler@blueValue^0,w,c
   625  0001A6  A0D8               	btfss	status,0,c
   626  0001A8  EFD8  F000         	goto	u401
   627  0001AC  EFDA  F000         	goto	u400
   628  0001B0                     u401:
   629  0001B0  EF60  F001         	goto	l1570
   630  0001B4                     u400:
   631  0001B4                     
   632                           ;app.c: 117:                     state = 5;
   633  0001B4  0E00               	movlw	0
   634  0001B6  6E0A               	movwf	(appHandler@state+1)^0,c
   635  0001B8  0E05               	movlw	5
   636  0001BA  6E09               	movwf	appHandler@state^0,c
   637  0001BC  EF60  F001         	goto	l1570
   638  0001C0                     l1550:
   639                           
   640                           ;app.c: 121:                 blueValue -= 4;
   641  0001C0  0E04               	movlw	4
   642  0001C2  5E0B               	subwf	appHandler@blueValue^0,f,c
   643  0001C4  0E00               	movlw	0
   644  0001C6  5A0C               	subwfb	(appHandler@blueValue+1)^0,f,c
   645  0001C8                     
   646                           ;app.c: 122:                 greenValue = 0;
   647  0001C8  0E00               	movlw	0
   648  0001CA  6E10               	movwf	(appHandler@greenValue+1)^0,c
   649  0001CC  0E00               	movlw	0
   650  0001CE  6E0F               	movwf	appHandler@greenValue^0,c
   651  0001D0                     
   652                           ;app.c: 123:                 redValue = 0;
   653  0001D0  0E00               	movlw	0
   654  0001D2  6E0E               	movwf	(appHandler@redValue+1)^0,c
   655  0001D4  0E00               	movlw	0
   656  0001D6  6E0D               	movwf	appHandler@redValue^0,c
   657                           
   658                           ;app.c: 124:                 if(blueValue <= 0){
   659  0001D8  500B               	movf	appHandler@blueValue^0,w,c
   660  0001DA  100C               	iorwf	(appHandler@blueValue+1)^0,w,c
   661  0001DC  A4D8               	btfss	status,2,c
   662  0001DE  EFF3  F000         	goto	u411
   663  0001E2  EFF5  F000         	goto	u410
   664  0001E6                     u411:
   665  0001E6  EF60  F001         	goto	l1570
   666  0001EA                     u410:
   667  0001EA                     
   668                           ;app.c: 125:                     state = 6;
   669  0001EA  0E00               	movlw	0
   670  0001EC  6E0A               	movwf	(appHandler@state+1)^0,c
   671  0001EE  0E06               	movlw	6
   672  0001F0  6E09               	movwf	appHandler@state^0,c
   673  0001F2  EF60  F001         	goto	l1570
   674  0001F6                     l1558:
   675                           
   676                           ;app.c: 129:                 blueValue += 4;
   677  0001F6  0E04               	movlw	4
   678  0001F8  260B               	addwf	appHandler@blueValue^0,f,c
   679  0001FA  0E00               	movlw	0
   680  0001FC  220C               	addwfc	(appHandler@blueValue+1)^0,f,c
   681                           
   682                           ;app.c: 130:                 greenValue += 4;
   683  0001FE  0E04               	movlw	4
   684  000200  260F               	addwf	appHandler@greenValue^0,f,c
   685  000202  0E00               	movlw	0
   686  000204  2210               	addwfc	(appHandler@greenValue+1)^0,f,c
   687                           
   688                           ;app.c: 131:                 redValue += 4;
   689  000206  0E04               	movlw	4
   690  000208  260D               	addwf	appHandler@redValue^0,f,c
   691  00020A  0E00               	movlw	0
   692  00020C  220E               	addwfc	(appHandler@redValue+1)^0,f,c
   693                           
   694                           ;app.c: 132:                 if(blueValue >= 255){
   695  00020E  500C               	movf	(appHandler@blueValue+1)^0,w,c
   696  000210  E108               	bnz	u420
   697  000212  280B               	incf	appHandler@blueValue^0,w,c
   698  000214  A0D8               	btfss	status,0,c
   699  000216  EF0F  F001         	goto	u421
   700  00021A  EF11  F001         	goto	u420
   701  00021E                     u421:
   702  00021E  EF60  F001         	goto	l1570
   703  000222                     u420:
   704  000222                     
   705                           ;app.c: 133:                     state = 7;
   706  000222  0E00               	movlw	0
   707  000224  6E0A               	movwf	(appHandler@state+1)^0,c
   708  000226  0E07               	movlw	7
   709  000228  6E09               	movwf	appHandler@state^0,c
   710  00022A  EF60  F001         	goto	l1570
   711  00022E                     l1562:
   712                           
   713                           ;app.c: 137:                 blueValue -= 4;
   714  00022E  0E04               	movlw	4
   715  000230  5E0B               	subwf	appHandler@blueValue^0,f,c
   716  000232  0E00               	movlw	0
   717  000234  5A0C               	subwfb	(appHandler@blueValue+1)^0,f,c
   718                           
   719                           ;app.c: 138:                 greenValue -= 4;
   720  000236  0E04               	movlw	4
   721  000238  5E0F               	subwf	appHandler@greenValue^0,f,c
   722  00023A  0E00               	movlw	0
   723  00023C  5A10               	subwfb	(appHandler@greenValue+1)^0,f,c
   724                           
   725                           ;app.c: 139:                 redValue -= 4;
   726  00023E  0E04               	movlw	4
   727  000240  5E0D               	subwf	appHandler@redValue^0,f,c
   728  000242  0E00               	movlw	0
   729  000244  5A0E               	subwfb	(appHandler@redValue+1)^0,f,c
   730                           
   731                           ;app.c: 140:                 if(blueValue <= 0){
   732  000246  500B               	movf	appHandler@blueValue^0,w,c
   733  000248  100C               	iorwf	(appHandler@blueValue+1)^0,w,c
   734  00024A  A4D8               	btfss	status,2,c
   735  00024C  EF2A  F001         	goto	u431
   736  000250  EF2C  F001         	goto	u430
   737  000254                     u431:
   738  000254  EF60  F001         	goto	l1570
   739  000258                     u430:
   740  000258                     
   741                           ;app.c: 141:                     state = 0;
   742  000258  0E00               	movlw	0
   743  00025A  6E0A               	movwf	(appHandler@state+1)^0,c
   744  00025C  0E00               	movlw	0
   745  00025E  6E09               	movwf	appHandler@state^0,c
   746  000260  EF60  F001         	goto	l1570
   747  000264                     l1568:
   748  000264  C009  F01B         	movff	appHandler@state,??_appHandler
   749  000268  C00A  F01C         	movff	appHandler@state+1,??_appHandler+1
   750                           
   751                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   752                           ; Switch size 1, requested type "simple"
   753                           ; Number of cases is 1, Range of values is 0 to 0
   754                           ; switch strategies available:
   755                           ; Name         Instructions Cycles
   756                           ; simple_byte            4     3 (average)
   757                           ;	Chosen strategy is simple_byte
   758  00026C  501C               	movf	(??_appHandler+1)^0,w,c
   759  00026E  0A00               	xorlw	0	; case 0
   760  000270  B4D8               	btfsc	status,2,c
   761  000272  EF3D  F001         	goto	l1608
   762  000276  EF60  F001         	goto	l1570
   763  00027A                     l1608:
   764                           
   765                           ; Switch size 1, requested type "simple"
   766                           ; Number of cases is 8, Range of values is 0 to 7
   767                           ; switch strategies available:
   768                           ; Name         Instructions Cycles
   769                           ; simple_byte           25    13 (average)
   770                           ;	Chosen strategy is simple_byte
   771  00027A  501B               	movf	??_appHandler^0,w,c
   772  00027C  0A00               	xorlw	0	; case 0
   773  00027E  B4D8               	btfsc	status,2,c
   774  000280  EF56  F000         	goto	l1510
   775  000284  0A01               	xorlw	1	; case 1
   776  000286  B4D8               	btfsc	status,2,c
   777  000288  EF72  F000         	goto	l1518
   778  00028C  0A03               	xorlw	3	; case 2
   779  00028E  B4D8               	btfsc	status,2,c
   780  000290  EF8D  F000         	goto	l1526
   781  000294  0A01               	xorlw	1	; case 3
   782  000296  B4D8               	btfsc	status,2,c
   783  000298  EFA9  F000         	goto	l1534
   784  00029C  0A07               	xorlw	7	; case 4
   785  00029E  B4D8               	btfsc	status,2,c
   786  0002A0  EFC4  F000         	goto	l1542
   787  0002A4  0A01               	xorlw	1	; case 5
   788  0002A6  B4D8               	btfsc	status,2,c
   789  0002A8  EFE0  F000         	goto	l1550
   790  0002AC  0A03               	xorlw	3	; case 6
   791  0002AE  B4D8               	btfsc	status,2,c
   792  0002B0  EFFB  F000         	goto	l1558
   793  0002B4  0A01               	xorlw	1	; case 7
   794  0002B6  B4D8               	btfsc	status,2,c
   795  0002B8  EF17  F001         	goto	l1562
   796  0002BC  EF60  F001         	goto	l1570
   797  0002C0                     l1570:
   798                           
   799                           ;app.c: 145:         setGreen(greenValue);
   800  0002C0  C00F  F017         	movff	appHandler@greenValue,setGreen@value
   801  0002C4  C010  F018         	movff	appHandler@greenValue+1,setGreen@value+1
   802  0002C8  ECC3  F001         	call	_setGreen	;wreg free
   803                           
   804                           ;app.c: 146:         setRed(redValue);
   805  0002CC  C00D  F017         	movff	appHandler@redValue,setRed@value
   806  0002D0  C00E  F018         	movff	appHandler@redValue+1,setRed@value+1
   807  0002D4  EC9F  F001         	call	_setRed	;wreg free
   808                           
   809                           ;app.c: 147:         setBlue(blueValue);
   810  0002D8  C00B  F015         	movff	appHandler@blueValue,setBlue@value
   811  0002DC  C00C  F016         	movff	appHandler@blueValue+1,setBlue@value+1
   812  0002E0  ECE7  F001         	call	_setBlue	;wreg free
   813  0002E4                     l389:
   814  0002E4  0012               	return		;funcret
   815  0002E6                     __end_of_appHandler:
   816                           	callstack 0
   817                           
   818 ;; *************** function _setRed *****************
   819 ;; Defined at:
   820 ;;		line 154 in file "app.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;  value           2    6[COMRAM] unsigned short 
   823 ;; Auto vars:     Size  Location     Type
   824 ;;		None
   825 ;; Return value:  Size  Location     Type
   826 ;;                  1    wreg      void 
   827 ;; Registers used:
   828 ;;		wreg, status,2, status,0, cstack
   829 ;; Tracked objects:
   830 ;;		On entry : 0/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   834 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   836 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   837 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   838 ;;Total ram usage:        4 bytes
   839 ;; Hardware stack levels used: 1
   840 ;; Hardware stack levels required when called: 5
   841 ;; This function calls:
   842 ;;		_PWM3_LoadDutyValue
   843 ;; This function is called by:
   844 ;;		_appHandler
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           	psect	text3
   849  00033E                     __ptext3:
   850                           	callstack 0
   851  00033E                     _setRed:
   852                           	callstack 24
   853  00033E                     
   854                           ;app.c: 155:     if(value > 255){
   855  00033E  0418               	decf	(setRed@value+1)^0,w,c
   856  000340  A0D8               	btfss	status,0,c
   857  000342  EFA5  F001         	goto	u321
   858  000346  EFA7  F001         	goto	u320
   859  00034A                     u321:
   860  00034A  EFAA  F001         	goto	l1472
   861  00034E                     u320:
   862  00034E                     
   863                           ;app.c: 156:         value = 255;
   864  00034E  0E00               	movlw	0
   865  000350  6E18               	movwf	(setRed@value+1)^0,c
   866  000352  6817               	setf	setRed@value^0,c
   867  000354                     l1472:
   868                           
   869                           ;app.c: 160:     value = (255 - value) * 4;
   870  000354  0EFF               	movlw	255
   871  000356  6E19               	movwf	??_setRed^0,c
   872  000358  0E00               	movlw	0
   873  00035A  6E1A               	movwf	(??_setRed+1)^0,c
   874  00035C  5017               	movf	setRed@value^0,w,c
   875  00035E  5E19               	subwf	??_setRed^0,f,c
   876  000360  5018               	movf	(setRed@value+1)^0,w,c
   877  000362  5A1A               	subwfb	(??_setRed+1)^0,f,c
   878  000364  90D8               	bcf	status,0,c
   879  000366  3619               	rlcf	??_setRed^0,f,c
   880  000368  361A               	rlcf	(??_setRed+1)^0,f,c
   881  00036A  90D8               	bcf	status,0,c
   882  00036C  3619               	rlcf	??_setRed^0,f,c
   883  00036E  361A               	rlcf	(??_setRed+1)^0,f,c
   884  000370  C019  F017         	movff	??_setRed,setRed@value
   885  000374  C01A  F018         	movff	??_setRed+1,setRed@value+1
   886  000378                     
   887                           ;app.c: 161:     PWM3_LoadDutyValue(value);
   888  000378  C017  F013         	movff	setRed@value,PWM3_LoadDutyValue@dutyValue
   889  00037C  C018  F014         	movff	setRed@value+1,PWM3_LoadDutyValue@dutyValue+1
   890  000380  EC28  F002         	call	_PWM3_LoadDutyValue	;wreg free
   891  000384  0012               	return		;funcret
   892  000386                     __end_of_setRed:
   893                           	callstack 0
   894                           
   895 ;; *************** function _PWM3_LoadDutyValue *****************
   896 ;; Defined at:
   897 ;;		line 74 in file "mcc_generated_files/pwm3.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;  dutyValue       2    2[COMRAM] unsigned short 
   900 ;; Auto vars:     Size  Location     Type
   901 ;;		None
   902 ;; Return value:  Size  Location     Type
   903 ;;                  1    wreg      void 
   904 ;; Registers used:
   905 ;;		wreg, status,2, status,0
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   911 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   913 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   914 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   915 ;;Total ram usage:        4 bytes
   916 ;; Hardware stack levels used: 1
   917 ;; Hardware stack levels required when called: 4
   918 ;; This function calls:
   919 ;;		Nothing
   920 ;; This function is called by:
   921 ;;		_appInit
   922 ;;		_setRed
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           	psect	text4
   927  000450                     __ptext4:
   928                           	callstack 0
   929  000450                     _PWM3_LoadDutyValue:
   930                           	callstack 25
   931  000450                     
   932                           ;mcc_generated_files/pwm3.c: 74:  void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm3.c: 75:  {;mcc_generated_files/pwm3.c: 77:      PWM3DCH = (dutyValue & 0x0
      +                          3FC)>>2;
   933  000450  C013  F015         	movff	PWM3_LoadDutyValue@dutyValue,??_PWM3_LoadDutyValue
   934  000454  C014  F016         	movff	PWM3_LoadDutyValue@dutyValue+1,??_PWM3_LoadDutyValue+1
   935  000458  90D8               	bcf	status,0,c
   936  00045A  3216               	rrcf	(??_PWM3_LoadDutyValue+1)^0,f,c
   937  00045C  3215               	rrcf	??_PWM3_LoadDutyValue^0,f,c
   938  00045E  90D8               	bcf	status,0,c
   939  000460  3216               	rrcf	(??_PWM3_LoadDutyValue+1)^0,f,c
   940  000462  3215               	rrcf	??_PWM3_LoadDutyValue^0,f,c
   941  000464  5015               	movf	??_PWM3_LoadDutyValue^0,w,c
   942  000466  6EA3               	movwf	163,c	;volatile
   943                           
   944                           ;mcc_generated_files/pwm3.c: 80:      PWM3DCL = (dutyValue & 0x0003)<<6;
   945  000468  C013  F015         	movff	PWM3_LoadDutyValue@dutyValue,??_PWM3_LoadDutyValue
   946  00046C  0E03               	movlw	3
   947  00046E  1615               	andwf	??_PWM3_LoadDutyValue^0,f,c
   948  000470  0E06               	movlw	6
   949  000472  6E16               	movwf	(??_PWM3_LoadDutyValue+1)^0,c
   950  000474                     u295:
   951  000474  90D8               	bcf	status,0,c
   952  000476  3615               	rlcf	??_PWM3_LoadDutyValue^0,f,c
   953  000478  2E16               	decfsz	(??_PWM3_LoadDutyValue+1)^0,f,c
   954  00047A  EF3A  F002         	goto	u295
   955  00047E  5015               	movf	??_PWM3_LoadDutyValue^0,w,c
   956  000480  6EA2               	movwf	162,c	;volatile
   957  000482  0012               	return		;funcret
   958  000484                     __end_of_PWM3_LoadDutyValue:
   959                           	callstack 0
   960                           
   961 ;; *************** function _setGreen *****************
   962 ;; Defined at:
   963 ;;		line 163 in file "app.c"
   964 ;; Parameters:    Size  Location     Type
   965 ;;  value           2    6[COMRAM] unsigned short 
   966 ;; Auto vars:     Size  Location     Type
   967 ;;		None
   968 ;; Return value:  Size  Location     Type
   969 ;;                  1    wreg      void 
   970 ;; Registers used:
   971 ;;		wreg, status,2, status,0, cstack
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   977 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   979 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   980 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   981 ;;Total ram usage:        4 bytes
   982 ;; Hardware stack levels used: 1
   983 ;; Hardware stack levels required when called: 5
   984 ;; This function calls:
   985 ;;		_PWM4_LoadDutyValue
   986 ;; This function is called by:
   987 ;;		_appHandler
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           	psect	text5
   992  000386                     __ptext5:
   993                           	callstack 0
   994  000386                     _setGreen:
   995                           	callstack 24
   996  000386                     
   997                           ;app.c: 164:     if(value > 255){
   998  000386  0418               	decf	(setGreen@value+1)^0,w,c
   999  000388  A0D8               	btfss	status,0,c
  1000  00038A  EFC9  F001         	goto	u311
  1001  00038E  EFCB  F001         	goto	u310
  1002  000392                     u311:
  1003  000392  EFCE  F001         	goto	l1462
  1004  000396                     u310:
  1005  000396                     
  1006                           ;app.c: 165:         value = 255;
  1007  000396  0E00               	movlw	0
  1008  000398  6E18               	movwf	(setGreen@value+1)^0,c
  1009  00039A  6817               	setf	setGreen@value^0,c
  1010  00039C                     l1462:
  1011                           
  1012                           ;app.c: 169:     value = (255 - value) * 4;
  1013  00039C  0EFF               	movlw	255
  1014  00039E  6E19               	movwf	??_setGreen^0,c
  1015  0003A0  0E00               	movlw	0
  1016  0003A2  6E1A               	movwf	(??_setGreen+1)^0,c
  1017  0003A4  5017               	movf	setGreen@value^0,w,c
  1018  0003A6  5E19               	subwf	??_setGreen^0,f,c
  1019  0003A8  5018               	movf	(setGreen@value+1)^0,w,c
  1020  0003AA  5A1A               	subwfb	(??_setGreen+1)^0,f,c
  1021  0003AC  90D8               	bcf	status,0,c
  1022  0003AE  3619               	rlcf	??_setGreen^0,f,c
  1023  0003B0  361A               	rlcf	(??_setGreen+1)^0,f,c
  1024  0003B2  90D8               	bcf	status,0,c
  1025  0003B4  3619               	rlcf	??_setGreen^0,f,c
  1026  0003B6  361A               	rlcf	(??_setGreen+1)^0,f,c
  1027  0003B8  C019  F017         	movff	??_setGreen,setGreen@value
  1028  0003BC  C01A  F018         	movff	??_setGreen+1,setGreen@value+1
  1029  0003C0                     
  1030                           ;app.c: 170:     PWM4_LoadDutyValue(value);
  1031  0003C0  C017  F013         	movff	setGreen@value,PWM4_LoadDutyValue@dutyValue
  1032  0003C4  C018  F014         	movff	setGreen@value+1,PWM4_LoadDutyValue@dutyValue+1
  1033  0003C8  EC42  F002         	call	_PWM4_LoadDutyValue	;wreg free
  1034  0003CC  0012               	return		;funcret
  1035  0003CE                     __end_of_setGreen:
  1036                           	callstack 0
  1037                           
  1038 ;; *************** function _PWM4_LoadDutyValue *****************
  1039 ;; Defined at:
  1040 ;;		line 74 in file "mcc_generated_files/pwm4.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;  dutyValue       2    2[COMRAM] unsigned short 
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;		None
  1045 ;; Return value:  Size  Location     Type
  1046 ;;                  1    wreg      void 
  1047 ;; Registers used:
  1048 ;;		wreg, status,2, status,0
  1049 ;; Tracked objects:
  1050 ;;		On entry : 0/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1054 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1056 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1057 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1058 ;;Total ram usage:        4 bytes
  1059 ;; Hardware stack levels used: 1
  1060 ;; Hardware stack levels required when called: 4
  1061 ;; This function calls:
  1062 ;;		Nothing
  1063 ;; This function is called by:
  1064 ;;		_appInit
  1065 ;;		_setGreen
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           	psect	text6
  1070  000484                     __ptext6:
  1071                           	callstack 0
  1072  000484                     _PWM4_LoadDutyValue:
  1073                           	callstack 25
  1074  000484                     
  1075                           ;mcc_generated_files/pwm4.c: 74:  void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm4.c: 75:  {;mcc_generated_files/pwm4.c: 77:      PWM4DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  1076  000484  C013  F015         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
  1077  000488  C014  F016         	movff	PWM4_LoadDutyValue@dutyValue+1,??_PWM4_LoadDutyValue+1
  1078  00048C  90D8               	bcf	status,0,c
  1079  00048E  3216               	rrcf	(??_PWM4_LoadDutyValue+1)^0,f,c
  1080  000490  3215               	rrcf	??_PWM4_LoadDutyValue^0,f,c
  1081  000492  90D8               	bcf	status,0,c
  1082  000494  3216               	rrcf	(??_PWM4_LoadDutyValue+1)^0,f,c
  1083  000496  3215               	rrcf	??_PWM4_LoadDutyValue^0,f,c
  1084  000498  5015               	movf	??_PWM4_LoadDutyValue^0,w,c
  1085  00049A  6EA0               	movwf	160,c	;volatile
  1086                           
  1087                           ;mcc_generated_files/pwm4.c: 80:      PWM4DCL = (dutyValue & 0x0003)<<6;
  1088  00049C  C013  F015         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
  1089  0004A0  0E03               	movlw	3
  1090  0004A2  1615               	andwf	??_PWM4_LoadDutyValue^0,f,c
  1091  0004A4  0E06               	movlw	6
  1092  0004A6  6E16               	movwf	(??_PWM4_LoadDutyValue+1)^0,c
  1093  0004A8                     u305:
  1094  0004A8  90D8               	bcf	status,0,c
  1095  0004AA  3615               	rlcf	??_PWM4_LoadDutyValue^0,f,c
  1096  0004AC  2E16               	decfsz	(??_PWM4_LoadDutyValue+1)^0,f,c
  1097  0004AE  EF54  F002         	goto	u305
  1098  0004B2  5015               	movf	??_PWM4_LoadDutyValue^0,w,c
  1099  0004B4  6E9F               	movwf	159,c	;volatile
  1100  0004B6  0012               	return		;funcret
  1101  0004B8                     __end_of_PWM4_LoadDutyValue:
  1102                           	callstack 0
  1103                           
  1104 ;; *************** function _setBlue *****************
  1105 ;; Defined at:
  1106 ;;		line 172 in file "app.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;  value           2    4[COMRAM] unsigned short 
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;		None
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  1    wreg      void 
  1113 ;; Registers used:
  1114 ;;		wreg, status,2, status,0, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1120 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1122 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1123 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1124 ;;Total ram usage:        4 bytes
  1125 ;; Hardware stack levels used: 1
  1126 ;; Hardware stack levels required when called: 5
  1127 ;; This function calls:
  1128 ;;		_PWM1_LoadDutyValue
  1129 ;; This function is called by:
  1130 ;;		_appHandler
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           	psect	text7
  1135  0003CE                     __ptext7:
  1136                           	callstack 0
  1137  0003CE                     _setBlue:
  1138                           	callstack 24
  1139  0003CE                     
  1140                           ;app.c: 173:     if(value > 255){
  1141  0003CE  0416               	decf	(setBlue@value+1)^0,w,c
  1142  0003D0  A0D8               	btfss	status,0,c
  1143  0003D2  EFED  F001         	goto	u331
  1144  0003D6  EFEF  F001         	goto	u330
  1145  0003DA                     u331:
  1146  0003DA  EFF2  F001         	goto	l1482
  1147  0003DE                     u330:
  1148  0003DE                     
  1149                           ;app.c: 174:         value = 255;
  1150  0003DE  0E00               	movlw	0
  1151  0003E0  6E16               	movwf	(setBlue@value+1)^0,c
  1152  0003E2  6815               	setf	setBlue@value^0,c
  1153  0003E4                     l1482:
  1154                           
  1155                           ;app.c: 178:     value = (255 - value) * 4;
  1156  0003E4  0EFF               	movlw	255
  1157  0003E6  6E17               	movwf	??_setBlue^0,c
  1158  0003E8  0E00               	movlw	0
  1159  0003EA  6E18               	movwf	(??_setBlue+1)^0,c
  1160  0003EC  5015               	movf	setBlue@value^0,w,c
  1161  0003EE  5E17               	subwf	??_setBlue^0,f,c
  1162  0003F0  5016               	movf	(setBlue@value+1)^0,w,c
  1163  0003F2  5A18               	subwfb	(??_setBlue+1)^0,f,c
  1164  0003F4  90D8               	bcf	status,0,c
  1165  0003F6  3617               	rlcf	??_setBlue^0,f,c
  1166  0003F8  3618               	rlcf	(??_setBlue+1)^0,f,c
  1167  0003FA  90D8               	bcf	status,0,c
  1168  0003FC  3617               	rlcf	??_setBlue^0,f,c
  1169  0003FE  3618               	rlcf	(??_setBlue+1)^0,f,c
  1170  000400  C017  F015         	movff	??_setBlue,setBlue@value
  1171  000404  C018  F016         	movff	??_setBlue+1,setBlue@value+1
  1172  000408                     
  1173                           ;app.c: 179:     PWM1_LoadDutyValue(value);
  1174  000408  C015  F013         	movff	setBlue@value,PWM1_LoadDutyValue@dutyValue
  1175  00040C  C016  F014         	movff	setBlue@value+1,PWM1_LoadDutyValue@dutyValue+1
  1176  000410  EC75  F002         	call	_PWM1_LoadDutyValue	;wreg free
  1177  000414  0012               	return		;funcret
  1178  000416                     __end_of_setBlue:
  1179                           	callstack 0
  1180                           
  1181 ;; *************** function _PWM1_LoadDutyValue *****************
  1182 ;; Defined at:
  1183 ;;		line 82 in file "mcc_generated_files/pwm1.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;  dutyValue       2    2[COMRAM] unsigned short 
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;		None
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  1    wreg      void 
  1190 ;; Registers used:
  1191 ;;		wreg, status,2, status,0
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1197 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1200 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1201 ;;Total ram usage:        2 bytes
  1202 ;; Hardware stack levels used: 1
  1203 ;; Hardware stack levels required when called: 4
  1204 ;; This function calls:
  1205 ;;		Nothing
  1206 ;; This function is called by:
  1207 ;;		_appInit
  1208 ;;		_setBlue
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           	psect	text8
  1213  0004EA                     __ptext8:
  1214                           	callstack 0
  1215  0004EA                     _PWM1_LoadDutyValue:
  1216                           	callstack 25
  1217  0004EA                     
  1218                           ;mcc_generated_files/pwm1.c: 82: void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm1.c: 83: {;mcc_generated_files/pwm1.c: 84:     dutyValue &= 0x03FF;
  1219  0004EA  0EFF               	movlw	255
  1220  0004EC  1613               	andwf	PWM1_LoadDutyValue@dutyValue^0,f,c
  1221  0004EE  0E03               	movlw	3
  1222  0004F0  1614               	andwf	(PWM1_LoadDutyValue@dutyValue+1)^0,f,c
  1223  0004F2                     
  1224                           ;mcc_generated_files/pwm1.c: 87:     if(CCP1CONbits.FMT)
  1225  0004F2  A8AB               	btfss	171,4,c	;volatile
  1226  0004F4  EF7E  F002         	goto	u271
  1227  0004F8  EF80  F002         	goto	u270
  1228  0004FC                     u271:
  1229  0004FC  EF87  F002         	goto	l1418
  1230  000500                     u270:
  1231  000500                     
  1232                           ;mcc_generated_files/pwm1.c: 88:     {;mcc_generated_files/pwm1.c: 89:         dutyValue
      +                           <<= 6;
  1233  000500  0E06               	movlw	6
  1234  000502                     u285:
  1235  000502  90D8               	bcf	status,0,c
  1236  000504  3613               	rlcf	PWM1_LoadDutyValue@dutyValue^0,f,c
  1237  000506  3614               	rlcf	(PWM1_LoadDutyValue@dutyValue+1)^0,f,c
  1238  000508  2EE8               	decfsz	wreg,f,c
  1239  00050A  EF81  F002         	goto	u285
  1240  00050E                     l1418:
  1241                           
  1242                           ;mcc_generated_files/pwm1.c: 90:         CCPR1H = dutyValue >> 8;
  1243  00050E  5014               	movf	(PWM1_LoadDutyValue@dutyValue+1)^0,w,c
  1244  000510  6EAA               	movwf	170,c	;volatile
  1245  000512                     
  1246                           ;mcc_generated_files/pwm1.c: 91:         CCPR1L = dutyValue;
  1247  000512  C013  FFA9         	movff	PWM1_LoadDutyValue@dutyValue,4009	;volatile
  1248  000516  0012               	return		;funcret
  1249  000518                     __end_of_PWM1_LoadDutyValue:
  1250                           	callstack 0
  1251                           
  1252 ;; *************** function _TMR4_StartTimer *****************
  1253 ;; Defined at:
  1254 ;;		line 114 in file "mcc_generated_files/tmr4.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;		None
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;		None
  1259 ;; Return value:  Size  Location     Type
  1260 ;;                  1    wreg      void 
  1261 ;; Registers used:
  1262 ;;		cstack
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1272 ;;Total ram usage:        0 bytes
  1273 ;; Hardware stack levels used: 1
  1274 ;; Hardware stack levels required when called: 5
  1275 ;; This function calls:
  1276 ;;		_TMR4_Start
  1277 ;; This function is called by:
  1278 ;;		_main
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282                           	psect	text9
  1283  0006A4                     __ptext9:
  1284                           	callstack 0
  1285  0006A4                     _TMR4_StartTimer:
  1286                           	callstack 25
  1287  0006A4                     
  1288                           ;mcc_generated_files/tmr4.c: 116:     TMR4_Start();
  1289  0006A4  EC55  F003         	call	_TMR4_Start	;wreg free
  1290  0006A8  0012               	return		;funcret
  1291  0006AA                     __end_of_TMR4_StartTimer:
  1292                           	callstack 0
  1293                           
  1294 ;; *************** function _TMR4_Start *****************
  1295 ;; Defined at:
  1296 ;;		line 108 in file "mcc_generated_files/tmr4.c"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;		None
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;		None
  1301 ;; Return value:  Size  Location     Type
  1302 ;;                  1    wreg      void 
  1303 ;; Registers used:
  1304 ;;		None
  1305 ;; Tracked objects:
  1306 ;;		On entry : 0/0
  1307 ;;		On exit  : 0/0
  1308 ;;		Unchanged: 0/0
  1309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1314 ;;Total ram usage:        0 bytes
  1315 ;; Hardware stack levels used: 1
  1316 ;; Hardware stack levels required when called: 4
  1317 ;; This function calls:
  1318 ;;		Nothing
  1319 ;; This function is called by:
  1320 ;;		_TMR4_StartTimer
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           	psect	text10
  1325  0006AA                     __ptext10:
  1326                           	callstack 0
  1327  0006AA                     _TMR4_Start:
  1328                           	callstack 25
  1329  0006AA                     
  1330                           ;mcc_generated_files/tmr4.c: 111:     T4CONbits.TMR4ON = 1;
  1331  0006AA  8EB6               	bsf	182,7,c	;volatile
  1332  0006AC  0012               	return		;funcret
  1333  0006AE                     __end_of_TMR4_Start:
  1334                           	callstack 0
  1335                           
  1336 ;; *************** function _SYSTEM_Initialize *****************
  1337 ;; Defined at:
  1338 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;		None
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;		None
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  1    wreg      void 
  1345 ;; Registers used:
  1346 ;;		wreg, status,2, status,0, cstack
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1356 ;;Total ram usage:        0 bytes
  1357 ;; Hardware stack levels used: 1
  1358 ;; Hardware stack levels required when called: 6
  1359 ;; This function calls:
  1360 ;;		_INTERRUPT_Initialize
  1361 ;;		_OSCILLATOR_Initialize
  1362 ;;		_PIN_MANAGER_Initialize
  1363 ;;		_PMD_Initialize
  1364 ;;		_PWM1_Initialize
  1365 ;;		_PWM3_Initialize
  1366 ;;		_PWM4_Initialize
  1367 ;;		_TMR0_Initialize
  1368 ;;		_TMR4_Initialize
  1369 ;; This function is called by:
  1370 ;;		_main
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           	psect	text11
  1375  00059C                     __ptext11:
  1376                           	callstack 0
  1377  00059C                     _SYSTEM_Initialize:
  1378                           	callstack 24
  1379  00059C                     
  1380                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  1381  00059C  EC57  F003         	call	_INTERRUPT_Initialize	;wreg free
  1382  0005A0                     
  1383                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  1384  0005A0  ECEF  F002         	call	_PMD_Initialize	;wreg free
  1385  0005A4                     
  1386                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1387  0005A4  EC73  F001         	call	_PIN_MANAGER_Initialize	;wreg free
  1388  0005A8                     
  1389                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1390  0005A8  EC0A  F003         	call	_OSCILLATOR_Initialize	;wreg free
  1391  0005AC                     
  1392                           ;mcc_generated_files/mcc.c: 56:     PWM1_Initialize();
  1393  0005AC  EC35  F003         	call	_PWM1_Initialize	;wreg free
  1394  0005B0                     
  1395                           ;mcc_generated_files/mcc.c: 57:     PWM4_Initialize();
  1396  0005B0  EC21  F003         	call	_PWM4_Initialize	;wreg free
  1397  0005B4                     
  1398                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  1399  0005B4  ECB9  F002         	call	_TMR4_Initialize	;wreg free
  1400  0005B8                     
  1401                           ;mcc_generated_files/mcc.c: 59:     PWM3_Initialize();
  1402  0005B8  EC2B  F003         	call	_PWM3_Initialize	;wreg free
  1403  0005BC                     
  1404                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  1405  0005BC  EC0B  F002         	call	_TMR0_Initialize	;wreg free
  1406  0005C0  0012               	return		;funcret
  1407  0005C2                     __end_of_SYSTEM_Initialize:
  1408                           	callstack 0
  1409                           
  1410 ;; *************** function _TMR4_Initialize *****************
  1411 ;; Defined at:
  1412 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;		None
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;		None
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1    wreg      void 
  1419 ;; Registers used:
  1420 ;;		wreg, status,2, status,0, cstack
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1430 ;;Total ram usage:        0 bytes
  1431 ;; Hardware stack levels used: 1
  1432 ;; Hardware stack levels required when called: 5
  1433 ;; This function calls:
  1434 ;;		_TMR4_SetInterruptHandler
  1435 ;; This function is called by:
  1436 ;;		_SYSTEM_Initialize
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           	psect	text12
  1441  000572                     __ptext12:
  1442                           	callstack 0
  1443  000572                     _TMR4_Initialize:
  1444                           	callstack 24
  1445  000572                     
  1446                           ;mcc_generated_files/tmr4.c: 69:     T4CLKCON = 0x01;
  1447  000572  0E01               	movlw	1
  1448  000574  6EB8               	movwf	184,c	;volatile
  1449                           
  1450                           ;mcc_generated_files/tmr4.c: 72:     T4HLT = 0x20;
  1451  000576  0E20               	movlw	32
  1452  000578  6EB7               	movwf	183,c	;volatile
  1453                           
  1454                           ;mcc_generated_files/tmr4.c: 75:     T4RST = 0x00;
  1455  00057A  0E00               	movlw	0
  1456  00057C  6EB9               	movwf	185,c	;volatile
  1457  00057E                     
  1458                           ;mcc_generated_files/tmr4.c: 78:     T4PR = 0xFF;
  1459  00057E  68B5               	setf	181,c	;volatile
  1460                           
  1461                           ;mcc_generated_files/tmr4.c: 81:     T4TMR = 0x00;
  1462  000580  0E00               	movlw	0
  1463  000582  6EB4               	movwf	180,c	;volatile
  1464  000584                     
  1465                           ;mcc_generated_files/tmr4.c: 84:     PIR4bits.TMR4IF = 0;
  1466  000584  010E               	movlb	14	; () banked
  1467  000586  97C9               	bcf	201,3,b	;volatile
  1468  000588                     
  1469                           ; BSR set to: 14
  1470                           ;mcc_generated_files/tmr4.c: 87:     PIE4bits.TMR4IE = 1;
  1471  000588  87C1               	bsf	193,3,b	;volatile
  1472  00058A                     
  1473                           ; BSR set to: 14
  1474                           ;mcc_generated_files/tmr4.c: 90:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  1475  00058A  0EB2               	movlw	low _TMR4_DefaultInterruptHandler
  1476  00058C  6E13               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1477  00058E  0E06               	movlw	high _TMR4_DefaultInterruptHandler
  1478  000590  6E14               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1479  000592  EC48  F003         	call	_TMR4_SetInterruptHandler	;wreg free
  1480  000596                     
  1481                           ;mcc_generated_files/tmr4.c: 93:     T4CON = 0xF0;
  1482  000596  0EF0               	movlw	240
  1483  000598  6EB6               	movwf	182,c	;volatile
  1484  00059A  0012               	return		;funcret
  1485  00059C                     __end_of_TMR4_Initialize:
  1486                           	callstack 0
  1487                           
  1488 ;; *************** function _TMR4_SetInterruptHandler *****************
  1489 ;; Defined at:
  1490 ;;		line 178 in file "mcc_generated_files/tmr4.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  1493 ;;		 -> TMR4_DefaultInterruptHandler(1), 
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;		None
  1496 ;; Return value:  Size  Location     Type
  1497 ;;                  1    wreg      void 
  1498 ;; Registers used:
  1499 ;;		wreg, status,2, status,0
  1500 ;; Tracked objects:
  1501 ;;		On entry : 0/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1505 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1508 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1509 ;;Total ram usage:        2 bytes
  1510 ;; Hardware stack levels used: 1
  1511 ;; Hardware stack levels required when called: 4
  1512 ;; This function calls:
  1513 ;;		Nothing
  1514 ;; This function is called by:
  1515 ;;		_TMR4_Initialize
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           	psect	text13
  1520  000690                     __ptext13:
  1521                           	callstack 0
  1522  000690                     _TMR4_SetInterruptHandler:
  1523                           	callstack 24
  1524  000690                     
  1525                           ;mcc_generated_files/tmr4.c: 179:     TMR4_InterruptHandler = InterruptHandler;
  1526  000690  C013  F01D         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
  1527  000694  C014  F01E         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
  1528  000698  0012               	return		;funcret
  1529  00069A                     __end_of_TMR4_SetInterruptHandler:
  1530                           	callstack 0
  1531                           
  1532 ;; *************** function _TMR0_Initialize *****************
  1533 ;; Defined at:
  1534 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;		None
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;		None
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  1    wreg      void 
  1541 ;; Registers used:
  1542 ;;		wreg, status,2, status,0, cstack
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1550 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1551 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1552 ;;Total ram usage:        2 bytes
  1553 ;; Hardware stack levels used: 1
  1554 ;; Hardware stack levels required when called: 5
  1555 ;; This function calls:
  1556 ;;		_TMR0_SetInterruptHandler
  1557 ;; This function is called by:
  1558 ;;		_SYSTEM_Initialize
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           	psect	text14
  1563  000416                     __ptext14:
  1564                           	callstack 0
  1565  000416                     _TMR0_Initialize:
  1566                           	callstack 24
  1567  000416                     
  1568                           ;mcc_generated_files/tmr0.c: 71:     T0CON1 = 0x40;
  1569  000416  0E40               	movlw	64
  1570  000418  6ED5               	movwf	213,c	;volatile
  1571                           
  1572                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0xC1;
  1573  00041A  0EC1               	movlw	193
  1574  00041C  6ED3               	movwf	211,c	;volatile
  1575                           
  1576                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0x80;
  1577  00041E  0E80               	movlw	128
  1578  000420  6ED2               	movwf	210,c	;volatile
  1579  000422                     
  1580                           ;mcc_generated_files/tmr0.c: 80:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  1581  000422  50D2               	movf	210,w,c	;volatile
  1582  000424  CFD3 F015          	movff	4051,??_TMR0_Initialize	;volatile
  1583  000428  6A16               	clrf	(??_TMR0_Initialize+1)^0,c
  1584  00042A  C015  F016         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  1585  00042E  6A15               	clrf	??_TMR0_Initialize^0,c
  1586  000430  1015               	iorwf	??_TMR0_Initialize^0,w,c
  1587  000432  6E21               	movwf	_timer0ReloadVal16bit^0,c	;volatile
  1588  000434  5016               	movf	(??_TMR0_Initialize+1)^0,w,c
  1589  000436  6E22               	movwf	(_timer0ReloadVal16bit+1)^0,c	;volatile
  1590  000438                     
  1591                           ;mcc_generated_files/tmr0.c: 83:     PIR0bits.TMR0IF = 0;
  1592  000438  010E               	movlb	14	; () banked
  1593  00043A  9BC5               	bcf	197,5,b	;volatile
  1594  00043C                     
  1595                           ; BSR set to: 14
  1596                           ;mcc_generated_files/tmr0.c: 86:     PIE0bits.TMR0IE = 1;
  1597  00043C  8BBD               	bsf	189,5,b	;volatile
  1598  00043E                     
  1599                           ; BSR set to: 14
  1600                           ;mcc_generated_files/tmr0.c: 89:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  1601  00043E  0EB4               	movlw	low _TMR0_DefaultInterruptHandler
  1602  000440  6E13               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1603  000442  0E06               	movlw	high _TMR0_DefaultInterruptHandler
  1604  000444  6E14               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1605  000446  EC4D  F003         	call	_TMR0_SetInterruptHandler	;wreg free
  1606  00044A                     
  1607                           ;mcc_generated_files/tmr0.c: 92:     T0CON0 = 0x90;
  1608  00044A  0E90               	movlw	144
  1609  00044C  6ED4               	movwf	212,c	;volatile
  1610  00044E  0012               	return		;funcret
  1611  000450                     __end_of_TMR0_Initialize:
  1612                           	callstack 0
  1613                           
  1614 ;; *************** function _TMR0_SetInterruptHandler *****************
  1615 ;; Defined at:
  1616 ;;		line 159 in file "mcc_generated_files/tmr0.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  1619 ;;		 -> msTick(1), TMR0_DefaultInterruptHandler(1), 
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;		None
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  1    wreg      void 
  1624 ;; Registers used:
  1625 ;;		wreg, status,2, status,0
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1631 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1634 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1635 ;;Total ram usage:        2 bytes
  1636 ;; Hardware stack levels used: 1
  1637 ;; Hardware stack levels required when called: 4
  1638 ;; This function calls:
  1639 ;;		Nothing
  1640 ;; This function is called by:
  1641 ;;		_TMR0_Initialize
  1642 ;;		_appInit
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           	psect	text15
  1647  00069A                     __ptext15:
  1648                           	callstack 0
  1649  00069A                     _TMR0_SetInterruptHandler:
  1650                           	callstack 25
  1651  00069A                     
  1652                           ;mcc_generated_files/tmr0.c: 160:     TMR0_InterruptHandler = InterruptHandler;
  1653  00069A  C013  F01F         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1654  00069E  C014  F020         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1655  0006A2  0012               	return		;funcret
  1656  0006A4                     __end_of_TMR0_SetInterruptHandler:
  1657                           	callstack 0
  1658                           
  1659 ;; *************** function _PWM4_Initialize *****************
  1660 ;; Defined at:
  1661 ;;		line 58 in file "mcc_generated_files/pwm4.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;		None
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;		None
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  1    wreg      void 
  1668 ;; Registers used:
  1669 ;;		wreg, status,2
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1679 ;;Total ram usage:        0 bytes
  1680 ;; Hardware stack levels used: 1
  1681 ;; Hardware stack levels required when called: 4
  1682 ;; This function calls:
  1683 ;;		Nothing
  1684 ;; This function is called by:
  1685 ;;		_SYSTEM_Initialize
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           	psect	text16
  1690  000642                     __ptext16:
  1691                           	callstack 0
  1692  000642                     _PWM4_Initialize:
  1693                           	callstack 25
  1694  000642                     
  1695                           ;mcc_generated_files/pwm4.c: 62:     PWM4CON = 0x80;
  1696  000642  0E80               	movlw	128
  1697  000644  6EA1               	movwf	161,c	;volatile
  1698  000646                     
  1699                           ;mcc_generated_files/pwm4.c: 65:     PWM4DCH = 0xFF;
  1700  000646  68A0               	setf	160,c	;volatile
  1701                           
  1702                           ;mcc_generated_files/pwm4.c: 68:     PWM4DCL = 0xC0;
  1703  000648  0EC0               	movlw	192
  1704  00064A  6E9F               	movwf	159,c	;volatile
  1705                           
  1706                           ;mcc_generated_files/pwm4.c: 71:     CCPTMRSbits.P4TSEL = 2;
  1707  00064C  50AD               	movf	173,w,c	;volatile
  1708  00064E  0B3F               	andlw	-193
  1709  000650  0980               	iorlw	128
  1710  000652  6EAD               	movwf	173,c	;volatile
  1711  000654  0012               	return		;funcret
  1712  000656                     __end_of_PWM4_Initialize:
  1713                           	callstack 0
  1714                           
  1715 ;; *************** function _PWM3_Initialize *****************
  1716 ;; Defined at:
  1717 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;		None
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;		None
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  1    wreg      void 
  1724 ;; Registers used:
  1725 ;;		wreg, status,2
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1735 ;;Total ram usage:        0 bytes
  1736 ;; Hardware stack levels used: 1
  1737 ;; Hardware stack levels required when called: 4
  1738 ;; This function calls:
  1739 ;;		Nothing
  1740 ;; This function is called by:
  1741 ;;		_SYSTEM_Initialize
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           	psect	text17
  1746  000656                     __ptext17:
  1747                           	callstack 0
  1748  000656                     _PWM3_Initialize:
  1749                           	callstack 25
  1750  000656                     
  1751                           ;mcc_generated_files/pwm3.c: 62:     PWM3CON = 0x80;
  1752  000656  0E80               	movlw	128
  1753  000658  6EA4               	movwf	164,c	;volatile
  1754  00065A                     
  1755                           ;mcc_generated_files/pwm3.c: 65:     PWM3DCH = 0xFF;
  1756  00065A  68A3               	setf	163,c	;volatile
  1757                           
  1758                           ;mcc_generated_files/pwm3.c: 68:     PWM3DCL = 0xC0;
  1759  00065C  0EC0               	movlw	192
  1760  00065E  6EA2               	movwf	162,c	;volatile
  1761                           
  1762                           ;mcc_generated_files/pwm3.c: 71:     CCPTMRSbits.P3TSEL = 2;
  1763  000660  50AD               	movf	173,w,c	;volatile
  1764  000662  0BCF               	andlw	-49
  1765  000664  0920               	iorlw	32
  1766  000666  6EAD               	movwf	173,c	;volatile
  1767  000668  0012               	return		;funcret
  1768  00066A                     __end_of_PWM3_Initialize:
  1769                           	callstack 0
  1770                           
  1771 ;; *************** function _PWM1_Initialize *****************
  1772 ;; Defined at:
  1773 ;;		line 64 in file "mcc_generated_files/pwm1.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;		None
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;		None
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  1    wreg      void 
  1780 ;; Registers used:
  1781 ;;		wreg, status,2
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1791 ;;Total ram usage:        0 bytes
  1792 ;; Hardware stack levels used: 1
  1793 ;; Hardware stack levels required when called: 4
  1794 ;; This function calls:
  1795 ;;		Nothing
  1796 ;; This function is called by:
  1797 ;;		_SYSTEM_Initialize
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           	psect	text18
  1802  00066A                     __ptext18:
  1803                           	callstack 0
  1804  00066A                     _PWM1_Initialize:
  1805                           	callstack 25
  1806  00066A                     
  1807                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8C;
  1808  00066A  0E8C               	movlw	140
  1809  00066C  6EAB               	movwf	171,c	;volatile
  1810                           
  1811                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x03;
  1812  00066E  0E03               	movlw	3
  1813  000670  6EAA               	movwf	170,c	;volatile
  1814  000672                     
  1815                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0xFF;
  1816  000672  68A9               	setf	169,c	;volatile
  1817                           
  1818                           ;mcc_generated_files/pwm1.c: 78:  CCPTMRSbits.C1TSEL = 0x2;
  1819  000674  50AD               	movf	173,w,c	;volatile
  1820  000676  0BFC               	andlw	-4
  1821  000678  0902               	iorlw	2
  1822  00067A  6EAD               	movwf	173,c	;volatile
  1823  00067C  0012               	return		;funcret
  1824  00067E                     __end_of_PWM1_Initialize:
  1825                           	callstack 0
  1826                           
  1827 ;; *************** function _PMD_Initialize *****************
  1828 ;; Defined at:
  1829 ;;		line 77 in file "mcc_generated_files/mcc.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;		None
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;		None
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  1    wreg      void 
  1836 ;; Registers used:
  1837 ;;		wreg, status,2
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1847 ;;Total ram usage:        0 bytes
  1848 ;; Hardware stack levels used: 1
  1849 ;; Hardware stack levels required when called: 4
  1850 ;; This function calls:
  1851 ;;		Nothing
  1852 ;; This function is called by:
  1853 ;;		_SYSTEM_Initialize
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857                           	psect	text19
  1858  0005DE                     __ptext19:
  1859                           	callstack 0
  1860  0005DE                     _PMD_Initialize:
  1861                           	callstack 25
  1862  0005DE                     
  1863                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
  1864  0005DE  0E00               	movlw	0
  1865  0005E0  010E               	movlb	14	; () banked
  1866  0005E2  6FDC               	movwf	220,b	;volatile
  1867                           
  1868                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
  1869  0005E4  0E00               	movlw	0
  1870  0005E6  6FDD               	movwf	221,b	;volatile
  1871                           
  1872                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
  1873  0005E8  0E00               	movlw	0
  1874  0005EA  6FDE               	movwf	222,b	;volatile
  1875                           
  1876                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
  1877  0005EC  0E00               	movlw	0
  1878  0005EE  6FDF               	movwf	223,b	;volatile
  1879                           
  1880                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
  1881  0005F0  0E00               	movlw	0
  1882  0005F2  6FE0               	movwf	224,b	;volatile
  1883                           
  1884                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
  1885  0005F4  0E00               	movlw	0
  1886  0005F6  6FE1               	movwf	225,b	;volatile
  1887  0005F8                     
  1888                           ; BSR set to: 14
  1889  0005F8  0012               	return		;funcret
  1890  0005FA                     __end_of_PMD_Initialize:
  1891                           	callstack 0
  1892                           
  1893 ;; *************** function _PIN_MANAGER_Initialize *****************
  1894 ;; Defined at:
  1895 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;		None
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;		None
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  1    wreg      void 
  1902 ;; Registers used:
  1903 ;;		wreg, status,2
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1913 ;;Total ram usage:        0 bytes
  1914 ;; Hardware stack levels used: 1
  1915 ;; Hardware stack levels required when called: 4
  1916 ;; This function calls:
  1917 ;;		Nothing
  1918 ;; This function is called by:
  1919 ;;		_SYSTEM_Initialize
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923                           	psect	text20
  1924  0002E6                     __ptext20:
  1925                           	callstack 0
  1926  0002E6                     _PIN_MANAGER_Initialize:
  1927                           	callstack 25
  1928  0002E6                     
  1929                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1930  0002E6  0E00               	movlw	0
  1931  0002E8  6E82               	movwf	130,c	;volatile
  1932                           
  1933                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1934  0002EA  0E00               	movlw	0
  1935  0002EC  6E83               	movwf	131,c	;volatile
  1936                           
  1937                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x02;
  1938  0002EE  0E02               	movlw	2
  1939  0002F0  6E84               	movwf	132,c	;volatile
  1940  0002F2                     
  1941                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  1942  0002F2  6887               	setf	135,c	;volatile
  1943  0002F4                     
  1944                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  1945  0002F4  6888               	setf	136,c	;volatile
  1946                           
  1947                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xD5;
  1948  0002F6  0ED5               	movlw	213
  1949  0002F8  6E89               	movwf	137,c	;volatile
  1950  0002FA                     
  1951                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
  1952  0002FA  010F               	movlb	15	; () banked
  1953  0002FC  691C               	setf	28,b	;volatile
  1954  0002FE                     
  1955                           ; BSR set to: 15
  1956                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xFF;
  1957  0002FE  6914               	setf	20,b	;volatile
  1958  000300                     
  1959                           ; BSR set to: 15
  1960                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xFF;
  1961  000300  690C               	setf	12,b	;volatile
  1962                           
  1963                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
  1964  000302  0E00               	movlw	0
  1965  000304  6F28               	movwf	40,b	;volatile
  1966                           
  1967                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
  1968  000306  0E00               	movlw	0
  1969  000308  6F13               	movwf	19,b	;volatile
  1970                           
  1971                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
  1972  00030A  0E00               	movlw	0
  1973  00030C  6F0B               	movwf	11,b	;volatile
  1974                           
  1975                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
  1976  00030E  0E00               	movlw	0
  1977  000310  6F1B               	movwf	27,b	;volatile
  1978                           
  1979                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  1980  000312  0E00               	movlw	0
  1981  000314  6F0A               	movwf	10,b	;volatile
  1982                           
  1983                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  1984  000316  0E00               	movlw	0
  1985  000318  6F12               	movwf	18,b	;volatile
  1986                           
  1987                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
  1988  00031A  0E00               	movlw	0
  1989  00031C  6F1A               	movwf	26,b	;volatile
  1990  00031E                     
  1991                           ; BSR set to: 15
  1992                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
  1993  00031E  6909               	setf	9,b	;volatile
  1994  000320                     
  1995                           ; BSR set to: 15
  1996                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
  1997  000320  6911               	setf	17,b	;volatile
  1998  000322                     
  1999                           ; BSR set to: 15
  2000                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  2001  000322  6919               	setf	25,b	;volatile
  2002  000324                     
  2003                           ; BSR set to: 15
  2004                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0xFF;
  2005  000324  6908               	setf	8,b	;volatile
  2006  000326                     
  2007                           ; BSR set to: 15
  2008                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xFF;
  2009  000326  6910               	setf	16,b	;volatile
  2010  000328                     
  2011                           ; BSR set to: 15
  2012                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
  2013  000328  6918               	setf	24,b	;volatile
  2014                           
  2015                           ;mcc_generated_files/pin_manager.c: 106:     INLVLE = 0x08;
  2016  00032A  0E08               	movlw	8
  2017  00032C  6F25               	movwf	37,b	;volatile
  2018                           
  2019                           ;mcc_generated_files/pin_manager.c: 115:     RC3PPS = 0x07;
  2020  00032E  0E07               	movlw	7
  2021  000330  010E               	movlb	14	; () banked
  2022  000332  6FF5               	movwf	245,b	;volatile
  2023                           
  2024                           ;mcc_generated_files/pin_manager.c: 116:     RC1PPS = 0x05;
  2025  000334  0E05               	movlw	5
  2026  000336  6FF3               	movwf	243,b	;volatile
  2027                           
  2028                           ;mcc_generated_files/pin_manager.c: 117:     RC5PPS = 0x08;
  2029  000338  0E08               	movlw	8
  2030  00033A  6FF7               	movwf	247,b	;volatile
  2031  00033C                     
  2032                           ; BSR set to: 14
  2033  00033C  0012               	return		;funcret
  2034  00033E                     __end_of_PIN_MANAGER_Initialize:
  2035                           	callstack 0
  2036                           
  2037 ;; *************** function _OSCILLATOR_Initialize *****************
  2038 ;; Defined at:
  2039 ;;		line 63 in file "mcc_generated_files/mcc.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;		None
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;		None
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  1    wreg      void 
  2046 ;; Registers used:
  2047 ;;		wreg, status,2
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2057 ;;Total ram usage:        0 bytes
  2058 ;; Hardware stack levels used: 1
  2059 ;; Hardware stack levels required when called: 4
  2060 ;; This function calls:
  2061 ;;		Nothing
  2062 ;; This function is called by:
  2063 ;;		_SYSTEM_Initialize
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           	psect	text21
  2068  000614                     __ptext21:
  2069                           	callstack 0
  2070  000614                     _OSCILLATOR_Initialize:
  2071                           	callstack 25
  2072  000614                     
  2073                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x60;
  2074  000614  0E60               	movlw	96
  2075  000616  010E               	movlb	14	; () banked
  2076  000618  6FD3               	movwf	211,b	;volatile
  2077                           
  2078                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
  2079  00061A  0E00               	movlw	0
  2080  00061C  6FD5               	movwf	213,b	;volatile
  2081                           
  2082                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
  2083  00061E  0E00               	movlw	0
  2084  000620  6FD7               	movwf	215,b	;volatile
  2085                           
  2086                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x08;
  2087  000622  0E08               	movlw	8
  2088  000624  6FD9               	movwf	217,b	;volatile
  2089                           
  2090                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  2091  000626  0E00               	movlw	0
  2092  000628  6FD8               	movwf	216,b	;volatile
  2093  00062A                     
  2094                           ; BSR set to: 14
  2095  00062A  0012               	return		;funcret
  2096  00062C                     __end_of_OSCILLATOR_Initialize:
  2097                           	callstack 0
  2098                           
  2099 ;; *************** function _INTERRUPT_Initialize *****************
  2100 ;; Defined at:
  2101 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;		None
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;		None
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  1    wreg      void 
  2108 ;; Registers used:
  2109 ;;		None
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2119 ;;Total ram usage:        0 bytes
  2120 ;; Hardware stack levels used: 1
  2121 ;; Hardware stack levels required when called: 4
  2122 ;; This function calls:
  2123 ;;		Nothing
  2124 ;; This function is called by:
  2125 ;;		_SYSTEM_Initialize
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           	psect	text22
  2130  0006AE                     __ptext22:
  2131                           	callstack 0
  2132  0006AE                     _INTERRUPT_Initialize:
  2133                           	callstack 25
  2134  0006AE                     
  2135                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  2136  0006AE  9AF2               	bcf	242,5,c	;volatile
  2137  0006B0  0012               	return		;funcret
  2138  0006B2                     __end_of_INTERRUPT_Initialize:
  2139                           	callstack 0
  2140                           
  2141 ;; *************** function _INTERRUPT_InterruptManager *****************
  2142 ;; Defined at:
  2143 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;		None
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;		None
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  1    wreg      void 
  2150 ;; Registers used:
  2151 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2159 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2160 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2161 ;;Total ram usage:        2 bytes
  2162 ;; Hardware stack levels used: 1
  2163 ;; Hardware stack levels required when called: 3
  2164 ;; This function calls:
  2165 ;;		_TMR0_ISR
  2166 ;;		_TMR4_ISR
  2167 ;; This function is called by:
  2168 ;;		Interrupt level 2
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           	psect	intcode
  2173  000008                     __pintcode:
  2174                           	callstack 0
  2175  000008                     _INTERRUPT_InterruptManager:
  2176                           	callstack 24
  2177                           
  2178                           ;incstack = 0
  2179  000008  8223               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2180  00000A  CFFA F011          	movff	pclath,??_INTERRUPT_InterruptManager
  2181  00000E  CFFB F012          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2182  000012                     
  2183                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
  2184  000012  010E               	movlb	14	; () banked
  2185  000014  ABBD               	btfss	189,5,b	;volatile
  2186  000016  EF0F  F000         	goto	i2u22_41
  2187  00001A  EF11  F000         	goto	i2u22_40
  2188  00001E                     i2u22_41:
  2189  00001E  EF1C  F000         	goto	i2l129
  2190  000022                     i2u22_40:
  2191  000022                     
  2192                           ; BSR set to: 14
  2193  000022  ABC5               	btfss	197,5,b	;volatile
  2194  000024  EF16  F000         	goto	i2u23_41
  2195  000028  EF18  F000         	goto	i2u23_40
  2196  00002C                     i2u23_41:
  2197  00002C  EF1C  F000         	goto	i2l129
  2198  000030                     i2u23_40:
  2199  000030                     
  2200                           ; BSR set to: 14
  2201                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  2202  000030  EC3F  F003         	call	_TMR0_ISR	;wreg free
  2203                           
  2204                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  2205  000034  EF35  F000         	goto	i2l135
  2206  000038                     i2l129:
  2207                           
  2208                           ; BSR set to: 14
  2209  000038  ACF2               	btfss	242,6,c	;volatile
  2210  00003A  EF21  F000         	goto	i2u24_41
  2211  00003E  EF23  F000         	goto	i2u24_40
  2212  000042                     i2u24_41:
  2213  000042  EF35  F000         	goto	i2l135
  2214  000046                     i2u24_40:
  2215  000046                     
  2216                           ; BSR set to: 14
  2217                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE4bits.TMR4IE == 1 && PIR4bits.TMR4IF == 1)
  2218  000046  A7C1               	btfss	193,3,b	;volatile
  2219  000048  EF28  F000         	goto	i2u25_41
  2220  00004C  EF2A  F000         	goto	i2u25_40
  2221  000050                     i2u25_41:
  2222  000050  EF35  F000         	goto	i2l134
  2223  000054                     i2u25_40:
  2224  000054                     
  2225                           ; BSR set to: 14
  2226  000054  A7C9               	btfss	201,3,b	;volatile
  2227  000056  EF2F  F000         	goto	i2u26_41
  2228  00005A  EF31  F000         	goto	i2u26_40
  2229  00005E                     i2u26_41:
  2230  00005E  EF35  F000         	goto	i2l134
  2231  000062                     i2u26_40:
  2232  000062                     
  2233                           ; BSR set to: 14
  2234                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             TMR4_ISR();
  2235  000062  EC5C  F002         	call	_TMR4_ISR	;wreg free
  2236                           
  2237                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  2238  000066  EF35  F000         	goto	i2l135
  2239  00006A                     i2l134:
  2240  00006A                     i2l135:
  2241  00006A  C012  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2242  00006E  C011  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2243  000072  9223               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2244  000074  0011               	retfie		f
  2245  000076                     __end_of_INTERRUPT_InterruptManager:
  2246                           	callstack 0
  2247                           
  2248 ;; *************** function _TMR4_ISR *****************
  2249 ;; Defined at:
  2250 ;;		line 165 in file "mcc_generated_files/tmr4.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;		None
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;		None
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  1    wreg      void 
  2257 ;; Registers used:
  2258 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2268 ;;Total ram usage:        0 bytes
  2269 ;; Hardware stack levels used: 1
  2270 ;; Hardware stack levels required when called: 1
  2271 ;; This function calls:
  2272 ;;		Absolute function
  2273 ;;		_TMR4_DefaultInterruptHandler
  2274 ;; This function is called by:
  2275 ;;		_INTERRUPT_InterruptManager
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279                           	psect	text24
  2280  0004B8                     __ptext24:
  2281                           	callstack 0
  2282  0004B8                     _TMR4_ISR:
  2283                           	callstack 25
  2284  0004B8                     
  2285                           ;mcc_generated_files/tmr4.c: 169:     PIR4bits.TMR4IF = 0;
  2286  0004B8  010E               	movlb	14	; () banked
  2287  0004BA  97C9               	bcf	201,3,b	;volatile
  2288  0004BC                     
  2289                           ; BSR set to: 14
  2290                           ;mcc_generated_files/tmr4.c: 171:     if(TMR4_InterruptHandler)
  2291  0004BC  501D               	movf	_TMR4_InterruptHandler^0,w,c
  2292  0004BE  101E               	iorwf	(_TMR4_InterruptHandler+1)^0,w,c
  2293  0004C0  B4D8               	btfsc	status,2,c
  2294  0004C2  EF65  F002         	goto	i2u10_41
  2295  0004C6  EF67  F002         	goto	i2u10_40
  2296  0004CA                     i2u10_41:
  2297  0004CA  EF74  F002         	goto	i2l314
  2298  0004CE                     i2u10_40:
  2299  0004CE                     
  2300                           ; BSR set to: 14
  2301                           ;mcc_generated_files/tmr4.c: 172:     {;mcc_generated_files/tmr4.c: 173:         TMR4_In
      +                          terruptHandler();
  2302  0004CE  D802               	call	i2u11_48
  2303  0004D0  EF74  F002         	goto	i2u11_49
  2304  0004D4                     i2u11_48:
  2305  0004D4  0005               	push	
  2306  0004D6  6EFA               	movwf	pclath,c
  2307  0004D8  501D               	movf	_TMR4_InterruptHandler^0,w,c
  2308  0004DA  6EFD               	movwf	tosl,c
  2309  0004DC  501E               	movf	(_TMR4_InterruptHandler+1)^0,w,c
  2310  0004DE  6EFE               	movwf	tosh,c
  2311  0004E0  50F8               	movf	tblptru,w,c
  2312  0004E2  6EFF               	movwf	tosu,c
  2313  0004E4  50FA               	movf	pclath,w,c
  2314  0004E6  0012               	return		;indir
  2315  0004E8                     i2u11_49:
  2316  0004E8                     i2l314:
  2317  0004E8  0012               	return		;funcret
  2318  0004EA                     __end_of_TMR4_ISR:
  2319                           	callstack 0
  2320                           
  2321 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  2322 ;; Defined at:
  2323 ;;		line 182 in file "mcc_generated_files/tmr4.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;		None
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;		None
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  1    wreg      void 
  2330 ;; Registers used:
  2331 ;;		None
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2341 ;;Total ram usage:        0 bytes
  2342 ;; Hardware stack levels used: 1
  2343 ;; This function calls:
  2344 ;;		Nothing
  2345 ;; This function is called by:
  2346 ;;		_TMR4_Initialize
  2347 ;;		_TMR4_ISR
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351                           	psect	text25
  2352  0006B2                     __ptext25:
  2353                           	callstack 0
  2354  0006B2                     _TMR4_DefaultInterruptHandler:
  2355                           	callstack 25
  2356  0006B2  0012               	return		;funcret
  2357  0006B4                     __end_of_TMR4_DefaultInterruptHandler:
  2358                           	callstack 0
  2359                           
  2360 ;; *************** function _TMR0_ISR *****************
  2361 ;; Defined at:
  2362 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;		None
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;		None
  2367 ;; Return value:  Size  Location     Type
  2368 ;;                  1    wreg      void 
  2369 ;; Registers used:
  2370 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2371 ;; Tracked objects:
  2372 ;;		On entry : 0/0
  2373 ;;		On exit  : 0/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2380 ;;Total ram usage:        0 bytes
  2381 ;; Hardware stack levels used: 1
  2382 ;; Hardware stack levels required when called: 2
  2383 ;; This function calls:
  2384 ;;		_TMR0_CallBack
  2385 ;; This function is called by:
  2386 ;;		_INTERRUPT_InterruptManager
  2387 ;; This function uses a non-reentrant model
  2388 ;;
  2389                           
  2390                           	psect	text26
  2391  00067E                     __ptext26:
  2392                           	callstack 0
  2393  00067E                     _TMR0_ISR:
  2394                           	callstack 24
  2395  00067E                     
  2396                           ;mcc_generated_files/tmr0.c: 137:     PIR0bits.TMR0IF = 0;
  2397  00067E  010E               	movlb	14	; () banked
  2398  000680  9BC5               	bcf	197,5,b	;volatile
  2399  000682                     
  2400                           ; BSR set to: 14
  2401                           ;mcc_generated_files/tmr0.c: 139:     TMR0H = timer0ReloadVal16bit >> 8;
  2402  000682  5022               	movf	(_timer0ReloadVal16bit+1)^0,w,c	;volatile
  2403  000684  6ED3               	movwf	211,c	;volatile
  2404  000686                     
  2405                           ; BSR set to: 14
  2406                           ;mcc_generated_files/tmr0.c: 140:     TMR0L = (uint8_t) timer0ReloadVal16bit;
  2407  000686  C021  FFD2         	movff	_timer0ReloadVal16bit,4050	;volatile
  2408  00068A                     
  2409                           ; BSR set to: 14
  2410                           ;mcc_generated_files/tmr0.c: 144:     TMR0_CallBack();
  2411  00068A  EC8C  F002         	call	_TMR0_CallBack	;wreg free
  2412  00068E  0012               	return		;funcret
  2413  000690                     __end_of_TMR0_ISR:
  2414                           	callstack 0
  2415                           
  2416 ;; *************** function _TMR0_CallBack *****************
  2417 ;; Defined at:
  2418 ;;		line 149 in file "mcc_generated_files/tmr0.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;		None
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;		None
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  1    wreg      void 
  2425 ;; Registers used:
  2426 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2436 ;;Total ram usage:        0 bytes
  2437 ;; Hardware stack levels used: 1
  2438 ;; Hardware stack levels required when called: 1
  2439 ;; This function calls:
  2440 ;;		Absolute function
  2441 ;;		_TMR0_DefaultInterruptHandler
  2442 ;;		_msTick
  2443 ;; This function is called by:
  2444 ;;		_TMR0_ISR
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           	psect	text27
  2449  000518                     __ptext27:
  2450                           	callstack 0
  2451  000518                     _TMR0_CallBack:
  2452                           	callstack 24
  2453  000518                     
  2454                           ;mcc_generated_files/tmr0.c: 153:     if(TMR0_InterruptHandler)
  2455  000518  501F               	movf	_TMR0_InterruptHandler^0,w,c
  2456  00051A  1020               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  2457  00051C  B4D8               	btfsc	status,2,c
  2458  00051E  EF93  F002         	goto	i2u5_41
  2459  000522  EF95  F002         	goto	i2u5_40
  2460  000526                     i2u5_41:
  2461  000526  EFA2  F002         	goto	i2l184
  2462  00052A                     i2u5_40:
  2463  00052A                     
  2464                           ;mcc_generated_files/tmr0.c: 154:     {;mcc_generated_files/tmr0.c: 155:         TMR0_In
      +                          terruptHandler();
  2465  00052A  D802               	call	i2u6_48
  2466  00052C  EFA2  F002         	goto	i2u6_49
  2467  000530                     i2u6_48:
  2468  000530  0005               	push	
  2469  000532  6EFA               	movwf	pclath,c
  2470  000534  501F               	movf	_TMR0_InterruptHandler^0,w,c
  2471  000536  6EFD               	movwf	tosl,c
  2472  000538  5020               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  2473  00053A  6EFE               	movwf	tosh,c
  2474  00053C  50F8               	movf	tblptru,w,c
  2475  00053E  6EFF               	movwf	tosu,c
  2476  000540  50FA               	movf	pclath,w,c
  2477  000542  0012               	return		;indir
  2478  000544                     i2u6_49:
  2479  000544                     i2l184:
  2480  000544  0012               	return		;funcret
  2481  000546                     __end_of_TMR0_CallBack:
  2482                           	callstack 0
  2483                           
  2484 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  2485 ;; Defined at:
  2486 ;;		line 163 in file "mcc_generated_files/tmr0.c"
  2487 ;; Parameters:    Size  Location     Type
  2488 ;;		None
  2489 ;; Auto vars:     Size  Location     Type
  2490 ;;		None
  2491 ;; Return value:  Size  Location     Type
  2492 ;;                  1    wreg      void 
  2493 ;; Registers used:
  2494 ;;		None
  2495 ;; Tracked objects:
  2496 ;;		On entry : 0/0
  2497 ;;		On exit  : 0/0
  2498 ;;		Unchanged: 0/0
  2499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2504 ;;Total ram usage:        0 bytes
  2505 ;; Hardware stack levels used: 1
  2506 ;; This function calls:
  2507 ;;		Nothing
  2508 ;; This function is called by:
  2509 ;;		_TMR0_Initialize
  2510 ;;		_TMR0_CallBack
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           	psect	text28
  2515  0006B4                     __ptext28:
  2516                           	callstack 0
  2517  0006B4                     _TMR0_DefaultInterruptHandler:
  2518                           	callstack 24
  2519  0006B4  0012               	return		;funcret
  2520  0006B6                     __end_of_TMR0_DefaultInterruptHandler:
  2521                           	callstack 0
  2522                           
  2523 ;; *************** function _msTick *****************
  2524 ;; Defined at:
  2525 ;;		line 151 in file "app.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;		None
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;		None
  2530 ;; Return value:  Size  Location     Type
  2531 ;;                  1    wreg      void 
  2532 ;; Registers used:
  2533 ;;		wreg, status,2, status,0
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2543 ;;Total ram usage:        0 bytes
  2544 ;; Hardware stack levels used: 1
  2545 ;; This function calls:
  2546 ;;		Nothing
  2547 ;; This function is called by:
  2548 ;;		_appInit
  2549 ;;		_TMR0_CallBack
  2550 ;; This function uses a non-reentrant model
  2551 ;;
  2552                           
  2553                           	psect	text29
  2554  00062C                     __ptext29:
  2555                           	callstack 0
  2556  00062C                     _msTick:
  2557                           	callstack 24
  2558  00062C                     
  2559                           ;app.c: 152:     msTicks++;
  2560  00062C  0E01               	movlw	1
  2561  00062E  2601               	addwf	_msTicks^0,f,c
  2562  000630  0E00               	movlw	0
  2563  000632  2202               	addwfc	(_msTicks+1)^0,f,c
  2564  000634  2203               	addwfc	(_msTicks+2)^0,f,c
  2565  000636  2204               	addwfc	(_msTicks+3)^0,f,c
  2566  000638  2205               	addwfc	(_msTicks+4)^0,f,c
  2567  00063A  2206               	addwfc	(_msTicks+5)^0,f,c
  2568  00063C  2207               	addwfc	(_msTicks+6)^0,f,c
  2569  00063E  2208               	addwfc	(_msTicks+7)^0,f,c
  2570  000640  0012               	return		;funcret
  2571  000642                     __end_of_msTick:
  2572                           	callstack 0
  2573  0000                     
  2574                           	psect	text30
  2575  000000                     __ptext30:
  2576                           	callstack 0
  2577  000000                     
  2578                           	psect	rparam
  2579  0000                     
  2580                           	psect	temp
  2581  000023                     btemp:
  2582                           	callstack 0
  2583  000023                     	ds	1
  2584  0000                     int$flags	set	btemp
  2585  0000                     wtemp8	set	btemp+1
  2586  0000                     ttemp5	set	btemp+1
  2587  0000                     ttemp6	set	btemp+4
  2588  0000                     ttemp7	set	btemp+8
  2589                           
  2590                           	psect	idloc
  2591                           
  2592                           ;Config register IDLOC0 @ 0x200000
  2593                           ;	unspecified, using default values
  2594  200000                     	org	2097152
  2595  200000  FFFF               	dw	65535
  2596                           
  2597                           ;Config register IDLOC1 @ 0x200002
  2598                           ;	unspecified, using default values
  2599  200002                     	org	2097154
  2600  200002  FFFF               	dw	65535
  2601                           
  2602                           ;Config register IDLOC2 @ 0x200004
  2603                           ;	unspecified, using default values
  2604  200004                     	org	2097156
  2605  200004  FFFF               	dw	65535
  2606                           
  2607                           ;Config register IDLOC3 @ 0x200006
  2608                           ;	unspecified, using default values
  2609  200006                     	org	2097158
  2610  200006  FFFF               	dw	65535
  2611                           
  2612                           ;Config register IDLOC4 @ 0x200008
  2613                           ;	unspecified, using default values
  2614  200008                     	org	2097160
  2615  200008  FFFF               	dw	65535
  2616                           
  2617                           ;Config register IDLOC5 @ 0x20000A
  2618                           ;	unspecified, using default values
  2619  20000A                     	org	2097162
  2620  20000A  FFFF               	dw	65535
  2621                           
  2622                           ;Config register IDLOC6 @ 0x20000C
  2623                           ;	unspecified, using default values
  2624  20000C                     	org	2097164
  2625  20000C  FFFF               	dw	65535
  2626                           
  2627                           ;Config register IDLOC7 @ 0x20000E
  2628                           ;	unspecified, using default values
  2629  20000E                     	org	2097166
  2630  20000E  FFFF               	dw	65535
  2631                           
  2632                           ;Config register IDLOC8 @ 0x200010
  2633                           ;	unspecified, using default values
  2634  200010                     	org	2097168
  2635  200010  FFFF               	dw	65535
  2636                           
  2637                           ;Config register IDLOC9 @ 0x200012
  2638                           ;	unspecified, using default values
  2639  200012                     	org	2097170
  2640  200012  FFFF               	dw	65535
  2641                           
  2642                           ;Config register IDLOC10 @ 0x200014
  2643                           ;	unspecified, using default values
  2644  200014                     	org	2097172
  2645  200014  FFFF               	dw	65535
  2646                           
  2647                           ;Config register IDLOC11 @ 0x200016
  2648                           ;	unspecified, using default values
  2649  200016                     	org	2097174
  2650  200016  FFFF               	dw	65535
  2651                           
  2652                           ;Config register IDLOC12 @ 0x200018
  2653                           ;	unspecified, using default values
  2654  200018                     	org	2097176
  2655  200018  FFFF               	dw	65535
  2656                           
  2657                           ;Config register IDLOC13 @ 0x20001A
  2658                           ;	unspecified, using default values
  2659  20001A                     	org	2097178
  2660  20001A  FFFF               	dw	65535
  2661                           
  2662                           ;Config register IDLOC14 @ 0x20001C
  2663                           ;	unspecified, using default values
  2664  20001C                     	org	2097180
  2665  20001C  FFFF               	dw	65535
  2666                           
  2667                           ;Config register IDLOC15 @ 0x20001E
  2668                           ;	unspecified, using default values
  2669  20001E                     	org	2097182
  2670  20001E  FFFF               	dw	65535
  2671                           
  2672                           ;Config register IDLOC16 @ 0x200020
  2673                           ;	unspecified, using default values
  2674  200020                     	org	2097184
  2675  200020  FFFF               	dw	65535
  2676                           
  2677                           ;Config register IDLOC17 @ 0x200022
  2678                           ;	unspecified, using default values
  2679  200022                     	org	2097186
  2680  200022  FFFF               	dw	65535
  2681                           
  2682                           ;Config register IDLOC18 @ 0x200024
  2683                           ;	unspecified, using default values
  2684  200024                     	org	2097188
  2685  200024  FFFF               	dw	65535
  2686                           
  2687                           ;Config register IDLOC19 @ 0x200026
  2688                           ;	unspecified, using default values
  2689  200026                     	org	2097190
  2690  200026  FFFF               	dw	65535
  2691                           
  2692                           ;Config register IDLOC20 @ 0x200028
  2693                           ;	unspecified, using default values
  2694  200028                     	org	2097192
  2695  200028  FFFF               	dw	65535
  2696                           
  2697                           ;Config register IDLOC21 @ 0x20002A
  2698                           ;	unspecified, using default values
  2699  20002A                     	org	2097194
  2700  20002A  FFFF               	dw	65535
  2701                           
  2702                           ;Config register IDLOC22 @ 0x20002C
  2703                           ;	unspecified, using default values
  2704  20002C                     	org	2097196
  2705  20002C  FFFF               	dw	65535
  2706                           
  2707                           ;Config register IDLOC23 @ 0x20002E
  2708                           ;	unspecified, using default values
  2709  20002E                     	org	2097198
  2710  20002E  FFFF               	dw	65535
  2711                           
  2712                           ;Config register IDLOC24 @ 0x200030
  2713                           ;	unspecified, using default values
  2714  200030                     	org	2097200
  2715  200030  FFFF               	dw	65535
  2716                           
  2717                           ;Config register IDLOC25 @ 0x200032
  2718                           ;	unspecified, using default values
  2719  200032                     	org	2097202
  2720  200032  FFFF               	dw	65535
  2721                           
  2722                           ;Config register IDLOC26 @ 0x200034
  2723                           ;	unspecified, using default values
  2724  200034                     	org	2097204
  2725  200034  FFFF               	dw	65535
  2726                           
  2727                           ;Config register IDLOC27 @ 0x200036
  2728                           ;	unspecified, using default values
  2729  200036                     	org	2097206
  2730  200036  FFFF               	dw	65535
  2731                           
  2732                           ;Config register IDLOC28 @ 0x200038
  2733                           ;	unspecified, using default values
  2734  200038                     	org	2097208
  2735  200038  FFFF               	dw	65535
  2736                           
  2737                           ;Config register IDLOC29 @ 0x20003A
  2738                           ;	unspecified, using default values
  2739  20003A                     	org	2097210
  2740  20003A  FFFF               	dw	65535
  2741                           
  2742                           ;Config register IDLOC30 @ 0x20003C
  2743                           ;	unspecified, using default values
  2744  20003C                     	org	2097212
  2745  20003C  FFFF               	dw	65535
  2746                           
  2747                           ;Config register IDLOC31 @ 0x20003E
  2748                           ;	unspecified, using default values
  2749  20003E                     	org	2097214
  2750  20003E  FFFF               	dw	65535
  2751                           
  2752                           ;Config register IDLOC32 @ 0x200040
  2753                           ;	unspecified, using default values
  2754  200040                     	org	2097216
  2755  200040  FFFF               	dw	65535
  2756                           
  2757                           ;Config register IDLOC33 @ 0x200042
  2758                           ;	unspecified, using default values
  2759  200042                     	org	2097218
  2760  200042  FFFF               	dw	65535
  2761                           
  2762                           ;Config register IDLOC34 @ 0x200044
  2763                           ;	unspecified, using default values
  2764  200044                     	org	2097220
  2765  200044  FFFF               	dw	65535
  2766                           
  2767                           ;Config register IDLOC35 @ 0x200046
  2768                           ;	unspecified, using default values
  2769  200046                     	org	2097222
  2770  200046  FFFF               	dw	65535
  2771                           
  2772                           ;Config register IDLOC36 @ 0x200048
  2773                           ;	unspecified, using default values
  2774  200048                     	org	2097224
  2775  200048  FFFF               	dw	65535
  2776                           
  2777                           ;Config register IDLOC37 @ 0x20004A
  2778                           ;	unspecified, using default values
  2779  20004A                     	org	2097226
  2780  20004A  FFFF               	dw	65535
  2781                           
  2782                           ;Config register IDLOC38 @ 0x20004C
  2783                           ;	unspecified, using default values
  2784  20004C                     	org	2097228
  2785  20004C  FFFF               	dw	65535
  2786                           
  2787                           ;Config register IDLOC39 @ 0x20004E
  2788                           ;	unspecified, using default values
  2789  20004E                     	org	2097230
  2790  20004E  FFFF               	dw	65535
  2791                           
  2792                           ;Config register IDLOC40 @ 0x200050
  2793                           ;	unspecified, using default values
  2794  200050                     	org	2097232
  2795  200050  FFFF               	dw	65535
  2796                           
  2797                           ;Config register IDLOC41 @ 0x200052
  2798                           ;	unspecified, using default values
  2799  200052                     	org	2097234
  2800  200052  FFFF               	dw	65535
  2801                           
  2802                           ;Config register IDLOC42 @ 0x200054
  2803                           ;	unspecified, using default values
  2804  200054                     	org	2097236
  2805  200054  FFFF               	dw	65535
  2806                           
  2807                           ;Config register IDLOC43 @ 0x200056
  2808                           ;	unspecified, using default values
  2809  200056                     	org	2097238
  2810  200056  FFFF               	dw	65535
  2811                           
  2812                           ;Config register IDLOC44 @ 0x200058
  2813                           ;	unspecified, using default values
  2814  200058                     	org	2097240
  2815  200058  FFFF               	dw	65535
  2816                           
  2817                           ;Config register IDLOC45 @ 0x20005A
  2818                           ;	unspecified, using default values
  2819  20005A                     	org	2097242
  2820  20005A  FFFF               	dw	65535
  2821                           
  2822                           ;Config register IDLOC46 @ 0x20005C
  2823                           ;	unspecified, using default values
  2824  20005C                     	org	2097244
  2825  20005C  FFFF               	dw	65535
  2826                           
  2827                           ;Config register IDLOC47 @ 0x20005E
  2828                           ;	unspecified, using default values
  2829  20005E                     	org	2097246
  2830  20005E  FFFF               	dw	65535
  2831                           
  2832                           ;Config register IDLOC48 @ 0x200060
  2833                           ;	unspecified, using default values
  2834  200060                     	org	2097248
  2835  200060  FFFF               	dw	65535
  2836                           
  2837                           ;Config register IDLOC49 @ 0x200062
  2838                           ;	unspecified, using default values
  2839  200062                     	org	2097250
  2840  200062  FFFF               	dw	65535
  2841                           
  2842                           ;Config register IDLOC50 @ 0x200064
  2843                           ;	unspecified, using default values
  2844  200064                     	org	2097252
  2845  200064  FFFF               	dw	65535
  2846                           
  2847                           ;Config register IDLOC51 @ 0x200066
  2848                           ;	unspecified, using default values
  2849  200066                     	org	2097254
  2850  200066  FFFF               	dw	65535
  2851                           
  2852                           ;Config register IDLOC52 @ 0x200068
  2853                           ;	unspecified, using default values
  2854  200068                     	org	2097256
  2855  200068  FFFF               	dw	65535
  2856                           
  2857                           ;Config register IDLOC53 @ 0x20006A
  2858                           ;	unspecified, using default values
  2859  20006A                     	org	2097258
  2860  20006A  FFFF               	dw	65535
  2861                           
  2862                           ;Config register IDLOC54 @ 0x20006C
  2863                           ;	unspecified, using default values
  2864  20006C                     	org	2097260
  2865  20006C  FFFF               	dw	65535
  2866                           
  2867                           ;Config register IDLOC55 @ 0x20006E
  2868                           ;	unspecified, using default values
  2869  20006E                     	org	2097262
  2870  20006E  FFFF               	dw	65535
  2871                           
  2872                           ;Config register IDLOC56 @ 0x200070
  2873                           ;	unspecified, using default values
  2874  200070                     	org	2097264
  2875  200070  FFFF               	dw	65535
  2876                           
  2877                           ;Config register IDLOC57 @ 0x200072
  2878                           ;	unspecified, using default values
  2879  200072                     	org	2097266
  2880  200072  FFFF               	dw	65535
  2881                           
  2882                           ;Config register IDLOC58 @ 0x200074
  2883                           ;	unspecified, using default values
  2884  200074                     	org	2097268
  2885  200074  FFFF               	dw	65535
  2886                           
  2887                           ;Config register IDLOC59 @ 0x200076
  2888                           ;	unspecified, using default values
  2889  200076                     	org	2097270
  2890  200076  FFFF               	dw	65535
  2891                           
  2892                           ;Config register IDLOC60 @ 0x200078
  2893                           ;	unspecified, using default values
  2894  200078                     	org	2097272
  2895  200078  FFFF               	dw	65535
  2896                           
  2897                           ;Config register IDLOC61 @ 0x20007A
  2898                           ;	unspecified, using default values
  2899  20007A                     	org	2097274
  2900  20007A  FFFF               	dw	65535
  2901                           
  2902                           ;Config register IDLOC62 @ 0x20007C
  2903                           ;	unspecified, using default values
  2904  20007C                     	org	2097276
  2905  20007C  FFFF               	dw	65535
  2906                           
  2907                           ;Config register IDLOC63 @ 0x20007E
  2908                           ;	unspecified, using default values
  2909  20007E                     	org	2097278
  2910  20007E  FFFF               	dw	65535
  2911                           
  2912                           ;Config register IDLOC64 @ 0x200080
  2913                           ;	unspecified, using default values
  2914  200080                     	org	2097280
  2915  200080  FFFF               	dw	65535
  2916                           
  2917                           ;Config register IDLOC65 @ 0x200082
  2918                           ;	unspecified, using default values
  2919  200082                     	org	2097282
  2920  200082  FFFF               	dw	65535
  2921                           
  2922                           ;Config register IDLOC66 @ 0x200084
  2923                           ;	unspecified, using default values
  2924  200084                     	org	2097284
  2925  200084  FFFF               	dw	65535
  2926                           
  2927                           ;Config register IDLOC67 @ 0x200086
  2928                           ;	unspecified, using default values
  2929  200086                     	org	2097286
  2930  200086  FFFF               	dw	65535
  2931                           
  2932                           ;Config register IDLOC68 @ 0x200088
  2933                           ;	unspecified, using default values
  2934  200088                     	org	2097288
  2935  200088  FFFF               	dw	65535
  2936                           
  2937                           ;Config register IDLOC69 @ 0x20008A
  2938                           ;	unspecified, using default values
  2939  20008A                     	org	2097290
  2940  20008A  FFFF               	dw	65535
  2941                           
  2942                           ;Config register IDLOC70 @ 0x20008C
  2943                           ;	unspecified, using default values
  2944  20008C                     	org	2097292
  2945  20008C  FFFF               	dw	65535
  2946                           
  2947                           ;Config register IDLOC71 @ 0x20008E
  2948                           ;	unspecified, using default values
  2949  20008E                     	org	2097294
  2950  20008E  FFFF               	dw	65535
  2951                           
  2952                           ;Config register IDLOC72 @ 0x200090
  2953                           ;	unspecified, using default values
  2954  200090                     	org	2097296
  2955  200090  FFFF               	dw	65535
  2956                           
  2957                           ;Config register IDLOC73 @ 0x200092
  2958                           ;	unspecified, using default values
  2959  200092                     	org	2097298
  2960  200092  FFFF               	dw	65535
  2961                           
  2962                           ;Config register IDLOC74 @ 0x200094
  2963                           ;	unspecified, using default values
  2964  200094                     	org	2097300
  2965  200094  FFFF               	dw	65535
  2966                           
  2967                           ;Config register IDLOC75 @ 0x200096
  2968                           ;	unspecified, using default values
  2969  200096                     	org	2097302
  2970  200096  FFFF               	dw	65535
  2971                           
  2972                           ;Config register IDLOC76 @ 0x200098
  2973                           ;	unspecified, using default values
  2974  200098                     	org	2097304
  2975  200098  FFFF               	dw	65535
  2976                           
  2977                           ;Config register IDLOC77 @ 0x20009A
  2978                           ;	unspecified, using default values
  2979  20009A                     	org	2097306
  2980  20009A  FFFF               	dw	65535
  2981                           
  2982                           ;Config register IDLOC78 @ 0x20009C
  2983                           ;	unspecified, using default values
  2984  20009C                     	org	2097308
  2985  20009C  FFFF               	dw	65535
  2986                           
  2987                           ;Config register IDLOC79 @ 0x20009E
  2988                           ;	unspecified, using default values
  2989  20009E                     	org	2097310
  2990  20009E  FFFF               	dw	65535
  2991                           
  2992                           ;Config register IDLOC80 @ 0x2000A0
  2993                           ;	unspecified, using default values
  2994  2000A0                     	org	2097312
  2995  2000A0  FFFF               	dw	65535
  2996                           
  2997                           ;Config register IDLOC81 @ 0x2000A2
  2998                           ;	unspecified, using default values
  2999  2000A2                     	org	2097314
  3000  2000A2  FFFF               	dw	65535
  3001                           
  3002                           ;Config register IDLOC82 @ 0x2000A4
  3003                           ;	unspecified, using default values
  3004  2000A4                     	org	2097316
  3005  2000A4  FFFF               	dw	65535
  3006                           
  3007                           ;Config register IDLOC83 @ 0x2000A6
  3008                           ;	unspecified, using default values
  3009  2000A6                     	org	2097318
  3010  2000A6  FFFF               	dw	65535
  3011                           
  3012                           ;Config register IDLOC84 @ 0x2000A8
  3013                           ;	unspecified, using default values
  3014  2000A8                     	org	2097320
  3015  2000A8  FFFF               	dw	65535
  3016                           
  3017                           ;Config register IDLOC85 @ 0x2000AA
  3018                           ;	unspecified, using default values
  3019  2000AA                     	org	2097322
  3020  2000AA  FFFF               	dw	65535
  3021                           
  3022                           ;Config register IDLOC86 @ 0x2000AC
  3023                           ;	unspecified, using default values
  3024  2000AC                     	org	2097324
  3025  2000AC  FFFF               	dw	65535
  3026                           
  3027                           ;Config register IDLOC87 @ 0x2000AE
  3028                           ;	unspecified, using default values
  3029  2000AE                     	org	2097326
  3030  2000AE  FFFF               	dw	65535
  3031                           
  3032                           ;Config register IDLOC88 @ 0x2000B0
  3033                           ;	unspecified, using default values
  3034  2000B0                     	org	2097328
  3035  2000B0  FFFF               	dw	65535
  3036                           
  3037                           ;Config register IDLOC89 @ 0x2000B2
  3038                           ;	unspecified, using default values
  3039  2000B2                     	org	2097330
  3040  2000B2  FFFF               	dw	65535
  3041                           
  3042                           ;Config register IDLOC90 @ 0x2000B4
  3043                           ;	unspecified, using default values
  3044  2000B4                     	org	2097332
  3045  2000B4  FFFF               	dw	65535
  3046                           
  3047                           ;Config register IDLOC91 @ 0x2000B6
  3048                           ;	unspecified, using default values
  3049  2000B6                     	org	2097334
  3050  2000B6  FFFF               	dw	65535
  3051                           
  3052                           ;Config register IDLOC92 @ 0x2000B8
  3053                           ;	unspecified, using default values
  3054  2000B8                     	org	2097336
  3055  2000B8  FFFF               	dw	65535
  3056                           
  3057                           ;Config register IDLOC93 @ 0x2000BA
  3058                           ;	unspecified, using default values
  3059  2000BA                     	org	2097338
  3060  2000BA  FFFF               	dw	65535
  3061                           
  3062                           ;Config register IDLOC94 @ 0x2000BC
  3063                           ;	unspecified, using default values
  3064  2000BC                     	org	2097340
  3065  2000BC  FFFF               	dw	65535
  3066                           
  3067                           ;Config register IDLOC95 @ 0x2000BE
  3068                           ;	unspecified, using default values
  3069  2000BE                     	org	2097342
  3070  2000BE  FFFF               	dw	65535
  3071                           
  3072                           ;Config register IDLOC96 @ 0x2000C0
  3073                           ;	unspecified, using default values
  3074  2000C0                     	org	2097344
  3075  2000C0  FFFF               	dw	65535
  3076                           
  3077                           ;Config register IDLOC97 @ 0x2000C2
  3078                           ;	unspecified, using default values
  3079  2000C2                     	org	2097346
  3080  2000C2  FFFF               	dw	65535
  3081                           
  3082                           ;Config register IDLOC98 @ 0x2000C4
  3083                           ;	unspecified, using default values
  3084  2000C4                     	org	2097348
  3085  2000C4  FFFF               	dw	65535
  3086                           
  3087                           ;Config register IDLOC99 @ 0x2000C6
  3088                           ;	unspecified, using default values
  3089  2000C6                     	org	2097350
  3090  2000C6  FFFF               	dw	65535
  3091                           
  3092                           ;Config register IDLOC100 @ 0x2000C8
  3093                           ;	unspecified, using default values
  3094  2000C8                     	org	2097352
  3095  2000C8  FFFF               	dw	65535
  3096                           
  3097                           ;Config register IDLOC101 @ 0x2000CA
  3098                           ;	unspecified, using default values
  3099  2000CA                     	org	2097354
  3100  2000CA  FFFF               	dw	65535
  3101                           
  3102                           ;Config register IDLOC102 @ 0x2000CC
  3103                           ;	unspecified, using default values
  3104  2000CC                     	org	2097356
  3105  2000CC  FFFF               	dw	65535
  3106                           
  3107                           ;Config register IDLOC103 @ 0x2000CE
  3108                           ;	unspecified, using default values
  3109  2000CE                     	org	2097358
  3110  2000CE  FFFF               	dw	65535
  3111                           
  3112                           ;Config register IDLOC104 @ 0x2000D0
  3113                           ;	unspecified, using default values
  3114  2000D0                     	org	2097360
  3115  2000D0  FFFF               	dw	65535
  3116                           
  3117                           ;Config register IDLOC105 @ 0x2000D2
  3118                           ;	unspecified, using default values
  3119  2000D2                     	org	2097362
  3120  2000D2  FFFF               	dw	65535
  3121                           
  3122                           ;Config register IDLOC106 @ 0x2000D4
  3123                           ;	unspecified, using default values
  3124  2000D4                     	org	2097364
  3125  2000D4  FFFF               	dw	65535
  3126                           
  3127                           ;Config register IDLOC107 @ 0x2000D6
  3128                           ;	unspecified, using default values
  3129  2000D6                     	org	2097366
  3130  2000D6  FFFF               	dw	65535
  3131                           
  3132                           ;Config register IDLOC108 @ 0x2000D8
  3133                           ;	unspecified, using default values
  3134  2000D8                     	org	2097368
  3135  2000D8  FFFF               	dw	65535
  3136                           
  3137                           ;Config register IDLOC109 @ 0x2000DA
  3138                           ;	unspecified, using default values
  3139  2000DA                     	org	2097370
  3140  2000DA  FFFF               	dw	65535
  3141                           
  3142                           ;Config register IDLOC110 @ 0x2000DC
  3143                           ;	unspecified, using default values
  3144  2000DC                     	org	2097372
  3145  2000DC  FFFF               	dw	65535
  3146                           
  3147                           ;Config register IDLOC111 @ 0x2000DE
  3148                           ;	unspecified, using default values
  3149  2000DE                     	org	2097374
  3150  2000DE  FFFF               	dw	65535
  3151                           
  3152                           ;Config register IDLOC112 @ 0x2000E0
  3153                           ;	unspecified, using default values
  3154  2000E0                     	org	2097376
  3155  2000E0  FFFF               	dw	65535
  3156                           
  3157                           ;Config register IDLOC113 @ 0x2000E2
  3158                           ;	unspecified, using default values
  3159  2000E2                     	org	2097378
  3160  2000E2  FFFF               	dw	65535
  3161                           
  3162                           ;Config register IDLOC114 @ 0x2000E4
  3163                           ;	unspecified, using default values
  3164  2000E4                     	org	2097380
  3165  2000E4  FFFF               	dw	65535
  3166                           
  3167                           ;Config register IDLOC115 @ 0x2000E6
  3168                           ;	unspecified, using default values
  3169  2000E6                     	org	2097382
  3170  2000E6  FFFF               	dw	65535
  3171                           
  3172                           ;Config register IDLOC116 @ 0x2000E8
  3173                           ;	unspecified, using default values
  3174  2000E8                     	org	2097384
  3175  2000E8  FFFF               	dw	65535
  3176                           
  3177                           ;Config register IDLOC117 @ 0x2000EA
  3178                           ;	unspecified, using default values
  3179  2000EA                     	org	2097386
  3180  2000EA  FFFF               	dw	65535
  3181                           
  3182                           ;Config register IDLOC118 @ 0x2000EC
  3183                           ;	unspecified, using default values
  3184  2000EC                     	org	2097388
  3185  2000EC  FFFF               	dw	65535
  3186                           
  3187                           ;Config register IDLOC119 @ 0x2000EE
  3188                           ;	unspecified, using default values
  3189  2000EE                     	org	2097390
  3190  2000EE  FFFF               	dw	65535
  3191                           
  3192                           ;Config register IDLOC120 @ 0x2000F0
  3193                           ;	unspecified, using default values
  3194  2000F0                     	org	2097392
  3195  2000F0  FFFF               	dw	65535
  3196                           
  3197                           ;Config register IDLOC121 @ 0x2000F2
  3198                           ;	unspecified, using default values
  3199  2000F2                     	org	2097394
  3200  2000F2  FFFF               	dw	65535
  3201                           
  3202                           ;Config register IDLOC122 @ 0x2000F4
  3203                           ;	unspecified, using default values
  3204  2000F4                     	org	2097396
  3205  2000F4  FFFF               	dw	65535
  3206                           
  3207                           ;Config register IDLOC123 @ 0x2000F6
  3208                           ;	unspecified, using default values
  3209  2000F6                     	org	2097398
  3210  2000F6  FFFF               	dw	65535
  3211                           
  3212                           ;Config register IDLOC124 @ 0x2000F8
  3213                           ;	unspecified, using default values
  3214  2000F8                     	org	2097400
  3215  2000F8  FFFF               	dw	65535
  3216                           
  3217                           ;Config register IDLOC125 @ 0x2000FA
  3218                           ;	unspecified, using default values
  3219  2000FA                     	org	2097402
  3220  2000FA  FFFF               	dw	65535
  3221                           
  3222                           ;Config register IDLOC126 @ 0x2000FC
  3223                           ;	unspecified, using default values
  3224  2000FC                     	org	2097404
  3225  2000FC  FFFF               	dw	65535
  3226                           
  3227                           ;Config register IDLOC127 @ 0x2000FE
  3228                           ;	unspecified, using default values
  3229  2000FE                     	org	2097406
  3230  2000FE  FFFF               	dw	65535
  3231                           
  3232                           	psect	config
  3233                           
  3234                           ;Config register CONFIG1L @ 0x300000
  3235                           ;	External Oscillator mode Selection bits
  3236                           ;	FEXTOSC = OFF, Oscillator not enabled
  3237                           ;	Power-up default value for COSC bits
  3238                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  3239  300000                     	org	3145728
  3240  300000  8C                 	db	140
  3241                           
  3242                           ;Config register CONFIG1H @ 0x300001
  3243                           ;	Clock Out Enable bit
  3244                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3245                           ;	Clock Switch Enable bit
  3246                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3247                           ;	Fail-Safe Clock Monitor Enable bit
  3248                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3249  300001                     	org	3145729
  3250  300001  FF                 	db	255
  3251                           
  3252                           ;Config register CONFIG2L @ 0x300002
  3253                           ;	Master Clear Enable bit
  3254                           ;	MCLRE = EXTMCLR, MCLR pin (RE3) is MCLR
  3255                           ;	Power-up Timer Enable bit
  3256                           ;	PWRTE = OFF, Power up timer disabled
  3257                           ;	Low-power BOR enable bit
  3258                           ;	LPBOREN = OFF, Low power BOR is disabled
  3259                           ;	Brown-out Reset Enable bits
  3260                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  3261  300002                     	org	3145730
  3262  300002  FF                 	db	255
  3263                           
  3264                           ;Config register CONFIG2H @ 0x300003
  3265                           ;	Brown Out Reset Voltage selection bits
  3266                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
  3267                           ;	ZCD Disable bit
  3268                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  3269                           ;	PPSLOCK bit One-Way Set Enable bit
  3270                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  3271                           ;	Stack Full/Underflow Reset Enable bit
  3272                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3273                           ;	Extended Instruction Set Enable bit
  3274                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3275  300003                     	org	3145731
  3276  300003  FF                 	db	255
  3277                           
  3278                           ;Config register CONFIG3L @ 0x300004
  3279                           ;	WDT Period Select bits
  3280                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3281                           ;	WDT operating mode
  3282                           ;	WDTE = OFF, WDT Disabled
  3283  300004                     	org	3145732
  3284  300004  9F                 	db	159
  3285                           
  3286                           ;Config register CONFIG3H @ 0x300005
  3287                           ;	WDT Window Select bits
  3288                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3289                           ;	WDT input clock selector
  3290                           ;	WDTCCS = SC, Software Control
  3291  300005                     	org	3145733
  3292  300005  FF                 	db	255
  3293                           
  3294                           ;Config register CONFIG4L @ 0x300006
  3295                           ;	Write Protection Block 0
  3296                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3297                           ;	Write Protection Block 1
  3298                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3299                           ;	Write Protection Block 2
  3300                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3301                           ;	Write Protection Block 3
  3302                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3303  300006                     	org	3145734
  3304  300006  FF                 	db	255
  3305                           
  3306                           ;Config register CONFIG4H @ 0x300007
  3307                           ;	Configuration Register Write Protection bit
  3308                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  3309                           ;	Boot Block Write Protection bit
  3310                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3311                           ;	Data EEPROM Write Protection bit
  3312                           ;	WRTD = OFF, Data EEPROM not write-protected
  3313                           ;	Scanner Enable bit
  3314                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  3315                           ;	Low Voltage Programming Enable bit
  3316                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  3317  300007                     	org	3145735
  3318  300007  FF                 	db	255
  3319                           
  3320                           ;Config register CONFIG5L @ 0x300008
  3321                           ;	UserNVM Program Memory Code Protection bit
  3322                           ;	CP = OFF, UserNVM code protection disabled
  3323                           ;	DataNVM Memory Code Protection bit
  3324                           ;	CPD = OFF, DataNVM code protection disabled
  3325  300008                     	org	3145736
  3326  300008  FF                 	db	255
  3327                           
  3328                           ;Config register CONFIG5H @ 0x300009
  3329                           ;	unspecified, using default values
  3330  300009                     	org	3145737
  3331  300009  FF                 	db	255
  3332                           
  3333                           ;Config register CONFIG6L @ 0x30000A
  3334                           ;	Table Read Protection Block 0
  3335                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3336                           ;	Table Read Protection Block 1
  3337                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3338                           ;	Table Read Protection Block 2
  3339                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3340                           ;	Table Read Protection Block 3
  3341                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3342  30000A                     	org	3145738
  3343  30000A  FF                 	db	255
  3344                           
  3345                           ;Config register CONFIG6H @ 0x30000B
  3346                           ;	Boot Block Table Read Protection bit
  3347                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3348  30000B                     	org	3145739
  3349  30000B  FF                 	db	255
  3350                           tosu	equ	0xFFF
  3351                           tosh	equ	0xFFE
  3352                           tosl	equ	0xFFD
  3353                           stkptr	equ	0xFFC
  3354                           pclatu	equ	0xFFB
  3355                           pclath	equ	0xFFA
  3356                           pcl	equ	0xFF9
  3357                           tblptru	equ	0xFF8
  3358                           tblptrh	equ	0xFF7
  3359                           tblptrl	equ	0xFF6
  3360                           tablat	equ	0xFF5
  3361                           prodh	equ	0xFF4
  3362                           prodl	equ	0xFF3
  3363                           indf0	equ	0xFEF
  3364                           postinc0	equ	0xFEE
  3365                           postdec0	equ	0xFED
  3366                           preinc0	equ	0xFEC
  3367                           plusw0	equ	0xFEB
  3368                           fsr0h	equ	0xFEA
  3369                           fsr0l	equ	0xFE9
  3370                           wreg	equ	0xFE8
  3371                           indf1	equ	0xFE7
  3372                           postinc1	equ	0xFE6
  3373                           postdec1	equ	0xFE5
  3374                           preinc1	equ	0xFE4
  3375                           plusw1	equ	0xFE3
  3376                           fsr1h	equ	0xFE2
  3377                           fsr1l	equ	0xFE1
  3378                           bsr	equ	0xFE0
  3379                           indf2	equ	0xFDF
  3380                           postinc2	equ	0xFDE
  3381                           postdec2	equ	0xFDD
  3382                           preinc2	equ	0xFDC
  3383                           plusw2	equ	0xFDB
  3384                           fsr2h	equ	0xFDA
  3385                           fsr2l	equ	0xFD9
  3386                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         16
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     12      34
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           31      0       0

Pointer List with Targets:

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> msTick(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> msTick(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_appHandler
    _appInit->_PWM3_LoadDutyValue
    _appInit->_PWM4_LoadDutyValue
    _appHandler->_setGreen
    _appHandler->_setRed
    _setRed->_PWM3_LoadDutyValue
    _setGreen->_PWM4_LoadDutyValue
    _setBlue->_PWM1_LoadDutyValue
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2149
                  _SYSTEM_Initialize
                    _TMR4_StartTimer
                         _appHandler
                            _appInit
 ---------------------------------------------------------------------------------
 (1) _appInit                                              0     0      0     808
                 _PWM1_LoadDutyValue
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _appHandler                                           2     2      0    1069
                                             10 COMRAM     2     2      0
                            _setBlue
                           _setGreen
                             _setRed
 ---------------------------------------------------------------------------------
 (2) _setRed                                               4     2      2     341
                                              6 COMRAM     4     2      2
                 _PWM3_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM3_LoadDutyValue                                   4     2      2     196
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _setGreen                                             4     2      2     341
                                              6 COMRAM     4     2      2
                 _PWM4_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM4_LoadDutyValue                                   4     2      2     196
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _setBlue                                              4     2      2     387
                                              4 COMRAM     4     2      2
                 _PWM1_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM1_LoadDutyValue                                   2     0      2     242
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR4_StartTimer                                      0     0      0       0
                         _TMR4_Start
 ---------------------------------------------------------------------------------
 (2) _TMR4_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     272
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR0_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0      98
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR4_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                              4 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     174
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0       0
                                              0 COMRAM     2     2      0
                           _TMR0_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR4_ISR                                             0     0      0       0
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                             _msTick *
 ---------------------------------------------------------------------------------
 (7) _msTick                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM1_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
   _TMR4_StartTimer
     _TMR4_Start
   _appHandler
     _setBlue
       _PWM1_LoadDutyValue
     _setGreen
       _PWM4_LoadDutyValue
     _setRed
       _PWM3_LoadDutyValue
   _appInit
     _PWM1_LoadDutyValue
     _PWM3_LoadDutyValue
     _PWM4_LoadDutyValue
     _TMR0_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _msTick *
   _TMR4_ISR
     Absolute function(Fake) *
     _TMR4_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E1E      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      C      22       1       36.2%
BITBANK14           1F      0       0      33        0.0%
BANK14              1F      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      22       6        0.0%
DATA                 0      0      22       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Dec 21 13:01:13 2021

                                      l55 033C                                       l101 05C0  
                                     l104 062A                                       l107 05F8  
                                     l203 067C                                       l124 06B0  
                                     l222 0668                                       l208 0516  
                                     l225 0482                                       l162 044E  
                                     l410 0414                                       l236 0654  
                                     l404 03CC                                       l317 0698  
                                     l239 04B6                                       l274 059A  
                                     l187 06A2                                       l283 06AC  
                                     l286 06A8                                       l359 0570  
                                     l389 02E4                                       l398 0384  
                                     u310 0396                                       u311 0392  
                                     u320 034E                                       u400 01B4  
                                     u305 04A8                                       u321 034A  
                                     u401 01B0                                       u330 03DE  
                                     u410 01EA                                       u331 03DA  
                                     u411 01E6                                       u420 0222  
                                     u340 009C                                       u421 021E  
                                     u341 0098                                       u270 0500  
                                     u430 0258                                       u271 04FC  
                                     u431 0254                                       u351 00A2  
                                     u360 00D8                                       _PR4 000FB5  
                                     u361 00D4                                       u370 010E  
                                     u371 010A                                       u380 0146  
                                     u285 0502                                       u381 0142  
                                     u390 017C                                       u295 0474  
                                     u391 0178                   __size_of_PMD_Initialize 001C  
                         _PWM4_Initialize 0642                                       tosl 000FFD  
                                     wreg 000FE8                                      l1110 02E6  
                                    l1120 0300                                      l1112 02F2  
                                    l1130 0326                                      l1122 031E  
                                    l1114 02F4                                      l1132 0328  
                                    l1124 0320                                      l1116 02FA  
                                    l1140 066A                                      l1134 06AE  
                                    l1126 0322                                      l1118 02FE  
                                    l1142 0672                                      l1128 0324  
                                    l1136 05DE                                      l1160 0656  
                                    l1144 0642                                      l1138 0614  
                                    l1162 065A                                      l1146 0646  
                                    l1410 069A                                      l1500 05B8  
                                    l1180 06AA                                      l1244 06A4  
                                    l1420 0512                                      l1412 04EA  
                                    l1430 0690                                      l1502 05BC  
                                    l1414 04F2                                      l1510 00AC  
                                    l1440 058A                                      l1432 0572  
                                    l1416 0500                                      l1520 00EC  
                                    l1512 00B4                                      l1504 0546  
                                    l1450 043C                                      l1442 0596  
                                    l1434 057E                                      l1418 050E  
                                    l1426 0450                                      l1530 012A  
                                    l1522 00F4                                      l1514 00BC  
                                    l1506 007A                                      l1452 043E  
                                    l1444 0416                                      l1436 0584  
                                    l1428 0484                                      l1540 017C  
                                    l1532 0146                                      l1524 010E  
                                    l1516 00D8                                      l1508 009C  
                                    l1454 044A                                      l1446 0422  
                                    l1438 0588                                      l1462 039C  
                                    l1550 01C0                                      l1542 0188  
                                    l1534 0152                                      l1526 011A  
                                    l1518 00E4                                      l1448 0438  
                                    l1464 03C0                                      l1456 0386  
                                    l1472 0354                                      l1608 027A  
                                    l1560 0222                                      l1552 01C8  
                                    l1544 0190                                      l1536 015A  
                                    l1528 0122                                      l1490 05A4  
                                    l1482 03E4                                      l1458 0396  
                                    l1474 0378                                      l1466 033E  
                                    l1562 022E                                      l1554 01D0  
                                    l1546 0198                                      l1538 0162  
                                    l1570 02C0                                      l1492 05A8  
                                    l1484 0408                                      l1476 03CE  
                                    l1468 034E                                      l1564 0258  
                                    l1556 01EA                                      l1548 01B4  
                                    l1580 05CA                                      l1494 05AC  
                                    l1486 059C                                      l1478 03DE  
                                    l1558 01F6                                      l1582 05CE  
                                    l1496 05B0                                      l1488 05A0  
                                    l1568 0264                                      l1584 05D0  
                                    l1576 05C2                                      l1498 05B4  
                                    l1586 05D2                                      l1578 05C6  
                 __end_of_PWM1_Initialize 067E                                      _LATA 000F82  
                                    _LATB 000F83                                      _LATC 000F84  
                                    _T4PR 000FB5                                      _PMD0 000EDC  
                                    _PMD1 000EDD                                      _PMD2 000EDE  
                                    _PMD3 000EDF                                      _PMD4 000EE0  
                                    _PMD5 000EE1                                      _TMR4 000FB4  
                                    _WPUA 000F0B                                      _WPUB 000F13  
                                    _WPUC 000F1B                                      _WPUE 000F28  
                                    _main 05C2                                      btemp 0023  
                                    start 0076                ??_TMR4_SetInterruptHandler 0015  
                            ___param_bank 000000                   __end_of_TMR0_Initialize 0450  
          ??_TMR0_DefaultInterruptHandler 0011            __size_of_OSCILLATOR_Initialize 0018  
           __end_of_OSCILLATOR_Initialize 062C                                     ?_main 0011  
                                   _T4CON 000FB6                                     _T4HLT 000FB7  
                                   _T4TMR 000FB4                                     i2l134 006A  
                                   i2l135 006A                                     i2l320 06B2  
                                   i2l129 0038                                     i2l314 04E8  
                                   _T4RST 000FB9                                     i2l180 068E  
                                   i2l190 06B4                                     i2l184 0544  
                                   i2l392 0640                                     _OSCEN 000ED7  
                      _PWM4_LoadDutyValue 0484                                     _TMR0H 000FD3  
                                   _TMR0L 000FD2                                     _TRISA 000F87  
                                   _TRISB 000F88                                     _TRISC 000F89  
       __size_of_TMR0_SetInterruptHandler 000A                           __end_of_appInit 0572  
                         _TMR4_Initialize 0572                 ?_TMR0_SetInterruptHandler 0013  
                        __end_of_TMR0_ISR 0690                          __end_of_TMR4_ISR 04EA  
                             ?_TMR4_Start 0011                       ?_PWM4_LoadDutyValue 0013  
                         __end_of_setBlue 0416                   __end_of_PWM3_Initialize 066A  
                                   pclath 000FFA                                     ttemp5 0024  
                                   ttemp6 0027                                     ttemp7 002B  
                                   status 000FD8                                     wtemp8 0024  
                         __initialization 05FA                              __end_of_main 05DE  
                    ??_PWM4_LoadDutyValue 0015                   __end_of_PWM4_Initialize 0656  
             ?_INTERRUPT_InterruptManager 0011                                    ??_main 001D  
                           __activetblptr 000002                                    _CCPR1H 000FAA  
                                  _CCPR1L 000FA9                                    _ANSELA 000F0C  
                                  _ANSELB 000F14                                    _ANSELC 000F1C  
                                  _T0CON0 000FD4                                    _T0CON1 000FD5  
                                  _RC1PPS 000EF3                                    _RC3PPS 000EF5  
                        ?_PWM1_Initialize 0011                                    _RC5PPS 000EF7  
                                  _ODCONA 000F0A                                    _ODCONB 000F12  
                                  _ODCONC 000F1A                                    i2l1108 062C  
                                  i2l1230 067E                                    i2l1232 0682  
                                  i2l1240 04BC                                    i2l1234 0686  
                                  i2l1242 04CE                                    i2l1330 0012  
                                  i2l1236 068A                                    i2l1340 0062  
                                  i2l1332 0022                                    i2l1238 04B8  
                                  i2l1334 0030                                    i2l1176 0518  
                                  i2l1336 0046                                    i2l1178 052A  
                                  i2l1338 0054                                    _INLVLA 000F08  
                                  _INLVLB 000F10                                    _INLVLC 000F18  
                                  _INLVLE 000F25                                    _OSCFRQ 000ED9  
                                  i2u5_40 052A                                    i2u5_41 0526  
                                  i2u6_48 0530                                    i2u6_49 0544  
                         _TMR4_StartTimer 06A4               __size_of_PWM3_LoadDutyValue 0034  
                     __size_of_TMR4_Start 0004                                    _msTick 062C  
                        ?_TMR0_Initialize 0011                   __end_of_TMR4_Initialize 059C  
                                  clear_0 0600                                    _setRed 033E  
                               ??_appInit 0017                                    isa$std 000001  
                        __end_of_setGreen 03CE      __end_of_TMR4_DefaultInterruptHandler 06B4  
   __size_of_TMR4_DefaultInterruptHandler 0002              _TMR4_DefaultInterruptHandler 06B2  
                          _PMD_Initialize 05DE                                 ??_setBlue 0017  
                                  tblptru 000FF8                     __end_of_TMR0_CallBack 0546  
TMR4_SetInterruptHandler@InterruptHandler 0013  TMR0_SetInterruptHandler@InterruptHandler 0013  
           __size_of_INTERRUPT_Initialize 0004                          ?_PWM3_Initialize 0011  
                       _SYSTEM_Initialize 059C                                __accesstop 0060  
                 __end_of__initialization 0606                        ?_SYSTEM_Initialize 0011  
                           ___rparam_used 000001               PWM1_LoadDutyValue@dutyValue 0013  
                          __pcstackCOMRAM 0011                       ??_SYSTEM_Initialize 0017  
                               ?_TMR0_ISR 0011                                 ?_TMR4_ISR 0011  
                      _PWM1_LoadDutyValue 04EA                          ?_PWM4_Initialize 0011  
                  __end_of_PMD_Initialize 05FA               PWM4_LoadDutyValue@dutyValue 0013  
                     ?_PWM1_LoadDutyValue 0013           fp__TMR4_DefaultInterruptHandler 0000  
           ?_TMR4_DefaultInterruptHandler 0011                   __end_of_TMR4_StartTimer 06AA  
               __end_of_SYSTEM_Initialize 05C2                                __pnvCOMRAM 001D  
                              _appHandler 007A                     _TMR4_InterruptHandler 001D  
                    ??_PWM1_LoadDutyValue 0015          __end_of_TMR0_SetInterruptHandler 06A4  
                              ??_TMR0_ISR 0011                                ??_TMR4_ISR 0011  
                             setRed@value 0017                                   _CCP1CON 000FAB  
                                 ?_msTick 0011                                   ?_setRed 0017  
                        ?_TMR4_Initialize 0011                        appHandler@redValue 000D  
                         ?_PMD_Initialize 0011                             setGreen@value 0017  
                                 _OSCCON1 000ED3                                   _OSCCON3 000ED5  
                                 i2u10_40 04CE                                   i2u10_41 04CA  
                                 i2u11_48 04D4                                   i2u11_49 04E8  
                                 i2u22_40 0022                                   i2u22_41 001E  
                                 i2u23_40 0030                                   i2u23_41 002C  
                                 i2u24_40 0046                                   i2u24_41 0042  
                                 i2u25_40 0054                                   i2u25_41 0050  
                                 i2u26_40 0062                                   i2u26_41 005E  
                                 _OSCTUNE 000ED8                                   _PWM3DCH 000FA3  
                                 _PWM3DCL 000FA2                                   _PWM4DCH 000FA0  
                                 _PWM4DCL 000F9F                                   _PWM3CON 000FA4  
                                 _PWM4CON 000FA1                                   _SLRCONA 000F09  
                                 _SLRCONB 000F11                                   _SLRCONC 000F19  
                            ??_TMR4_Start 0013                      appHandler@greenValue 000F  
                               ?_setGreen 0017                                   __Hparam 0000  
                                 __Lparam 0000                                   __pcinit 05FA  
                         __size_of_msTick 0016                        __end_of_TMR4_Start 06AE  
                                 _appInit 0546                                   __ramtop 0F00  
                         __size_of_setRed 0048                                   __ptext0 05C2  
                                 __ptext1 0546                                   __ptext2 007A  
                                 __ptext3 033E                                   __ptext4 0450  
                                 __ptext5 0386                                   __ptext6 0484  
                                 __ptext7 03CE                                   __ptext8 04EA  
                                 __ptext9 06A4                     _OSCILLATOR_Initialize 0614  
                                 _msTicks 0001                                   _setBlue 03CE  
                               _T4CONbits 000FB6                  ??_PIN_MANAGER_Initialize 0013  
       __size_of_TMR4_SetInterruptHandler 000A                 ?_TMR4_SetInterruptHandler 0013  
                               _T4HLTbits 000FB7                __size_of_SYSTEM_Initialize 0026  
                        ?_TMR4_StartTimer 0011                      end_of_initialization 0606  
          ??_TMR4_DefaultInterruptHandler 0011                                 _T4RSTbits 000FB9  
                           __Lmediumconst 0000                               ?_appHandler 0011  
                              ??_setGreen 0019                                   postinc0 000FEE  
                                 postinc2 000FDE               __size_of_PWM4_LoadDutyValue 0034  
                _TMR0_SetInterruptHandler 069A                               _CCP1CONbits 000FAB  
              __end_of_PWM3_LoadDutyValue 0484                  __size_of_PWM1_Initialize 0014  
                    _timer0ReloadVal16bit 0021              __end_of_INTERRUPT_Initialize 06B2  
                       __size_of_TMR0_ISR 0012                         __size_of_TMR4_ISR 0032  
                  ?_OSCILLATOR_Initialize 0011                            __end_of_msTick 0642  
                          __end_of_setRed 0386                       __size_of_appHandler 026C  
                     start_initialization 05FA                  __size_of_TMR0_Initialize 003A  
         __size_of_PIN_MANAGER_Initialize 0058                  __size_of_PWM3_Initialize 0014  
                        ??_PMD_Initialize 0013                               _CCPTMRSbits 000FAD  
                  __size_of_TMR0_CallBack 002E                                  ??_msTick 0011  
                                ??_setRed 0019                               __pbssCOMRAM 0001  
                            setBlue@value 0015                  __size_of_PWM4_Initialize 0014  
                   _TMR0_InterruptHandler 001F               __size_of_PWM1_LoadDutyValue 002E  
                  _PIN_MANAGER_Initialize 02E6                       appHandler@blueValue 000B  
                               __pintcode 0008                         __size_of_setGreen 0048  
        __end_of_TMR4_SetInterruptHandler 069A                                  ?_appInit 0011  
                       ??_PWM1_Initialize 0013              ??_INTERRUPT_InterruptManager 0011  
                                ?_setBlue 0015                  __size_of_TMR4_Initialize 002A  
                           _TMR0_CallBack 0518                                  _T4CLKCON 000FB8  
                    _INTERRUPT_Initialize 06AE                         ??_TMR0_Initialize 0015  
                            ??_appHandler 001B                                  _PIE0bits 000EBD  
                                _PIE4bits 000EC1       __size_of_INTERRUPT_InterruptManager 006E  
              ??_TMR0_SetInterruptHandler 0015                                  _PIR0bits 000EC5  
                                _PIR4bits 000EC9                                  _TMR0_ISR 067E  
                                _TMR4_ISR 04B8                         ??_PWM3_Initialize 0013  
                               fp__msTick 0000                        __end_of_appHandler 02E6  
                          ?_TMR0_CallBack 0011                     ?_INTERRUPT_Initialize 0011  
                       ??_PWM4_Initialize 0013                  __size_of_TMR4_StartTimer 0006  
                                __Hrparam 0000                           appHandler@state 0009  
              __end_of_PWM4_LoadDutyValue 04B8                                  __Lrparam 0000  
                 ??_OSCILLATOR_Initialize 0013                  _TMR4_SetInterruptHandler 0690  
                        __size_of_appInit 002C                        _PWM3_LoadDutyValue 0450  
                              _T0CON0bits 000FD4                          __size_of_setBlue 0048  
                                __ptext10 06AA                                  __ptext11 059C  
                                __ptext20 02E6                                  __ptext12 0572  
                                __ptext21 0614                                  __ptext13 0690  
                                __ptext30 0000                                  __ptext22 06AE  
                                __ptext14 0416                                  __ptext15 069A  
                                __ptext24 04B8                                  __ptext16 0642  
                                __ptext25 06B2                                  __ptext17 0656  
                                __ptext26 067E                                  __ptext18 066A  
                                __ptext27 0518                                  __ptext19 05DE  
                                __ptext28 06B4                                  __ptext29 062C  
                     ?_PWM3_LoadDutyValue 0013                         ??_TMR4_Initialize 0015  
                           __size_of_main 001C      __end_of_TMR0_DefaultInterruptHandler 06B6  
   __size_of_TMR0_DefaultInterruptHandler 0002              _TMR0_DefaultInterruptHandler 06B4  
                                _setGreen 0386                      ??_PWM3_LoadDutyValue 0015  
                                isa$xinst 000000                                  int$flags 0023  
      __end_of_INTERRUPT_InterruptManager 0076                _INTERRUPT_InterruptManager 0008  
                              _INTCONbits 000FF2                           ??_TMR0_CallBack 0011  
                  ??_INTERRUPT_Initialize 0013                                  intlevel2 0000  
                 ?_PIN_MANAGER_Initialize 0011                           _PWM1_Initialize 066A  
         fp__TMR0_DefaultInterruptHandler 0000             ?_TMR0_DefaultInterruptHandler 0011  
             PWM3_LoadDutyValue@dutyValue 0013                         ??_TMR4_StartTimer 0013  
                         _TMR0_Initialize 0416                                _TMR4_Start 06AA  
          __end_of_PIN_MANAGER_Initialize 033E                __end_of_PWM1_LoadDutyValue 0518  
                         _PWM3_Initialize 0656  
