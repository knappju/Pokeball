

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Dec 27 15:21:11 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F26Q10
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48  0000                     
    49                           ; Version 2.30
    50                           ; Generated 20/08/2020 GMT
    51                           ; 
    52                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F26Q10 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     
    85                           	psect	nvCOMRAM
    86  000032                     __pnvCOMRAM:
    87                           	callstack 0
    88  000032                     _TMR4_InterruptHandler:
    89                           	callstack 0
    90  000032                     	ds	2
    91  000034                     _TMR0_InterruptHandler:
    92                           	callstack 0
    93  000034                     	ds	2
    94  000036                     _timer0ReloadVal16bit:
    95                           	callstack 0
    96  000036                     	ds	2
    97  0000                     _PIR4bits	set	3785
    98  0000                     _PIE4bits	set	3777
    99  0000                     _PIR0bits	set	3781
   100  0000                     _PIE0bits	set	3773
   101  0000                     _PMD5	set	3809
   102  0000                     _PMD4	set	3808
   103  0000                     _PMD3	set	3807
   104  0000                     _PMD2	set	3806
   105  0000                     _PMD1	set	3805
   106  0000                     _PMD0	set	3804
   107  0000                     _OSCTUNE	set	3800
   108  0000                     _OSCFRQ	set	3801
   109  0000                     _OSCEN	set	3799
   110  0000                     _OSCCON3	set	3797
   111  0000                     _OSCCON1	set	3795
   112  0000                     _RC5PPS	set	3831
   113  0000                     _RC1PPS	set	3827
   114  0000                     _RC3PPS	set	3829
   115  0000                     _INLVLE	set	3877
   116  0000                     _INLVLC	set	3864
   117  0000                     _INLVLB	set	3856
   118  0000                     _INLVLA	set	3848
   119  0000                     _SLRCONC	set	3865
   120  0000                     _SLRCONB	set	3857
   121  0000                     _SLRCONA	set	3849
   122  0000                     _ODCONC	set	3866
   123  0000                     _ODCONB	set	3858
   124  0000                     _ODCONA	set	3850
   125  0000                     _WPUC	set	3867
   126  0000                     _WPUA	set	3851
   127  0000                     _WPUB	set	3859
   128  0000                     _WPUE	set	3880
   129  0000                     _ANSELA	set	3852
   130  0000                     _ANSELB	set	3860
   131  0000                     _ANSELC	set	3868
   132  0000                     _PORTAbits	set	3980
   133  0000                     _PR4	set	4021
   134  0000                     _TMR4	set	4020
   135  0000                     _T4CONbits	set	4022
   136  0000                     _T4RSTbits	set	4025
   137  0000                     _T4HLTbits	set	4023
   138  0000                     _T4CON	set	4022
   139  0000                     _T4TMR	set	4020
   140  0000                     _T4PR	set	4021
   141  0000                     _T4RST	set	4025
   142  0000                     _T4HLT	set	4023
   143  0000                     _T4CLKCON	set	4024
   144  0000                     _PWM4DCL	set	3999
   145  0000                     _PWM4DCH	set	4000
   146  0000                     _PWM4CON	set	4001
   147  0000                     _PWM3DCL	set	4002
   148  0000                     _PWM3DCH	set	4003
   149  0000                     _PWM3CON	set	4004
   150  0000                     _CCP1CONbits	set	4011
   151  0000                     _CCPTMRSbits	set	4013
   152  0000                     _CCPR1L	set	4009
   153  0000                     _CCPR1H	set	4010
   154  0000                     _CCP1CON	set	4011
   155  0000                     _T0CON0bits	set	4052
   156  0000                     _T0CON0	set	4052
   157  0000                     _TMR0L	set	4050
   158  0000                     _TMR0H	set	4051
   159  0000                     _T0CON1	set	4053
   160  0000                     _INTCONbits	set	4082
   161  0000                     _TRISC	set	3977
   162  0000                     _TRISB	set	3976
   163  0000                     _TRISA	set	3975
   164  0000                     _LATC	set	3972
   165  0000                     _LATB	set	3971
   166  0000                     _LATA	set	3970
   167                           
   168                           ; #config settings
   169                           
   170                           	psect	cinit
   171  000518                     __pcinit:
   172                           	callstack 0
   173  000518                     start_initialization:
   174                           	callstack 0
   175  000518                     __initialization:
   176                           	callstack 0
   177                           
   178                           ; Clear objects allocated to COMRAM (36 bytes)
   179  000518  EE00  F001         	lfsr	0,__pbssCOMRAM
   180  00051C  0E24               	movlw	36
   181  00051E                     clear_0:
   182  00051E  6AEE               	clrf	postinc0,c
   183  000520  06E8               	decf	wreg,f,c
   184  000522  E1FD               	bnz	clear_0
   185  000524                     end_of_initialization:
   186                           	callstack 0
   187  000524                     __end_of__initialization:
   188                           	callstack 0
   189  000524  9038               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   190  000526  9238               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   191  000528  0E00               	movlw	low (__Lmediumconst shr (0+16))
   192  00052A  6EF8               	movwf	tblptru,c
   193  00052C  0100               	movlb	0
   194  00052E  EF70  F002         	goto	_main	;jump to C main() function
   195                           
   196                           	psect	bssCOMRAM
   197  000001                     __pbssCOMRAM:
   198                           	callstack 0
   199  000001                     _cButton:
   200                           	callstack 0
   201  000001                     	ds	18
   202  000013                     _msTicks:
   203                           	callstack 0
   204  000013                     	ds	8
   205  00001B                     rgbButtonHandler@debounceBuffer:
   206                           	callstack 0
   207  00001B                     	ds	2
   208  00001D                     appHandler@state:
   209                           	callstack 0
   210  00001D                     	ds	2
   211  00001F                     	ds	2
   212  000021                     	ds	2
   213  000023                     	ds	2
   214                           
   215                           	psect	cstackCOMRAM
   216  000025                     __pcstackCOMRAM:
   217                           	callstack 0
   218  000025                     ??_INTERRUPT_InterruptManager:
   219  000025                     
   220                           ; 1 bytes @ 0x0
   221  000025                     	ds	2
   222  000027                     setColor@green:
   223                           	callstack 0
   224  000027                     TMR0_SetInterruptHandler@InterruptHandler:
   225                           	callstack 0
   226  000027                     PWM1_LoadDutyValue@dutyValue:
   227                           	callstack 0
   228  000027                     PWM3_LoadDutyValue@dutyValue:
   229                           	callstack 0
   230  000027                     PWM4_LoadDutyValue@dutyValue:
   231                           	callstack 0
   232  000027                     TMR4_SetInterruptHandler@InterruptHandler:
   233                           	callstack 0
   234                           
   235                           ; 2 bytes @ 0x2
   236  000027                     	ds	1
   237  000028                     setColor@blue:
   238                           	callstack 0
   239                           
   240                           ; 1 bytes @ 0x3
   241  000028                     	ds	1
   242  000029                     ??_TMR0_Initialize:
   243  000029                     ??_PWM3_LoadDutyValue:
   244  000029                     ??_PWM4_LoadDutyValue:
   245  000029                     setColor@red:
   246                           	callstack 0
   247                           
   248                           ; 1 bytes @ 0x4
   249  000029                     	ds	2
   250  00002B                     ??_updateColor:
   251  00002B                     
   252                           ; 1 bytes @ 0x6
   253  00002B                     	ds	1
   254  00002C                     updateColor@calculatedColorValue:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0x7
   258  00002C                     	ds	2
   259  00002E                     ??_rgbButtonHandler:
   260                           
   261                           ; 1 bytes @ 0x9
   262  00002E                     	ds	2
   263  000030                     ??_appHandler:
   264                           
   265                           ; 1 bytes @ 0xB
   266  000030                     	ds	2
   267  000032                     
   268                           ; 1 bytes @ 0xD
   269 ;;
   270 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   271 ;;
   272 ;; *************** function _main *****************
   273 ;; Defined at:
   274 ;;		line 52 in file "main.c"
   275 ;; Parameters:    Size  Location     Type
   276 ;;		None
   277 ;; Auto vars:     Size  Location     Type
   278 ;;		None
   279 ;; Return value:  Size  Location     Type
   280 ;;                  1    wreg      void 
   281 ;; Registers used:
   282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   283 ;; Tracked objects:
   284 ;;		On entry : 0/0
   285 ;;		On exit  : 0/0
   286 ;;		Unchanged: 0/0
   287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   292 ;;Total ram usage:        0 bytes
   293 ;; Hardware stack levels required when called: 9
   294 ;; This function calls:
   295 ;;		_SYSTEM_Initialize
   296 ;;		_TMR4_StartTimer
   297 ;;		_appHandler
   298 ;;		_appInit
   299 ;; This function is called by:
   300 ;;		Startup code after reset
   301 ;; This function uses a non-reentrant model
   302 ;;
   303                           
   304                           	psect	text0
   305  0004E0                     __ptext0:
   306                           	callstack 0
   307  0004E0                     _main:
   308                           	callstack 22
   309  0004E0                     
   310                           ;main.c: 55:     SYSTEM_Initialize();
   311  0004E0  EC4A  F002         	call	_SYSTEM_Initialize	;wreg free
   312  0004E4                     
   313                           ;main.c: 56:     TMR4_StartTimer();
   314  0004E4  ECEB  F002         	call	_TMR4_StartTimer	;wreg free
   315  0004E8                     
   316                           ;main.c: 57:     appInit();
   317  0004E8  EC1F  F002         	call	_appInit	;wreg free
   318  0004EC                     
   319                           ;main.c: 64:     (INTCONbits.GIE = 1);
   320  0004EC  8EF2               	bsf	242,7,c	;volatile
   321  0004EE                     
   322                           ;main.c: 70:     (INTCONbits.PEIE = 1);
   323  0004EE  8CF2               	bsf	242,6,c	;volatile
   324  0004F0                     l1602:
   325                           
   326                           ;main.c: 78:     {;main.c: 79:         appHandler();
   327  0004F0  EC3D  F000         	call	_appHandler	;wreg free
   328  0004F4  EF78  F002         	goto	l1602
   329  0004F8  EF3B  F000         	goto	start
   330  0004FC                     __end_of_main:
   331                           	callstack 0
   332                           
   333 ;; *************** function _appInit *****************
   334 ;; Defined at:
   335 ;;		line 45 in file "app.c"
   336 ;; Parameters:    Size  Location     Type
   337 ;;		None
   338 ;; Auto vars:     Size  Location     Type
   339 ;;		None
   340 ;; Return value:  Size  Location     Type
   341 ;;                  1    wreg      void 
   342 ;; Registers used:
   343 ;;		wreg, status,2, status,0, cstack
   344 ;; Tracked objects:
   345 ;;		On entry : 0/0
   346 ;;		On exit  : 0/0
   347 ;;		Unchanged: 0/0
   348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   353 ;;Total ram usage:        0 bytes
   354 ;; Hardware stack levels used: 1
   355 ;; Hardware stack levels required when called: 6
   356 ;; This function calls:
   357 ;;		_PWM1_LoadDutyValue
   358 ;;		_PWM3_LoadDutyValue
   359 ;;		_PWM4_LoadDutyValue
   360 ;;		_TMR0_SetInterruptHandler
   361 ;; This function is called by:
   362 ;;		_main
   363 ;; This function uses a non-reentrant model
   364 ;;
   365                           
   366                           	psect	text1
   367  00043E                     __ptext1:
   368                           	callstack 0
   369  00043E                     _appInit:
   370                           	callstack 24
   371  00043E                     
   372                           ;app.c: 46:     TMR0_SetInterruptHandler(msTick);
   373  00043E  0E32               	movlw	low _msTick
   374  000440  6E27               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
   375  000442  0E05               	movlw	high _msTick
   376  000444  6E28               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
   377  000446  ECE6  F002         	call	_TMR0_SetInterruptHandler	;wreg free
   378                           
   379                           ;app.c: 48:     PWM4_LoadDutyValue(0xFFFF);
   380  00044A  0EFF               	movlw	255
   381  00044C  6E28               	movwf	(PWM4_LoadDutyValue@dutyValue+1)^0,c
   382  00044E  6827               	setf	PWM4_LoadDutyValue@dutyValue^0,c
   383  000450  ECA4  F001         	call	_PWM4_LoadDutyValue	;wreg free
   384                           
   385                           ;app.c: 49:     PWM3_LoadDutyValue(0xFFFF);
   386  000454  0EFF               	movlw	255
   387  000456  6E28               	movwf	(PWM3_LoadDutyValue@dutyValue+1)^0,c
   388  000458  6827               	setf	PWM3_LoadDutyValue@dutyValue^0,c
   389  00045A  ECBE  F001         	call	_PWM3_LoadDutyValue	;wreg free
   390                           
   391                           ;app.c: 50:     PWM1_LoadDutyValue(0xFFFF);
   392  00045E  0EFF               	movlw	255
   393  000460  6E28               	movwf	(PWM1_LoadDutyValue@dutyValue+1)^0,c
   394  000462  6827               	setf	PWM1_LoadDutyValue@dutyValue^0,c
   395  000464  ECF1  F001         	call	_PWM1_LoadDutyValue	;wreg free
   396  000468  0012               	return		;funcret
   397  00046A                     __end_of_appInit:
   398                           	callstack 0
   399                           
   400 ;; *************** function _appHandler *****************
   401 ;; Defined at:
   402 ;;		line 53 in file "app.c"
   403 ;; Parameters:    Size  Location     Type
   404 ;;		None
   405 ;; Auto vars:     Size  Location     Type
   406 ;;		None
   407 ;; Return value:  Size  Location     Type
   408 ;;                  1    wreg      void 
   409 ;; Registers used:
   410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   411 ;; Tracked objects:
   412 ;;		On entry : 0/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   418 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   419 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   420 ;;Total ram usage:        2 bytes
   421 ;; Hardware stack levels used: 1
   422 ;; Hardware stack levels required when called: 8
   423 ;; This function calls:
   424 ;;		_getIsButtonChanging
   425 ;;		_getIsButtonPressed
   426 ;;		_rgbButtonHandler
   427 ;;		_setColor
   428 ;; This function is called by:
   429 ;;		_main
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433                           	psect	text2
   434  00007A                     __ptext2:
   435                           	callstack 0
   436  00007A                     _appHandler:
   437                           	callstack 22
   438  00007A                     
   439                           ;app.c: 54:     static uint16_t greenValue = 0;;app.c: 55:     static uint16_t redValue 
      +                          = 0;;app.c: 56:     static uint16_t blueValue = 0;;app.c: 57:     static int state = 0;;
      +                          app.c: 70:     rgbButtonHandler();
   440  00007A  ECCA  F000         	call	_rgbButtonHandler	;wreg free
   441  00007E                     
   442                           ;app.c: 72:     if(getIsButtonPressed() && getIsButtonChanging()){
   443  00007E  ECEE  F002         	call	_getIsButtonPressed	;wreg free
   444  000082  0900               	iorlw	0
   445  000084  B4D8               	btfsc	status,2,c
   446  000086  EF47  F000         	goto	u361
   447  00008A  EF49  F000         	goto	u360
   448  00008E                     u361:
   449  00008E  EF67  F000         	goto	l1574
   450  000092                     u360:
   451  000092  ECF0  F002         	call	_getIsButtonChanging	;wreg free
   452  000096  0900               	iorlw	0
   453  000098  B4D8               	btfsc	status,2,c
   454  00009A  EF51  F000         	goto	u371
   455  00009E  EF53  F000         	goto	u370
   456  0000A2                     u371:
   457  0000A2  EF67  F000         	goto	l1574
   458  0000A6                     u370:
   459  0000A6                     
   460                           ;app.c: 73:         state++;
   461  0000A6  4A1D               	infsnz	appHandler@state^0,f,c
   462  0000A8  2A1E               	incf	(appHandler@state+1)^0,f,c
   463  0000AA                     
   464                           ;app.c: 74:         if(state > 2){
   465  0000AA  BE1E               	btfsc	(appHandler@state+1)^0,7,c
   466  0000AC  EF61  F000         	goto	u381
   467  0000B0  501E               	movf	(appHandler@state+1)^0,w,c
   468  0000B2  E109               	bnz	u380
   469  0000B4  0E03               	movlw	3
   470  0000B6  5C1D               	subwf	appHandler@state^0,w,c
   471  0000B8  A0D8               	btfss	status,0,c
   472  0000BA  EF61  F000         	goto	u381
   473  0000BE  EF63  F000         	goto	u380
   474  0000C2                     u381:
   475  0000C2  EF67  F000         	goto	l1574
   476  0000C6                     u380:
   477  0000C6                     
   478                           ;app.c: 75:             state = 0;
   479  0000C6  0E00               	movlw	0
   480  0000C8  6E1E               	movwf	(appHandler@state+1)^0,c
   481  0000CA  0E00               	movlw	0
   482  0000CC  6E1D               	movwf	appHandler@state^0,c
   483  0000CE                     l1574:
   484                           
   485                           ;app.c: 78:     if(msTicks >= 50){
   486  0000CE  501A               	movf	(_msTicks+7)^0,w,c
   487  0000D0  1019               	iorwf	(_msTicks+6)^0,w,c
   488  0000D2  1018               	iorwf	(_msTicks+5)^0,w,c
   489  0000D4  1017               	iorwf	(_msTicks+4)^0,w,c
   490  0000D6  1016               	iorwf	(_msTicks+3)^0,w,c
   491  0000D8  1015               	iorwf	(_msTicks+2)^0,w,c
   492  0000DA  1014               	iorwf	(_msTicks+1)^0,w,c
   493  0000DC  E109               	bnz	u390
   494  0000DE  0E32               	movlw	50
   495  0000E0  5C13               	subwf	_msTicks^0,w,c
   496  0000E2  A0D8               	btfss	status,0,c
   497  0000E4  EF76  F000         	goto	u391
   498  0000E8  EF78  F000         	goto	u390
   499  0000EC                     u391:
   500  0000EC  EFC9  F000         	goto	l387
   501  0000F0                     u390:
   502  0000F0                     
   503                           ;app.c: 79:         msTicks = 0;
   504  0000F0  EE20  F013         	lfsr	2,_msTicks
   505  0000F4  0E07               	movlw	7
   506  0000F6                     u401:
   507  0000F6  6ADE               	clrf	postinc2,c
   508  0000F8  06E8               	decf	wreg,f,c
   509  0000FA  E2FD               	bc	u401
   510                           
   511                           ;app.c: 81:         switch(state){
   512  0000FC  EF9B  F000         	goto	l1586
   513  000100                     l1578:
   514                           
   515                           ;app.c: 83:                 setColor(0x00,0x00,0xFF);
   516  000100  0E00               	movlw	0
   517  000102  6E27               	movwf	setColor@green^0,c
   518  000104  0EFF               	movlw	255
   519  000106  6E28               	movwf	setColor@blue^0,c
   520  000108  0E00               	movlw	0
   521  00010A  ECD9  F002         	call	_setColor
   522                           
   523                           ;app.c: 90:                 break;
   524  00010E  EFC9  F000         	goto	l387
   525  000112                     l1580:
   526                           
   527                           ;app.c: 92:                 setColor(0xFF,0x00,0x00);
   528  000112  0E00               	movlw	0
   529  000114  6E27               	movwf	setColor@green^0,c
   530  000116  0E00               	movlw	0
   531  000118  6E28               	movwf	setColor@blue^0,c
   532  00011A  0EFF               	movlw	255
   533  00011C  ECD9  F002         	call	_setColor
   534                           
   535                           ;app.c: 99:                 break;
   536  000120  EFC9  F000         	goto	l387
   537  000124                     l1582:
   538                           
   539                           ;app.c: 101:                 setColor(0x00,0xFF,0x00);
   540  000124  0EFF               	movlw	255
   541  000126  6E27               	movwf	setColor@green^0,c
   542  000128  0E00               	movlw	0
   543  00012A  6E28               	movwf	setColor@blue^0,c
   544  00012C  0E00               	movlw	0
   545  00012E  ECD9  F002         	call	_setColor
   546                           
   547                           ;app.c: 108:                 break;
   548  000132  EFC9  F000         	goto	l387
   549  000136                     l1586:
   550  000136  C01D  F030         	movff	appHandler@state,??_appHandler
   551  00013A  C01E  F031         	movff	appHandler@state+1,??_appHandler+1
   552                           
   553                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   554                           ; Switch size 1, requested type "simple"
   555                           ; Number of cases is 1, Range of values is 0 to 0
   556                           ; switch strategies available:
   557                           ; Name         Instructions Cycles
   558                           ; simple_byte            4     3 (average)
   559                           ;	Chosen strategy is simple_byte
   560  00013E  5031               	movf	(??_appHandler+1)^0,w,c
   561  000140  0A00               	xorlw	0	; case 0
   562  000142  B4D8               	btfsc	status,2,c
   563  000144  EFA6  F000         	goto	l1648
   564  000148  EFC9  F000         	goto	l387
   565  00014C                     l1648:
   566                           
   567                           ; Switch size 1, requested type "simple"
   568                           ; Number of cases is 8, Range of values is 0 to 7
   569                           ; switch strategies available:
   570                           ; Name         Instructions Cycles
   571                           ; simple_byte           25    13 (average)
   572                           ;	Chosen strategy is simple_byte
   573  00014C  5030               	movf	??_appHandler^0,w,c
   574  00014E  0A00               	xorlw	0	; case 0
   575  000150  B4D8               	btfsc	status,2,c
   576  000152  EF80  F000         	goto	l1578
   577  000156  0A01               	xorlw	1	; case 1
   578  000158  B4D8               	btfsc	status,2,c
   579  00015A  EF89  F000         	goto	l1580
   580  00015E  0A03               	xorlw	3	; case 2
   581  000160  B4D8               	btfsc	status,2,c
   582  000162  EF92  F000         	goto	l1582
   583  000166  0A01               	xorlw	1	; case 3
   584  000168  B4D8               	btfsc	status,2,c
   585  00016A  EFC9  F000         	goto	l387
   586  00016E  0A07               	xorlw	7	; case 4
   587  000170  B4D8               	btfsc	status,2,c
   588  000172  EFC9  F000         	goto	l387
   589  000176  0A01               	xorlw	1	; case 5
   590  000178  B4D8               	btfsc	status,2,c
   591  00017A  EFC9  F000         	goto	l387
   592  00017E  0A03               	xorlw	3	; case 6
   593  000180  B4D8               	btfsc	status,2,c
   594  000182  EFC9  F000         	goto	l387
   595  000186  0A01               	xorlw	1	; case 7
   596  000188  B4D8               	btfsc	status,2,c
   597  00018A  EFC9  F000         	goto	l387
   598  00018E  EFC9  F000         	goto	l387
   599  000192                     l387:
   600  000192  0012               	return		;funcret
   601  000194                     __end_of_appHandler:
   602                           	callstack 0
   603                           
   604 ;; *************** function _setColor *****************
   605 ;; Defined at:
   606 ;;		line 108 in file "rgbButton.c"
   607 ;; Parameters:    Size  Location     Type
   608 ;;  red             1    wreg     unsigned char 
   609 ;;  green           1    2[COMRAM] unsigned char 
   610 ;;  blue            1    3[COMRAM] unsigned char 
   611 ;; Auto vars:     Size  Location     Type
   612 ;;  red             1    4[COMRAM] unsigned char 
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   622 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   623 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   625 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   626 ;;Total ram usage:        3 bytes
   627 ;; Hardware stack levels used: 1
   628 ;; Hardware stack levels required when called: 5
   629 ;; This function calls:
   630 ;;		Nothing
   631 ;; This function is called by:
   632 ;;		_appHandler
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           	psect	text3
   637  0005B2                     __ptext3:
   638                           	callstack 0
   639  0005B2                     _setColor:
   640                           	callstack 24
   641                           
   642                           ;incstack = 0
   643                           ;setColor@red stored from wreg
   644  0005B2  6E29               	movwf	setColor@red^0,c
   645  0005B4                     
   646                           ;rgbButton.c: 109:     cButton.color.red = red;
   647  0005B4  C029  F010         	movff	setColor@red,_cButton+15
   648  0005B8                     
   649                           ;rgbButton.c: 110:     cButton.color.green = green;
   650  0005B8  C027  F011         	movff	setColor@green,_cButton+16
   651  0005BC                     
   652                           ;rgbButton.c: 111:     cButton.color.blue = blue;
   653  0005BC  C028  F012         	movff	setColor@blue,_cButton+17
   654  0005C0  0012               	return		;funcret
   655  0005C2                     __end_of_setColor:
   656                           	callstack 0
   657                           
   658 ;; *************** function _rgbButtonHandler *****************
   659 ;; Defined at:
   660 ;;		line 20 in file "rgbButton.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;		None
   663 ;; Auto vars:     Size  Location     Type
   664 ;;		None
   665 ;; Return value:  Size  Location     Type
   666 ;;                  1    wreg      void 
   667 ;; Registers used:
   668 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   676 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   677 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   678 ;;Total ram usage:        2 bytes
   679 ;; Hardware stack levels used: 1
   680 ;; Hardware stack levels required when called: 7
   681 ;; This function calls:
   682 ;;		_updateColor
   683 ;; This function is called by:
   684 ;;		_appHandler
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688                           	psect	text4
   689  000194                     __ptext4:
   690                           	callstack 0
   691  000194                     _rgbButtonHandler:
   692                           	callstack 22
   693  000194                     
   694                           ;rgbButton.c: 21:     static uint16_t debounceBuffer = 0x0000;;rgbButton.c: 24:     if(c
      +                          Button.ticks.colorRefreshTicks >= 5){
   695  000194  500F               	movf	(_cButton+14)^0,w,c
   696  000196  100E               	iorwf	(_cButton+13)^0,w,c
   697  000198  100D               	iorwf	(_cButton+12)^0,w,c
   698  00019A  E109               	bnz	u310
   699  00019C  0E05               	movlw	5
   700  00019E  5C0C               	subwf	(_cButton+11)^0,w,c
   701  0001A0  A0D8               	btfss	status,0,c
   702  0001A2  EFD5  F000         	goto	u311
   703  0001A6  EFD7  F000         	goto	u310
   704  0001AA                     u311:
   705  0001AA  EFE1  F000         	goto	l1518
   706  0001AE                     u310:
   707  0001AE                     
   708                           ;rgbButton.c: 25:         cButton.ticks.colorRefreshTicks = 0;
   709  0001AE  0E00               	movlw	0
   710  0001B0  6E0C               	movwf	(_cButton+11)^0,c
   711  0001B2  0E00               	movlw	0
   712  0001B4  6E0D               	movwf	(_cButton+12)^0,c
   713  0001B6  0E00               	movlw	0
   714  0001B8  6E0E               	movwf	(_cButton+13)^0,c
   715  0001BA  0E00               	movlw	0
   716  0001BC  6E0F               	movwf	(_cButton+14)^0,c
   717  0001BE                     
   718                           ;rgbButton.c: 26:         updateColor();
   719  0001BE  EC2C  F001         	call	_updateColor	;wreg free
   720  0001C2                     l1518:
   721                           
   722                           ;rgbButton.c: 31:         cButton.ticks.debounceTicks = 0;
   723  0001C2  0E00               	movlw	0
   724  0001C4  6E08               	movwf	(_cButton+7)^0,c
   725  0001C6  0E00               	movlw	0
   726  0001C8  6E09               	movwf	(_cButton+8)^0,c
   727  0001CA  0E00               	movlw	0
   728  0001CC  6E0A               	movwf	(_cButton+9)^0,c
   729  0001CE  0E00               	movlw	0
   730  0001D0  6E0B               	movwf	(_cButton+10)^0,c
   731  0001D2                     
   732                           ;rgbButton.c: 32:         cButton.buttonStates.lastIsPressed = cButton.buttonStates.isPr
      +                          essed;
   733  0001D2  C001  F002         	movff	_cButton,_cButton+1
   734  0001D6                     
   735                           ;rgbButton.c: 34:         debounceBuffer = (debounceBuffer << 1) | !PORTAbits.RA6 | 0xFF
      +                          FE;
   736  0001D6  AC8C               	btfss	140,6,c	;volatile
   737  0001D8  EFF0  F000         	goto	u321
   738  0001DC  EFF3  F000         	goto	u320
   739  0001E0                     u321:
   740  0001E0  0E01               	movlw	1
   741  0001E2  EFF4  F000         	goto	u330
   742  0001E6                     u320:
   743  0001E6  0E00               	movlw	0
   744  0001E8                     u330:
   745  0001E8  C01B  F02E         	movff	rgbButtonHandler@debounceBuffer,??_rgbButtonHandler
   746  0001EC  C01C  F02F         	movff	rgbButtonHandler@debounceBuffer+1,??_rgbButtonHandler+1
   747  0001F0  90D8               	bcf	status,0,c
   748  0001F2  362E               	rlcf	??_rgbButtonHandler^0,f,c
   749  0001F4  362F               	rlcf	(??_rgbButtonHandler+1)^0,f,c
   750  0001F6  122E               	iorwf	??_rgbButtonHandler^0,f,c
   751  0001F8  0E00               	movlw	0
   752  0001FA  122F               	iorwf	(??_rgbButtonHandler+1)^0,f,c
   753  0001FC  0EFE               	movlw	254
   754  0001FE  102E               	iorwf	??_rgbButtonHandler^0,w,c
   755  000200  6E1B               	movwf	rgbButtonHandler@debounceBuffer^0,c
   756  000202  0EFF               	movlw	255
   757  000204  102F               	iorwf	(??_rgbButtonHandler+1)^0,w,c
   758  000206  6E1C               	movwf	(rgbButtonHandler@debounceBuffer+1)^0,c
   759  000208                     
   760                           ;rgbButton.c: 36:         if(debounceBuffer == 0xffff){
   761  000208  281B               	incf	rgbButtonHandler@debounceBuffer^0,w,c
   762  00020A  E106               	bnz	u341
   763  00020C  281C               	incf	(rgbButtonHandler@debounceBuffer+1)^0,w,c
   764  00020E  A4D8               	btfss	status,2,c
   765  000210  EF0C  F001         	goto	u341
   766  000214  EF0E  F001         	goto	u340
   767  000218                     u341:
   768  000218  EF12  F001         	goto	l1528
   769  00021C                     u340:
   770  00021C                     
   771                           ;rgbButton.c: 37:             cButton.buttonStates.isPressed = 1;
   772  00021C  0E01               	movlw	1
   773  00021E  6E01               	movwf	_cButton^0,c
   774                           
   775                           ;rgbButton.c: 38:         }
   776  000220  EF14  F001         	goto	l1530
   777  000224                     l1528:
   778                           
   779                           ;rgbButton.c: 40:             cButton.buttonStates.isPressed = 0;
   780  000224  0E00               	movlw	0
   781  000226  6E01               	movwf	_cButton^0,c
   782  000228                     l1530:
   783                           
   784                           ;rgbButton.c: 42:         if(cButton.buttonStates.isPressed != cButton.buttonStates.last
      +                          IsPressed){
   785  000228  5001               	movf	_cButton^0,w,c
   786  00022A  1802               	xorwf	(_cButton+1)^0,w,c
   787  00022C  B4D8               	btfsc	status,2,c
   788  00022E  EF1B  F001         	goto	u351
   789  000232  EF1D  F001         	goto	u350
   790  000236                     u351:
   791  000236  EF29  F001         	goto	l1534
   792  00023A                     u350:
   793  00023A                     
   794                           ;rgbButton.c: 43:             cButton.buttonStates.changing = 1;
   795  00023A  0E01               	movlw	1
   796  00023C  6E03               	movwf	(_cButton+2)^0,c
   797                           
   798                           ;rgbButton.c: 44:             cButton.ticks.buttonPressedTicks = 0;
   799  00023E  0E00               	movlw	0
   800  000240  6E04               	movwf	(_cButton+3)^0,c
   801  000242  0E00               	movlw	0
   802  000244  6E05               	movwf	(_cButton+4)^0,c
   803  000246  0E00               	movlw	0
   804  000248  6E06               	movwf	(_cButton+5)^0,c
   805  00024A  0E00               	movlw	0
   806  00024C  6E07               	movwf	(_cButton+6)^0,c
   807                           
   808                           ;rgbButton.c: 45:         }
   809  00024E  EF2B  F001         	goto	l424
   810  000252                     l1534:
   811                           
   812                           ;rgbButton.c: 47:             cButton.buttonStates.changing = 0;
   813  000252  0E00               	movlw	0
   814  000254  6E03               	movwf	(_cButton+2)^0,c
   815  000256                     l424:
   816  000256  0012               	return		;funcret
   817  000258                     __end_of_rgbButtonHandler:
   818                           	callstack 0
   819                           
   820 ;; *************** function _updateColor *****************
   821 ;; Defined at:
   822 ;;		line 121 in file "rgbButton.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;		None
   825 ;; Auto vars:     Size  Location     Type
   826 ;;  calculatedCo    2    7[COMRAM] unsigned short 
   827 ;; Return value:  Size  Location     Type
   828 ;;                  1    wreg      void 
   829 ;; Registers used:
   830 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   837 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   838 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   839 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   840 ;;Total ram usage:        3 bytes
   841 ;; Hardware stack levels used: 1
   842 ;; Hardware stack levels required when called: 6
   843 ;; This function calls:
   844 ;;		_PWM1_LoadDutyValue
   845 ;;		_PWM3_LoadDutyValue
   846 ;;		_PWM4_LoadDutyValue
   847 ;; This function is called by:
   848 ;;		_rgbButtonHandler
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           	psect	text5
   853  000258                     __ptext5:
   854                           	callstack 0
   855  000258                     _updateColor:
   856                           	callstack 22
   857  000258                     
   858                           ;rgbButton.c: 124:     calculatedColorValue = (255 - cButton.color.red) * (1024/256);
   859  000258  5010               	movf	(_cButton+15)^0,w,c
   860  00025A  0AFF               	xorlw	255
   861  00025C  6E2B               	movwf	??_updateColor^0,c
   862  00025E  502B               	movf	??_updateColor^0,w,c
   863  000260  0D04               	mullw	4
   864  000262  CFF3 F02C          	movff	prodl,updateColor@calculatedColorValue
   865  000266  CFF4 F02D          	movff	prodh,updateColor@calculatedColorValue+1
   866  00026A                     
   867                           ;rgbButton.c: 125:     PWM3_LoadDutyValue(calculatedColorValue);
   868  00026A  C02C  F027         	movff	updateColor@calculatedColorValue,PWM3_LoadDutyValue@dutyValue
   869  00026E  C02D  F028         	movff	updateColor@calculatedColorValue+1,PWM3_LoadDutyValue@dutyValue+1
   870  000272  ECBE  F001         	call	_PWM3_LoadDutyValue	;wreg free
   871  000276                     
   872                           ;rgbButton.c: 127:     calculatedColorValue = (255 - cButton.color.green) * (1024/256);
   873  000276  5011               	movf	(_cButton+16)^0,w,c
   874  000278  0AFF               	xorlw	255
   875  00027A  6E2B               	movwf	??_updateColor^0,c
   876  00027C  502B               	movf	??_updateColor^0,w,c
   877  00027E  0D04               	mullw	4
   878  000280  CFF3 F02C          	movff	prodl,updateColor@calculatedColorValue
   879  000284  CFF4 F02D          	movff	prodh,updateColor@calculatedColorValue+1
   880  000288                     
   881                           ;rgbButton.c: 128:     PWM4_LoadDutyValue(calculatedColorValue);
   882  000288  C02C  F027         	movff	updateColor@calculatedColorValue,PWM4_LoadDutyValue@dutyValue
   883  00028C  C02D  F028         	movff	updateColor@calculatedColorValue+1,PWM4_LoadDutyValue@dutyValue+1
   884  000290  ECA4  F001         	call	_PWM4_LoadDutyValue	;wreg free
   885  000294                     
   886                           ;rgbButton.c: 130:     calculatedColorValue = (255 - cButton.color.blue) * (1024/256);
   887  000294  5012               	movf	(_cButton+17)^0,w,c
   888  000296  0AFF               	xorlw	255
   889  000298  6E2B               	movwf	??_updateColor^0,c
   890  00029A  502B               	movf	??_updateColor^0,w,c
   891  00029C  0D04               	mullw	4
   892  00029E  CFF3 F02C          	movff	prodl,updateColor@calculatedColorValue
   893  0002A2  CFF4 F02D          	movff	prodh,updateColor@calculatedColorValue+1
   894  0002A6                     
   895                           ;rgbButton.c: 131:     PWM1_LoadDutyValue(calculatedColorValue);
   896  0002A6  C02C  F027         	movff	updateColor@calculatedColorValue,PWM1_LoadDutyValue@dutyValue
   897  0002AA  C02D  F028         	movff	updateColor@calculatedColorValue+1,PWM1_LoadDutyValue@dutyValue+1
   898  0002AE  ECF1  F001         	call	_PWM1_LoadDutyValue	;wreg free
   899  0002B2  0012               	return		;funcret
   900  0002B4                     __end_of_updateColor:
   901                           	callstack 0
   902                           
   903 ;; *************** function _PWM4_LoadDutyValue *****************
   904 ;; Defined at:
   905 ;;		line 74 in file "mcc_generated_files/pwm4.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;  dutyValue       2    2[COMRAM] unsigned short 
   908 ;; Auto vars:     Size  Location     Type
   909 ;;		None
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      void 
   912 ;; Registers used:
   913 ;;		wreg, status,2, status,0
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   919 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   921 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   922 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   923 ;;Total ram usage:        4 bytes
   924 ;; Hardware stack levels used: 1
   925 ;; Hardware stack levels required when called: 5
   926 ;; This function calls:
   927 ;;		Nothing
   928 ;; This function is called by:
   929 ;;		_appInit
   930 ;;		_updateColor
   931 ;;		_setGreen
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           	psect	text6
   936  000348                     __ptext6:
   937                           	callstack 0
   938  000348                     _PWM4_LoadDutyValue:
   939                           	callstack 24
   940  000348                     
   941                           ;mcc_generated_files/pwm4.c: 74:  void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm4.c: 75:  {;mcc_generated_files/pwm4.c: 77:      PWM4DCH = (dutyValue & 0x0
      +                          3FC)>>2;
   942  000348  C027  F029         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
   943  00034C  C028  F02A         	movff	PWM4_LoadDutyValue@dutyValue+1,??_PWM4_LoadDutyValue+1
   944  000350  90D8               	bcf	status,0,c
   945  000352  322A               	rrcf	(??_PWM4_LoadDutyValue+1)^0,f,c
   946  000354  3229               	rrcf	??_PWM4_LoadDutyValue^0,f,c
   947  000356  90D8               	bcf	status,0,c
   948  000358  322A               	rrcf	(??_PWM4_LoadDutyValue+1)^0,f,c
   949  00035A  3229               	rrcf	??_PWM4_LoadDutyValue^0,f,c
   950  00035C  5029               	movf	??_PWM4_LoadDutyValue^0,w,c
   951  00035E  6EA0               	movwf	160,c	;volatile
   952                           
   953                           ;mcc_generated_files/pwm4.c: 80:      PWM4DCL = (dutyValue & 0x0003)<<6;
   954  000360  C027  F029         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
   955  000364  0E03               	movlw	3
   956  000366  1629               	andwf	??_PWM4_LoadDutyValue^0,f,c
   957  000368  0E06               	movlw	6
   958  00036A  6E2A               	movwf	(??_PWM4_LoadDutyValue+1)^0,c
   959  00036C                     u305:
   960  00036C  90D8               	bcf	status,0,c
   961  00036E  3629               	rlcf	??_PWM4_LoadDutyValue^0,f,c
   962  000370  2E2A               	decfsz	(??_PWM4_LoadDutyValue+1)^0,f,c
   963  000372  EFB6  F001         	goto	u305
   964  000376  5029               	movf	??_PWM4_LoadDutyValue^0,w,c
   965  000378  6E9F               	movwf	159,c	;volatile
   966  00037A  0012               	return		;funcret
   967  00037C                     __end_of_PWM4_LoadDutyValue:
   968                           	callstack 0
   969                           
   970 ;; *************** function _PWM3_LoadDutyValue *****************
   971 ;; Defined at:
   972 ;;		line 74 in file "mcc_generated_files/pwm3.c"
   973 ;; Parameters:    Size  Location     Type
   974 ;;  dutyValue       2    2[COMRAM] unsigned short 
   975 ;; Auto vars:     Size  Location     Type
   976 ;;		None
   977 ;; Return value:  Size  Location     Type
   978 ;;                  1    wreg      void 
   979 ;; Registers used:
   980 ;;		wreg, status,2, status,0
   981 ;; Tracked objects:
   982 ;;		On entry : 0/0
   983 ;;		On exit  : 0/0
   984 ;;		Unchanged: 0/0
   985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   986 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   988 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   989 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   990 ;;Total ram usage:        4 bytes
   991 ;; Hardware stack levels used: 1
   992 ;; Hardware stack levels required when called: 5
   993 ;; This function calls:
   994 ;;		Nothing
   995 ;; This function is called by:
   996 ;;		_appInit
   997 ;;		_updateColor
   998 ;;		_setRed
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           	psect	text7
  1003  00037C                     __ptext7:
  1004                           	callstack 0
  1005  00037C                     _PWM3_LoadDutyValue:
  1006                           	callstack 24
  1007  00037C                     
  1008                           ;mcc_generated_files/pwm3.c: 74:  void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm3.c: 75:  {;mcc_generated_files/pwm3.c: 77:      PWM3DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  1009  00037C  C027  F029         	movff	PWM3_LoadDutyValue@dutyValue,??_PWM3_LoadDutyValue
  1010  000380  C028  F02A         	movff	PWM3_LoadDutyValue@dutyValue+1,??_PWM3_LoadDutyValue+1
  1011  000384  90D8               	bcf	status,0,c
  1012  000386  322A               	rrcf	(??_PWM3_LoadDutyValue+1)^0,f,c
  1013  000388  3229               	rrcf	??_PWM3_LoadDutyValue^0,f,c
  1014  00038A  90D8               	bcf	status,0,c
  1015  00038C  322A               	rrcf	(??_PWM3_LoadDutyValue+1)^0,f,c
  1016  00038E  3229               	rrcf	??_PWM3_LoadDutyValue^0,f,c
  1017  000390  5029               	movf	??_PWM3_LoadDutyValue^0,w,c
  1018  000392  6EA3               	movwf	163,c	;volatile
  1019                           
  1020                           ;mcc_generated_files/pwm3.c: 80:      PWM3DCL = (dutyValue & 0x0003)<<6;
  1021  000394  C027  F029         	movff	PWM3_LoadDutyValue@dutyValue,??_PWM3_LoadDutyValue
  1022  000398  0E03               	movlw	3
  1023  00039A  1629               	andwf	??_PWM3_LoadDutyValue^0,f,c
  1024  00039C  0E06               	movlw	6
  1025  00039E  6E2A               	movwf	(??_PWM3_LoadDutyValue+1)^0,c
  1026  0003A0                     u295:
  1027  0003A0  90D8               	bcf	status,0,c
  1028  0003A2  3629               	rlcf	??_PWM3_LoadDutyValue^0,f,c
  1029  0003A4  2E2A               	decfsz	(??_PWM3_LoadDutyValue+1)^0,f,c
  1030  0003A6  EFD0  F001         	goto	u295
  1031  0003AA  5029               	movf	??_PWM3_LoadDutyValue^0,w,c
  1032  0003AC  6EA2               	movwf	162,c	;volatile
  1033  0003AE  0012               	return		;funcret
  1034  0003B0                     __end_of_PWM3_LoadDutyValue:
  1035                           	callstack 0
  1036                           
  1037 ;; *************** function _PWM1_LoadDutyValue *****************
  1038 ;; Defined at:
  1039 ;;		line 82 in file "mcc_generated_files/pwm1.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;  dutyValue       2    2[COMRAM] unsigned short 
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;		None
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  1    wreg      void 
  1046 ;; Registers used:
  1047 ;;		wreg, status,2, status,0
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1053 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1056 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1057 ;;Total ram usage:        2 bytes
  1058 ;; Hardware stack levels used: 1
  1059 ;; Hardware stack levels required when called: 5
  1060 ;; This function calls:
  1061 ;;		Nothing
  1062 ;; This function is called by:
  1063 ;;		_appInit
  1064 ;;		_updateColor
  1065 ;;		_setBlue
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           	psect	text8
  1070  0003E2                     __ptext8:
  1071                           	callstack 0
  1072  0003E2                     _PWM1_LoadDutyValue:
  1073                           	callstack 24
  1074  0003E2                     
  1075                           ;mcc_generated_files/pwm1.c: 82: void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm1.c: 83: {;mcc_generated_files/pwm1.c: 84:     dutyValue &= 0x03FF;
  1076  0003E2  0EFF               	movlw	255
  1077  0003E4  1627               	andwf	PWM1_LoadDutyValue@dutyValue^0,f,c
  1078  0003E6  0E03               	movlw	3
  1079  0003E8  1628               	andwf	(PWM1_LoadDutyValue@dutyValue+1)^0,f,c
  1080  0003EA                     
  1081                           ;mcc_generated_files/pwm1.c: 87:     if(CCP1CONbits.FMT)
  1082  0003EA  A8AB               	btfss	171,4,c	;volatile
  1083  0003EC  EFFA  F001         	goto	u271
  1084  0003F0  EFFC  F001         	goto	u270
  1085  0003F4                     u271:
  1086  0003F4  EF03  F002         	goto	l1458
  1087  0003F8                     u270:
  1088  0003F8                     
  1089                           ;mcc_generated_files/pwm1.c: 88:     {;mcc_generated_files/pwm1.c: 89:         dutyValue
      +                           <<= 6;
  1090  0003F8  0E06               	movlw	6
  1091  0003FA                     u285:
  1092  0003FA  90D8               	bcf	status,0,c
  1093  0003FC  3627               	rlcf	PWM1_LoadDutyValue@dutyValue^0,f,c
  1094  0003FE  3628               	rlcf	(PWM1_LoadDutyValue@dutyValue+1)^0,f,c
  1095  000400  2EE8               	decfsz	wreg,f,c
  1096  000402  EFFD  F001         	goto	u285
  1097  000406                     l1458:
  1098                           
  1099                           ;mcc_generated_files/pwm1.c: 90:         CCPR1H = dutyValue >> 8;
  1100  000406  5028               	movf	(PWM1_LoadDutyValue@dutyValue+1)^0,w,c
  1101  000408  6EAA               	movwf	170,c	;volatile
  1102  00040A                     
  1103                           ;mcc_generated_files/pwm1.c: 91:         CCPR1L = dutyValue;
  1104  00040A  C027  FFA9         	movff	PWM1_LoadDutyValue@dutyValue,4009	;volatile
  1105  00040E  0012               	return		;funcret
  1106  000410                     __end_of_PWM1_LoadDutyValue:
  1107                           	callstack 0
  1108                           
  1109 ;; *************** function _getIsButtonPressed *****************
  1110 ;; Defined at:
  1111 ;;		line 73 in file "rgbButton.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;		None
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;		None
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  1    wreg      _Bool 
  1118 ;; Registers used:
  1119 ;;		wreg, status,2
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1129 ;;Total ram usage:        0 bytes
  1130 ;; Hardware stack levels used: 1
  1131 ;; Hardware stack levels required when called: 5
  1132 ;; This function calls:
  1133 ;;		Nothing
  1134 ;; This function is called by:
  1135 ;;		_appHandler
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text9
  1140  0005DC                     __ptext9:
  1141                           	callstack 0
  1142  0005DC                     _getIsButtonPressed:
  1143                           	callstack 24
  1144  0005DC                     
  1145                           ;rgbButton.c: 74:     return cButton.buttonStates.isPressed;
  1146  0005DC  5001               	movf	_cButton^0,w,c
  1147  0005DE  0012               	return		;funcret
  1148  0005E0                     __end_of_getIsButtonPressed:
  1149                           	callstack 0
  1150                           
  1151 ;; *************** function _getIsButtonChanging *****************
  1152 ;; Defined at:
  1153 ;;		line 84 in file "rgbButton.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;		None
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;		None
  1158 ;; Return value:  Size  Location     Type
  1159 ;;                  1    wreg      _Bool 
  1160 ;; Registers used:
  1161 ;;		wreg, status,2
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1171 ;;Total ram usage:        0 bytes
  1172 ;; Hardware stack levels used: 1
  1173 ;; Hardware stack levels required when called: 5
  1174 ;; This function calls:
  1175 ;;		Nothing
  1176 ;; This function is called by:
  1177 ;;		_appHandler
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           	psect	text10
  1182  0005E0                     __ptext10:
  1183                           	callstack 0
  1184  0005E0                     _getIsButtonChanging:
  1185                           	callstack 24
  1186  0005E0                     
  1187                           ;rgbButton.c: 85:     return cButton.buttonStates.changing;
  1188  0005E0  5003               	movf	(_cButton+2)^0,w,c
  1189  0005E2  0012               	return		;funcret
  1190  0005E4                     __end_of_getIsButtonChanging:
  1191                           	callstack 0
  1192                           
  1193 ;; *************** function _TMR4_StartTimer *****************
  1194 ;; Defined at:
  1195 ;;		line 114 in file "mcc_generated_files/tmr4.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;		None
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;		None
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      void 
  1202 ;; Registers used:
  1203 ;;		cstack
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1213 ;;Total ram usage:        0 bytes
  1214 ;; Hardware stack levels used: 1
  1215 ;; Hardware stack levels required when called: 6
  1216 ;; This function calls:
  1217 ;;		_TMR4_Start
  1218 ;; This function is called by:
  1219 ;;		_main
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           	psect	text11
  1224  0005D6                     __ptext11:
  1225                           	callstack 0
  1226  0005D6                     _TMR4_StartTimer:
  1227                           	callstack 24
  1228  0005D6                     
  1229                           ;mcc_generated_files/tmr4.c: 116:     TMR4_Start();
  1230  0005D6  ECF2  F002         	call	_TMR4_Start	;wreg free
  1231  0005DA  0012               	return		;funcret
  1232  0005DC                     __end_of_TMR4_StartTimer:
  1233                           	callstack 0
  1234                           
  1235 ;; *************** function _TMR4_Start *****************
  1236 ;; Defined at:
  1237 ;;		line 108 in file "mcc_generated_files/tmr4.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;		None
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;		None
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      void 
  1244 ;; Registers used:
  1245 ;;		None
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1255 ;;Total ram usage:        0 bytes
  1256 ;; Hardware stack levels used: 1
  1257 ;; Hardware stack levels required when called: 5
  1258 ;; This function calls:
  1259 ;;		Nothing
  1260 ;; This function is called by:
  1261 ;;		_TMR4_StartTimer
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           	psect	text12
  1266  0005E4                     __ptext12:
  1267                           	callstack 0
  1268  0005E4                     _TMR4_Start:
  1269                           	callstack 24
  1270  0005E4                     
  1271                           ;mcc_generated_files/tmr4.c: 111:     T4CONbits.TMR4ON = 1;
  1272  0005E4  8EB6               	bsf	182,7,c	;volatile
  1273  0005E6  0012               	return		;funcret
  1274  0005E8                     __end_of_TMR4_Start:
  1275                           	callstack 0
  1276                           
  1277 ;; *************** function _SYSTEM_Initialize *****************
  1278 ;; Defined at:
  1279 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;		None
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;		None
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  1    wreg      void 
  1286 ;; Registers used:
  1287 ;;		wreg, status,2, status,0, cstack
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1297 ;;Total ram usage:        0 bytes
  1298 ;; Hardware stack levels used: 1
  1299 ;; Hardware stack levels required when called: 7
  1300 ;; This function calls:
  1301 ;;		_INTERRUPT_Initialize
  1302 ;;		_OSCILLATOR_Initialize
  1303 ;;		_PIN_MANAGER_Initialize
  1304 ;;		_PMD_Initialize
  1305 ;;		_PWM1_Initialize
  1306 ;;		_PWM3_Initialize
  1307 ;;		_PWM4_Initialize
  1308 ;;		_TMR0_Initialize
  1309 ;;		_TMR4_Initialize
  1310 ;; This function is called by:
  1311 ;;		_main
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315                           	psect	text13
  1316  000494                     __ptext13:
  1317                           	callstack 0
  1318  000494                     _SYSTEM_Initialize:
  1319                           	callstack 23
  1320  000494                     
  1321                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  1322  000494  ECF4  F002         	call	_INTERRUPT_Initialize	;wreg free
  1323  000498                     
  1324                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  1325  000498  EC7E  F002         	call	_PMD_Initialize	;wreg free
  1326  00049C                     
  1327                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1328  00049C  EC5A  F001         	call	_PIN_MANAGER_Initialize	;wreg free
  1329  0004A0                     
  1330                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1331  0004A0  ECA6  F002         	call	_OSCILLATOR_Initialize	;wreg free
  1332  0004A4                     
  1333                           ;mcc_generated_files/mcc.c: 56:     PWM1_Initialize();
  1334  0004A4  ECC6  F002         	call	_PWM1_Initialize	;wreg free
  1335  0004A8                     
  1336                           ;mcc_generated_files/mcc.c: 57:     PWM4_Initialize();
  1337  0004A8  ECB2  F002         	call	_PWM4_Initialize	;wreg free
  1338  0004AC                     
  1339                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  1340  0004AC  EC35  F002         	call	_TMR4_Initialize	;wreg free
  1341  0004B0                     
  1342                           ;mcc_generated_files/mcc.c: 59:     PWM3_Initialize();
  1343  0004B0  ECBC  F002         	call	_PWM3_Initialize	;wreg free
  1344  0004B4                     
  1345                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  1346  0004B4  EC87  F001         	call	_TMR0_Initialize	;wreg free
  1347  0004B8  0012               	return		;funcret
  1348  0004BA                     __end_of_SYSTEM_Initialize:
  1349                           	callstack 0
  1350                           
  1351 ;; *************** function _TMR4_Initialize *****************
  1352 ;; Defined at:
  1353 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;		None
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;		None
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  1    wreg      void 
  1360 ;; Registers used:
  1361 ;;		wreg, status,2, status,0, cstack
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1371 ;;Total ram usage:        0 bytes
  1372 ;; Hardware stack levels used: 1
  1373 ;; Hardware stack levels required when called: 6
  1374 ;; This function calls:
  1375 ;;		_TMR4_SetInterruptHandler
  1376 ;; This function is called by:
  1377 ;;		_SYSTEM_Initialize
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           	psect	text14
  1382  00046A                     __ptext14:
  1383                           	callstack 0
  1384  00046A                     _TMR4_Initialize:
  1385                           	callstack 23
  1386  00046A                     
  1387                           ;mcc_generated_files/tmr4.c: 69:     T4CLKCON = 0x01;
  1388  00046A  0E01               	movlw	1
  1389  00046C  6EB8               	movwf	184,c	;volatile
  1390                           
  1391                           ;mcc_generated_files/tmr4.c: 72:     T4HLT = 0x20;
  1392  00046E  0E20               	movlw	32
  1393  000470  6EB7               	movwf	183,c	;volatile
  1394                           
  1395                           ;mcc_generated_files/tmr4.c: 75:     T4RST = 0x00;
  1396  000472  0E00               	movlw	0
  1397  000474  6EB9               	movwf	185,c	;volatile
  1398  000476                     
  1399                           ;mcc_generated_files/tmr4.c: 78:     T4PR = 0xFF;
  1400  000476  68B5               	setf	181,c	;volatile
  1401                           
  1402                           ;mcc_generated_files/tmr4.c: 81:     T4TMR = 0x00;
  1403  000478  0E00               	movlw	0
  1404  00047A  6EB4               	movwf	180,c	;volatile
  1405  00047C                     
  1406                           ;mcc_generated_files/tmr4.c: 84:     PIR4bits.TMR4IF = 0;
  1407  00047C  010E               	movlb	14	; () banked
  1408  00047E  97C9               	bcf	201,3,b	;volatile
  1409  000480                     
  1410                           ; BSR set to: 14
  1411                           ;mcc_generated_files/tmr4.c: 87:     PIE4bits.TMR4IE = 1;
  1412  000480  87C1               	bsf	193,3,b	;volatile
  1413  000482                     
  1414                           ; BSR set to: 14
  1415                           ;mcc_generated_files/tmr4.c: 90:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  1416  000482  0EEC               	movlw	low _TMR4_DefaultInterruptHandler
  1417  000484  6E27               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1418  000486  0E05               	movlw	high _TMR4_DefaultInterruptHandler
  1419  000488  6E28               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1420  00048A  ECE1  F002         	call	_TMR4_SetInterruptHandler	;wreg free
  1421  00048E                     
  1422                           ;mcc_generated_files/tmr4.c: 93:     T4CON = 0xF0;
  1423  00048E  0EF0               	movlw	240
  1424  000490  6EB6               	movwf	182,c	;volatile
  1425  000492  0012               	return		;funcret
  1426  000494                     __end_of_TMR4_Initialize:
  1427                           	callstack 0
  1428                           
  1429 ;; *************** function _TMR4_SetInterruptHandler *****************
  1430 ;; Defined at:
  1431 ;;		line 178 in file "mcc_generated_files/tmr4.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  1434 ;;		 -> TMR4_DefaultInterruptHandler(1), 
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;		None
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      void 
  1439 ;; Registers used:
  1440 ;;		wreg, status,2, status,0
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1446 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1449 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1450 ;;Total ram usage:        2 bytes
  1451 ;; Hardware stack levels used: 1
  1452 ;; Hardware stack levels required when called: 5
  1453 ;; This function calls:
  1454 ;;		Nothing
  1455 ;; This function is called by:
  1456 ;;		_TMR4_Initialize
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text15
  1461  0005C2                     __ptext15:
  1462                           	callstack 0
  1463  0005C2                     _TMR4_SetInterruptHandler:
  1464                           	callstack 23
  1465  0005C2                     
  1466                           ;mcc_generated_files/tmr4.c: 179:     TMR4_InterruptHandler = InterruptHandler;
  1467  0005C2  C027  F032         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
  1468  0005C6  C028  F033         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
  1469  0005CA  0012               	return		;funcret
  1470  0005CC                     __end_of_TMR4_SetInterruptHandler:
  1471                           	callstack 0
  1472                           
  1473 ;; *************** function _TMR0_Initialize *****************
  1474 ;; Defined at:
  1475 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;		None
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;		None
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      void 
  1482 ;; Registers used:
  1483 ;;		wreg, status,2, status,0, cstack
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1491 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1492 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1493 ;;Total ram usage:        2 bytes
  1494 ;; Hardware stack levels used: 1
  1495 ;; Hardware stack levels required when called: 6
  1496 ;; This function calls:
  1497 ;;		_TMR0_SetInterruptHandler
  1498 ;; This function is called by:
  1499 ;;		_SYSTEM_Initialize
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           	psect	text16
  1504  00030E                     __ptext16:
  1505                           	callstack 0
  1506  00030E                     _TMR0_Initialize:
  1507                           	callstack 23
  1508  00030E                     
  1509                           ;mcc_generated_files/tmr0.c: 71:     T0CON1 = 0x40;
  1510  00030E  0E40               	movlw	64
  1511  000310  6ED5               	movwf	213,c	;volatile
  1512                           
  1513                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0xC1;
  1514  000312  0EC1               	movlw	193
  1515  000314  6ED3               	movwf	211,c	;volatile
  1516                           
  1517                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0x80;
  1518  000316  0E80               	movlw	128
  1519  000318  6ED2               	movwf	210,c	;volatile
  1520  00031A                     
  1521                           ;mcc_generated_files/tmr0.c: 80:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  1522  00031A  50D2               	movf	210,w,c	;volatile
  1523  00031C  CFD3 F029          	movff	4051,??_TMR0_Initialize	;volatile
  1524  000320  6A2A               	clrf	(??_TMR0_Initialize+1)^0,c
  1525  000322  C029  F02A         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  1526  000326  6A29               	clrf	??_TMR0_Initialize^0,c
  1527  000328  1029               	iorwf	??_TMR0_Initialize^0,w,c
  1528  00032A  6E36               	movwf	_timer0ReloadVal16bit^0,c	;volatile
  1529  00032C  502A               	movf	(??_TMR0_Initialize+1)^0,w,c
  1530  00032E  6E37               	movwf	(_timer0ReloadVal16bit+1)^0,c	;volatile
  1531  000330                     
  1532                           ;mcc_generated_files/tmr0.c: 83:     PIR0bits.TMR0IF = 0;
  1533  000330  010E               	movlb	14	; () banked
  1534  000332  9BC5               	bcf	197,5,b	;volatile
  1535  000334                     
  1536                           ; BSR set to: 14
  1537                           ;mcc_generated_files/tmr0.c: 86:     PIE0bits.TMR0IE = 1;
  1538  000334  8BBD               	bsf	189,5,b	;volatile
  1539  000336                     
  1540                           ; BSR set to: 14
  1541                           ;mcc_generated_files/tmr0.c: 89:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  1542  000336  0EEE               	movlw	low _TMR0_DefaultInterruptHandler
  1543  000338  6E27               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1544  00033A  0E05               	movlw	high _TMR0_DefaultInterruptHandler
  1545  00033C  6E28               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1546  00033E  ECE6  F002         	call	_TMR0_SetInterruptHandler	;wreg free
  1547  000342                     
  1548                           ;mcc_generated_files/tmr0.c: 92:     T0CON0 = 0x90;
  1549  000342  0E90               	movlw	144
  1550  000344  6ED4               	movwf	212,c	;volatile
  1551  000346  0012               	return		;funcret
  1552  000348                     __end_of_TMR0_Initialize:
  1553                           	callstack 0
  1554                           
  1555 ;; *************** function _TMR0_SetInterruptHandler *****************
  1556 ;; Defined at:
  1557 ;;		line 159 in file "mcc_generated_files/tmr0.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  1560 ;;		 -> msTick(1), TMR0_DefaultInterruptHandler(1), 
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;		None
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  1    wreg      void 
  1565 ;; Registers used:
  1566 ;;		wreg, status,2, status,0
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1572 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1575 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1576 ;;Total ram usage:        2 bytes
  1577 ;; Hardware stack levels used: 1
  1578 ;; Hardware stack levels required when called: 5
  1579 ;; This function calls:
  1580 ;;		Nothing
  1581 ;; This function is called by:
  1582 ;;		_TMR0_Initialize
  1583 ;;		_appInit
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           	psect	text17
  1588  0005CC                     __ptext17:
  1589                           	callstack 0
  1590  0005CC                     _TMR0_SetInterruptHandler:
  1591                           	callstack 24
  1592  0005CC                     
  1593                           ;mcc_generated_files/tmr0.c: 160:     TMR0_InterruptHandler = InterruptHandler;
  1594  0005CC  C027  F034         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1595  0005D0  C028  F035         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1596  0005D4  0012               	return		;funcret
  1597  0005D6                     __end_of_TMR0_SetInterruptHandler:
  1598                           	callstack 0
  1599                           
  1600 ;; *************** function _PWM4_Initialize *****************
  1601 ;; Defined at:
  1602 ;;		line 58 in file "mcc_generated_files/pwm4.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;		None
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;		None
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  1    wreg      void 
  1609 ;; Registers used:
  1610 ;;		wreg, status,2
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1620 ;;Total ram usage:        0 bytes
  1621 ;; Hardware stack levels used: 1
  1622 ;; Hardware stack levels required when called: 5
  1623 ;; This function calls:
  1624 ;;		Nothing
  1625 ;; This function is called by:
  1626 ;;		_SYSTEM_Initialize
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           	psect	text18
  1631  000564                     __ptext18:
  1632                           	callstack 0
  1633  000564                     _PWM4_Initialize:
  1634                           	callstack 24
  1635  000564                     
  1636                           ;mcc_generated_files/pwm4.c: 62:     PWM4CON = 0x80;
  1637  000564  0E80               	movlw	128
  1638  000566  6EA1               	movwf	161,c	;volatile
  1639  000568                     
  1640                           ;mcc_generated_files/pwm4.c: 65:     PWM4DCH = 0xFF;
  1641  000568  68A0               	setf	160,c	;volatile
  1642                           
  1643                           ;mcc_generated_files/pwm4.c: 68:     PWM4DCL = 0xC0;
  1644  00056A  0EC0               	movlw	192
  1645  00056C  6E9F               	movwf	159,c	;volatile
  1646                           
  1647                           ;mcc_generated_files/pwm4.c: 71:     CCPTMRSbits.P4TSEL = 2;
  1648  00056E  50AD               	movf	173,w,c	;volatile
  1649  000570  0B3F               	andlw	-193
  1650  000572  0980               	iorlw	128
  1651  000574  6EAD               	movwf	173,c	;volatile
  1652  000576  0012               	return		;funcret
  1653  000578                     __end_of_PWM4_Initialize:
  1654                           	callstack 0
  1655                           
  1656 ;; *************** function _PWM3_Initialize *****************
  1657 ;; Defined at:
  1658 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;		None
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;		None
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  1    wreg      void 
  1665 ;; Registers used:
  1666 ;;		wreg, status,2
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1676 ;;Total ram usage:        0 bytes
  1677 ;; Hardware stack levels used: 1
  1678 ;; Hardware stack levels required when called: 5
  1679 ;; This function calls:
  1680 ;;		Nothing
  1681 ;; This function is called by:
  1682 ;;		_SYSTEM_Initialize
  1683 ;; This function uses a non-reentrant model
  1684 ;;
  1685                           
  1686                           	psect	text19
  1687  000578                     __ptext19:
  1688                           	callstack 0
  1689  000578                     _PWM3_Initialize:
  1690                           	callstack 24
  1691  000578                     
  1692                           ;mcc_generated_files/pwm3.c: 62:     PWM3CON = 0x80;
  1693  000578  0E80               	movlw	128
  1694  00057A  6EA4               	movwf	164,c	;volatile
  1695  00057C                     
  1696                           ;mcc_generated_files/pwm3.c: 65:     PWM3DCH = 0xFF;
  1697  00057C  68A3               	setf	163,c	;volatile
  1698                           
  1699                           ;mcc_generated_files/pwm3.c: 68:     PWM3DCL = 0xC0;
  1700  00057E  0EC0               	movlw	192
  1701  000580  6EA2               	movwf	162,c	;volatile
  1702                           
  1703                           ;mcc_generated_files/pwm3.c: 71:     CCPTMRSbits.P3TSEL = 2;
  1704  000582  50AD               	movf	173,w,c	;volatile
  1705  000584  0BCF               	andlw	-49
  1706  000586  0920               	iorlw	32
  1707  000588  6EAD               	movwf	173,c	;volatile
  1708  00058A  0012               	return		;funcret
  1709  00058C                     __end_of_PWM3_Initialize:
  1710                           	callstack 0
  1711                           
  1712 ;; *************** function _PWM1_Initialize *****************
  1713 ;; Defined at:
  1714 ;;		line 64 in file "mcc_generated_files/pwm1.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;		None
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;		None
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      void 
  1721 ;; Registers used:
  1722 ;;		wreg, status,2
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1732 ;;Total ram usage:        0 bytes
  1733 ;; Hardware stack levels used: 1
  1734 ;; Hardware stack levels required when called: 5
  1735 ;; This function calls:
  1736 ;;		Nothing
  1737 ;; This function is called by:
  1738 ;;		_SYSTEM_Initialize
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           	psect	text20
  1743  00058C                     __ptext20:
  1744                           	callstack 0
  1745  00058C                     _PWM1_Initialize:
  1746                           	callstack 24
  1747  00058C                     
  1748                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8C;
  1749  00058C  0E8C               	movlw	140
  1750  00058E  6EAB               	movwf	171,c	;volatile
  1751                           
  1752                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x03;
  1753  000590  0E03               	movlw	3
  1754  000592  6EAA               	movwf	170,c	;volatile
  1755  000594                     
  1756                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0xFF;
  1757  000594  68A9               	setf	169,c	;volatile
  1758                           
  1759                           ;mcc_generated_files/pwm1.c: 78:  CCPTMRSbits.C1TSEL = 0x2;
  1760  000596  50AD               	movf	173,w,c	;volatile
  1761  000598  0BFC               	andlw	-4
  1762  00059A  0902               	iorlw	2
  1763  00059C  6EAD               	movwf	173,c	;volatile
  1764  00059E  0012               	return		;funcret
  1765  0005A0                     __end_of_PWM1_Initialize:
  1766                           	callstack 0
  1767                           
  1768 ;; *************** function _PMD_Initialize *****************
  1769 ;; Defined at:
  1770 ;;		line 77 in file "mcc_generated_files/mcc.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;		None
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;		None
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  1    wreg      void 
  1777 ;; Registers used:
  1778 ;;		wreg, status,2
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1788 ;;Total ram usage:        0 bytes
  1789 ;; Hardware stack levels used: 1
  1790 ;; Hardware stack levels required when called: 5
  1791 ;; This function calls:
  1792 ;;		Nothing
  1793 ;; This function is called by:
  1794 ;;		_SYSTEM_Initialize
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           	psect	text21
  1799  0004FC                     __ptext21:
  1800                           	callstack 0
  1801  0004FC                     _PMD_Initialize:
  1802                           	callstack 24
  1803  0004FC                     
  1804                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
  1805  0004FC  0E00               	movlw	0
  1806  0004FE  010E               	movlb	14	; () banked
  1807  000500  6FDC               	movwf	220,b	;volatile
  1808                           
  1809                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
  1810  000502  0E00               	movlw	0
  1811  000504  6FDD               	movwf	221,b	;volatile
  1812                           
  1813                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
  1814  000506  0E00               	movlw	0
  1815  000508  6FDE               	movwf	222,b	;volatile
  1816                           
  1817                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
  1818  00050A  0E00               	movlw	0
  1819  00050C  6FDF               	movwf	223,b	;volatile
  1820                           
  1821                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
  1822  00050E  0E00               	movlw	0
  1823  000510  6FE0               	movwf	224,b	;volatile
  1824                           
  1825                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
  1826  000512  0E00               	movlw	0
  1827  000514  6FE1               	movwf	225,b	;volatile
  1828  000516                     
  1829                           ; BSR set to: 14
  1830  000516  0012               	return		;funcret
  1831  000518                     __end_of_PMD_Initialize:
  1832                           	callstack 0
  1833                           
  1834 ;; *************** function _PIN_MANAGER_Initialize *****************
  1835 ;; Defined at:
  1836 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;		None
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;		None
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  1    wreg      void 
  1843 ;; Registers used:
  1844 ;;		wreg, status,2
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1854 ;;Total ram usage:        0 bytes
  1855 ;; Hardware stack levels used: 1
  1856 ;; Hardware stack levels required when called: 5
  1857 ;; This function calls:
  1858 ;;		Nothing
  1859 ;; This function is called by:
  1860 ;;		_SYSTEM_Initialize
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864                           	psect	text22
  1865  0002B4                     __ptext22:
  1866                           	callstack 0
  1867  0002B4                     _PIN_MANAGER_Initialize:
  1868                           	callstack 24
  1869  0002B4                     
  1870                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1871  0002B4  0E00               	movlw	0
  1872  0002B6  6E82               	movwf	130,c	;volatile
  1873                           
  1874                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1875  0002B8  0E00               	movlw	0
  1876  0002BA  6E83               	movwf	131,c	;volatile
  1877                           
  1878                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x02;
  1879  0002BC  0E02               	movlw	2
  1880  0002BE  6E84               	movwf	132,c	;volatile
  1881  0002C0                     
  1882                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  1883  0002C0  6887               	setf	135,c	;volatile
  1884  0002C2                     
  1885                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  1886  0002C2  6888               	setf	136,c	;volatile
  1887                           
  1888                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xD5;
  1889  0002C4  0ED5               	movlw	213
  1890  0002C6  6E89               	movwf	137,c	;volatile
  1891  0002C8                     
  1892                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
  1893  0002C8  010F               	movlb	15	; () banked
  1894  0002CA  691C               	setf	28,b	;volatile
  1895  0002CC                     
  1896                           ; BSR set to: 15
  1897                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xFF;
  1898  0002CC  6914               	setf	20,b	;volatile
  1899                           
  1900                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xBF;
  1901  0002CE  0EBF               	movlw	191
  1902  0002D0  6F0C               	movwf	12,b	;volatile
  1903                           
  1904                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
  1905  0002D2  0E00               	movlw	0
  1906  0002D4  6F28               	movwf	40,b	;volatile
  1907                           
  1908                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
  1909  0002D6  0E00               	movlw	0
  1910  0002D8  6F13               	movwf	19,b	;volatile
  1911                           
  1912                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
  1913  0002DA  0E00               	movlw	0
  1914  0002DC  6F0B               	movwf	11,b	;volatile
  1915                           
  1916                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
  1917  0002DE  0E00               	movlw	0
  1918  0002E0  6F1B               	movwf	27,b	;volatile
  1919                           
  1920                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  1921  0002E2  0E00               	movlw	0
  1922  0002E4  6F0A               	movwf	10,b	;volatile
  1923                           
  1924                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  1925  0002E6  0E00               	movlw	0
  1926  0002E8  6F12               	movwf	18,b	;volatile
  1927                           
  1928                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
  1929  0002EA  0E00               	movlw	0
  1930  0002EC  6F1A               	movwf	26,b	;volatile
  1931  0002EE                     
  1932                           ; BSR set to: 15
  1933                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
  1934  0002EE  6909               	setf	9,b	;volatile
  1935  0002F0                     
  1936                           ; BSR set to: 15
  1937                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
  1938  0002F0  6911               	setf	17,b	;volatile
  1939  0002F2                     
  1940                           ; BSR set to: 15
  1941                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  1942  0002F2  6919               	setf	25,b	;volatile
  1943  0002F4                     
  1944                           ; BSR set to: 15
  1945                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0xFF;
  1946  0002F4  6908               	setf	8,b	;volatile
  1947  0002F6                     
  1948                           ; BSR set to: 15
  1949                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xFF;
  1950  0002F6  6910               	setf	16,b	;volatile
  1951  0002F8                     
  1952                           ; BSR set to: 15
  1953                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
  1954  0002F8  6918               	setf	24,b	;volatile
  1955                           
  1956                           ;mcc_generated_files/pin_manager.c: 106:     INLVLE = 0x08;
  1957  0002FA  0E08               	movlw	8
  1958  0002FC  6F25               	movwf	37,b	;volatile
  1959                           
  1960                           ;mcc_generated_files/pin_manager.c: 115:     RC3PPS = 0x07;
  1961  0002FE  0E07               	movlw	7
  1962  000300  010E               	movlb	14	; () banked
  1963  000302  6FF5               	movwf	245,b	;volatile
  1964                           
  1965                           ;mcc_generated_files/pin_manager.c: 116:     RC1PPS = 0x05;
  1966  000304  0E05               	movlw	5
  1967  000306  6FF3               	movwf	243,b	;volatile
  1968                           
  1969                           ;mcc_generated_files/pin_manager.c: 117:     RC5PPS = 0x08;
  1970  000308  0E08               	movlw	8
  1971  00030A  6FF7               	movwf	247,b	;volatile
  1972  00030C                     
  1973                           ; BSR set to: 14
  1974  00030C  0012               	return		;funcret
  1975  00030E                     __end_of_PIN_MANAGER_Initialize:
  1976                           	callstack 0
  1977                           
  1978 ;; *************** function _OSCILLATOR_Initialize *****************
  1979 ;; Defined at:
  1980 ;;		line 63 in file "mcc_generated_files/mcc.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;		None
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;		None
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  1    wreg      void 
  1987 ;; Registers used:
  1988 ;;		wreg, status,2
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1998 ;;Total ram usage:        0 bytes
  1999 ;; Hardware stack levels used: 1
  2000 ;; Hardware stack levels required when called: 5
  2001 ;; This function calls:
  2002 ;;		Nothing
  2003 ;; This function is called by:
  2004 ;;		_SYSTEM_Initialize
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           	psect	text23
  2009  00054C                     __ptext23:
  2010                           	callstack 0
  2011  00054C                     _OSCILLATOR_Initialize:
  2012                           	callstack 24
  2013  00054C                     
  2014                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x60;
  2015  00054C  0E60               	movlw	96
  2016  00054E  010E               	movlb	14	; () banked
  2017  000550  6FD3               	movwf	211,b	;volatile
  2018                           
  2019                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
  2020  000552  0E00               	movlw	0
  2021  000554  6FD5               	movwf	213,b	;volatile
  2022                           
  2023                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
  2024  000556  0E00               	movlw	0
  2025  000558  6FD7               	movwf	215,b	;volatile
  2026                           
  2027                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x08;
  2028  00055A  0E08               	movlw	8
  2029  00055C  6FD9               	movwf	217,b	;volatile
  2030                           
  2031                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  2032  00055E  0E00               	movlw	0
  2033  000560  6FD8               	movwf	216,b	;volatile
  2034  000562                     
  2035                           ; BSR set to: 14
  2036  000562  0012               	return		;funcret
  2037  000564                     __end_of_OSCILLATOR_Initialize:
  2038                           	callstack 0
  2039                           
  2040 ;; *************** function _INTERRUPT_Initialize *****************
  2041 ;; Defined at:
  2042 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;		None
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;		None
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  1    wreg      void 
  2049 ;; Registers used:
  2050 ;;		None
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2060 ;;Total ram usage:        0 bytes
  2061 ;; Hardware stack levels used: 1
  2062 ;; Hardware stack levels required when called: 5
  2063 ;; This function calls:
  2064 ;;		Nothing
  2065 ;; This function is called by:
  2066 ;;		_SYSTEM_Initialize
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           	psect	text24
  2071  0005E8                     __ptext24:
  2072                           	callstack 0
  2073  0005E8                     _INTERRUPT_Initialize:
  2074                           	callstack 24
  2075  0005E8                     
  2076                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  2077  0005E8  9AF2               	bcf	242,5,c	;volatile
  2078  0005EA  0012               	return		;funcret
  2079  0005EC                     __end_of_INTERRUPT_Initialize:
  2080                           	callstack 0
  2081                           
  2082 ;; *************** function _INTERRUPT_InterruptManager *****************
  2083 ;; Defined at:
  2084 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;		None
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;		None
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  1    wreg      void 
  2091 ;; Registers used:
  2092 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2100 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2101 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2102 ;;Total ram usage:        2 bytes
  2103 ;; Hardware stack levels used: 1
  2104 ;; Hardware stack levels required when called: 4
  2105 ;; This function calls:
  2106 ;;		_TMR0_ISR
  2107 ;;		_TMR4_ISR
  2108 ;; This function is called by:
  2109 ;;		Interrupt level 2
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113                           	psect	intcode
  2114  000008                     __pintcode:
  2115                           	callstack 0
  2116  000008                     _INTERRUPT_InterruptManager:
  2117                           	callstack 22
  2118                           
  2119                           ;incstack = 0
  2120  000008  8238               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2121  00000A  CFFA F025          	movff	pclath,??_INTERRUPT_InterruptManager
  2122  00000E  CFFB F026          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2123  000012                     
  2124                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
  2125  000012  010E               	movlb	14	; () banked
  2126  000014  ABBD               	btfss	189,5,b	;volatile
  2127  000016  EF0F  F000         	goto	i2u19_41
  2128  00001A  EF11  F000         	goto	i2u19_40
  2129  00001E                     i2u19_41:
  2130  00001E  EF1C  F000         	goto	i2l129
  2131  000022                     i2u19_40:
  2132  000022                     
  2133                           ; BSR set to: 14
  2134  000022  ABC5               	btfss	197,5,b	;volatile
  2135  000024  EF16  F000         	goto	i2u20_41
  2136  000028  EF18  F000         	goto	i2u20_40
  2137  00002C                     i2u20_41:
  2138  00002C  EF1C  F000         	goto	i2l129
  2139  000030                     i2u20_40:
  2140  000030                     
  2141                           ; BSR set to: 14
  2142                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  2143  000030  ECD0  F002         	call	_TMR0_ISR	;wreg free
  2144                           
  2145                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  2146  000034  EF35  F000         	goto	i2l135
  2147  000038                     i2l129:
  2148                           
  2149                           ; BSR set to: 14
  2150  000038  ACF2               	btfss	242,6,c	;volatile
  2151  00003A  EF21  F000         	goto	i2u21_41
  2152  00003E  EF23  F000         	goto	i2u21_40
  2153  000042                     i2u21_41:
  2154  000042  EF35  F000         	goto	i2l135
  2155  000046                     i2u21_40:
  2156  000046                     
  2157                           ; BSR set to: 14
  2158                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE4bits.TMR4IE == 1 && PIR4bits.TMR4IF == 1)
  2159  000046  A7C1               	btfss	193,3,b	;volatile
  2160  000048  EF28  F000         	goto	i2u22_41
  2161  00004C  EF2A  F000         	goto	i2u22_40
  2162  000050                     i2u22_41:
  2163  000050  EF35  F000         	goto	i2l134
  2164  000054                     i2u22_40:
  2165  000054                     
  2166                           ; BSR set to: 14
  2167  000054  A7C9               	btfss	201,3,b	;volatile
  2168  000056  EF2F  F000         	goto	i2u23_41
  2169  00005A  EF31  F000         	goto	i2u23_40
  2170  00005E                     i2u23_41:
  2171  00005E  EF35  F000         	goto	i2l134
  2172  000062                     i2u23_40:
  2173  000062                     
  2174                           ; BSR set to: 14
  2175                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             TMR4_ISR();
  2176  000062  ECD8  F001         	call	_TMR4_ISR	;wreg free
  2177                           
  2178                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  2179  000066  EF35  F000         	goto	i2l135
  2180  00006A                     i2l134:
  2181  00006A                     i2l135:
  2182  00006A  C026  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2183  00006E  C025  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2184  000072  9238               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2185  000074  0011               	retfie		f
  2186  000076                     __end_of_INTERRUPT_InterruptManager:
  2187                           	callstack 0
  2188                           
  2189 ;; *************** function _TMR4_ISR *****************
  2190 ;; Defined at:
  2191 ;;		line 165 in file "mcc_generated_files/tmr4.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;		None
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;		None
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  1    wreg      void 
  2198 ;; Registers used:
  2199 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2209 ;;Total ram usage:        0 bytes
  2210 ;; Hardware stack levels used: 1
  2211 ;; Hardware stack levels required when called: 1
  2212 ;; This function calls:
  2213 ;;		Absolute function
  2214 ;;		_TMR4_DefaultInterruptHandler
  2215 ;; This function is called by:
  2216 ;;		_INTERRUPT_InterruptManager
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           	psect	text26
  2221  0003B0                     __ptext26:
  2222                           	callstack 0
  2223  0003B0                     _TMR4_ISR:
  2224                           	callstack 24
  2225  0003B0                     
  2226                           ;mcc_generated_files/tmr4.c: 169:     PIR4bits.TMR4IF = 0;
  2227  0003B0  010E               	movlb	14	; () banked
  2228  0003B2  97C9               	bcf	201,3,b	;volatile
  2229  0003B4                     
  2230                           ; BSR set to: 14
  2231                           ;mcc_generated_files/tmr4.c: 171:     if(TMR4_InterruptHandler)
  2232  0003B4  5032               	movf	_TMR4_InterruptHandler^0,w,c
  2233  0003B6  1033               	iorwf	(_TMR4_InterruptHandler+1)^0,w,c
  2234  0003B8  B4D8               	btfsc	status,2,c
  2235  0003BA  EFE1  F001         	goto	i2u12_41
  2236  0003BE  EFE3  F001         	goto	i2u12_40
  2237  0003C2                     i2u12_41:
  2238  0003C2  EFF0  F001         	goto	i2l314
  2239  0003C6                     i2u12_40:
  2240  0003C6                     
  2241                           ; BSR set to: 14
  2242                           ;mcc_generated_files/tmr4.c: 172:     {;mcc_generated_files/tmr4.c: 173:         TMR4_In
      +                          terruptHandler();
  2243  0003C6  D802               	call	i2u13_48
  2244  0003C8  EFF0  F001         	goto	i2u13_49
  2245  0003CC                     i2u13_48:
  2246  0003CC  0005               	push	
  2247  0003CE  6EFA               	movwf	pclath,c
  2248  0003D0  5032               	movf	_TMR4_InterruptHandler^0,w,c
  2249  0003D2  6EFD               	movwf	tosl,c
  2250  0003D4  5033               	movf	(_TMR4_InterruptHandler+1)^0,w,c
  2251  0003D6  6EFE               	movwf	tosh,c
  2252  0003D8  50F8               	movf	tblptru,w,c
  2253  0003DA  6EFF               	movwf	tosu,c
  2254  0003DC  50FA               	movf	pclath,w,c
  2255  0003DE  0012               	return		;indir
  2256  0003E0                     i2u13_49:
  2257  0003E0                     i2l314:
  2258  0003E0  0012               	return		;funcret
  2259  0003E2                     __end_of_TMR4_ISR:
  2260                           	callstack 0
  2261                           
  2262 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  2263 ;; Defined at:
  2264 ;;		line 182 in file "mcc_generated_files/tmr4.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;		None
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;		None
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  1    wreg      void 
  2271 ;; Registers used:
  2272 ;;		None
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2282 ;;Total ram usage:        0 bytes
  2283 ;; Hardware stack levels used: 1
  2284 ;; This function calls:
  2285 ;;		Nothing
  2286 ;; This function is called by:
  2287 ;;		_TMR4_Initialize
  2288 ;;		_TMR4_ISR
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292                           	psect	text27
  2293  0005EC                     __ptext27:
  2294                           	callstack 0
  2295  0005EC                     _TMR4_DefaultInterruptHandler:
  2296                           	callstack 24
  2297  0005EC  0012               	return		;funcret
  2298  0005EE                     __end_of_TMR4_DefaultInterruptHandler:
  2299                           	callstack 0
  2300                           
  2301 ;; *************** function _TMR0_ISR *****************
  2302 ;; Defined at:
  2303 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;		None
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;		None
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  1    wreg      void 
  2310 ;; Registers used:
  2311 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2321 ;;Total ram usage:        0 bytes
  2322 ;; Hardware stack levels used: 1
  2323 ;; Hardware stack levels required when called: 3
  2324 ;; This function calls:
  2325 ;;		_TMR0_CallBack
  2326 ;; This function is called by:
  2327 ;;		_INTERRUPT_InterruptManager
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           	psect	text28
  2332  0005A0                     __ptext28:
  2333                           	callstack 0
  2334  0005A0                     _TMR0_ISR:
  2335                           	callstack 22
  2336  0005A0                     
  2337                           ;mcc_generated_files/tmr0.c: 137:     PIR0bits.TMR0IF = 0;
  2338  0005A0  010E               	movlb	14	; () banked
  2339  0005A2  9BC5               	bcf	197,5,b	;volatile
  2340  0005A4                     
  2341                           ; BSR set to: 14
  2342                           ;mcc_generated_files/tmr0.c: 139:     TMR0H = timer0ReloadVal16bit >> 8;
  2343  0005A4  5037               	movf	(_timer0ReloadVal16bit+1)^0,w,c	;volatile
  2344  0005A6  6ED3               	movwf	211,c	;volatile
  2345  0005A8                     
  2346                           ; BSR set to: 14
  2347                           ;mcc_generated_files/tmr0.c: 140:     TMR0L = (uint8_t) timer0ReloadVal16bit;
  2348  0005A8  C036  FFD2         	movff	_timer0ReloadVal16bit,4050	;volatile
  2349  0005AC                     
  2350                           ; BSR set to: 14
  2351                           ;mcc_generated_files/tmr0.c: 144:     TMR0_CallBack();
  2352  0005AC  EC08  F002         	call	_TMR0_CallBack	;wreg free
  2353  0005B0  0012               	return		;funcret
  2354  0005B2                     __end_of_TMR0_ISR:
  2355                           	callstack 0
  2356                           
  2357 ;; *************** function _TMR0_CallBack *****************
  2358 ;; Defined at:
  2359 ;;		line 149 in file "mcc_generated_files/tmr0.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;		None
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;		None
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  1    wreg      void 
  2366 ;; Registers used:
  2367 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2377 ;;Total ram usage:        0 bytes
  2378 ;; Hardware stack levels used: 1
  2379 ;; Hardware stack levels required when called: 2
  2380 ;; This function calls:
  2381 ;;		Absolute function
  2382 ;;		_TMR0_DefaultInterruptHandler
  2383 ;;		_msTick
  2384 ;; This function is called by:
  2385 ;;		_TMR0_ISR
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389                           	psect	text29
  2390  000410                     __ptext29:
  2391                           	callstack 0
  2392  000410                     _TMR0_CallBack:
  2393                           	callstack 22
  2394  000410                     
  2395                           ;mcc_generated_files/tmr0.c: 153:     if(TMR0_InterruptHandler)
  2396  000410  5034               	movf	_TMR0_InterruptHandler^0,w,c
  2397  000412  1035               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  2398  000414  B4D8               	btfsc	status,2,c
  2399  000416  EF0F  F002         	goto	i2u5_41
  2400  00041A  EF11  F002         	goto	i2u5_40
  2401  00041E                     i2u5_41:
  2402  00041E  EF1E  F002         	goto	i2l184
  2403  000422                     i2u5_40:
  2404  000422                     
  2405                           ;mcc_generated_files/tmr0.c: 154:     {;mcc_generated_files/tmr0.c: 155:         TMR0_In
      +                          terruptHandler();
  2406  000422  D802               	call	i2u6_48
  2407  000424  EF1E  F002         	goto	i2u6_49
  2408  000428                     i2u6_48:
  2409  000428  0005               	push	
  2410  00042A  6EFA               	movwf	pclath,c
  2411  00042C  5034               	movf	_TMR0_InterruptHandler^0,w,c
  2412  00042E  6EFD               	movwf	tosl,c
  2413  000430  5035               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  2414  000432  6EFE               	movwf	tosh,c
  2415  000434  50F8               	movf	tblptru,w,c
  2416  000436  6EFF               	movwf	tosu,c
  2417  000438  50FA               	movf	pclath,w,c
  2418  00043A  0012               	return		;indir
  2419  00043C                     i2u6_49:
  2420  00043C                     i2l184:
  2421  00043C  0012               	return		;funcret
  2422  00043E                     __end_of_TMR0_CallBack:
  2423                           	callstack 0
  2424                           
  2425 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  2426 ;; Defined at:
  2427 ;;		line 163 in file "mcc_generated_files/tmr0.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;		None
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;		None
  2432 ;; Return value:  Size  Location     Type
  2433 ;;                  1    wreg      void 
  2434 ;; Registers used:
  2435 ;;		None
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2445 ;;Total ram usage:        0 bytes
  2446 ;; Hardware stack levels used: 1
  2447 ;; This function calls:
  2448 ;;		Nothing
  2449 ;; This function is called by:
  2450 ;;		_TMR0_Initialize
  2451 ;;		_TMR0_CallBack
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455                           	psect	text30
  2456  0005EE                     __ptext30:
  2457                           	callstack 0
  2458  0005EE                     _TMR0_DefaultInterruptHandler:
  2459                           	callstack 23
  2460  0005EE  0012               	return		;funcret
  2461  0005F0                     __end_of_TMR0_DefaultInterruptHandler:
  2462                           	callstack 0
  2463                           
  2464 ;; *************** function _msTick *****************
  2465 ;; Defined at:
  2466 ;;		line 156 in file "app.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;		None
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;		None
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      void 
  2473 ;; Registers used:
  2474 ;;		wreg, status,2, status,0, cstack
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2484 ;;Total ram usage:        0 bytes
  2485 ;; Hardware stack levels used: 1
  2486 ;; Hardware stack levels required when called: 1
  2487 ;; This function calls:
  2488 ;;		_rgbButtonTick
  2489 ;; This function is called by:
  2490 ;;		_appInit
  2491 ;;		_TMR0_CallBack
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           	psect	text31
  2496  000532                     __ptext31:
  2497                           	callstack 0
  2498  000532                     _msTick:
  2499                           	callstack 22
  2500  000532                     
  2501                           ;app.c: 157:     rgbButtonTick();
  2502  000532  EC5D  F002         	call	_rgbButtonTick	;wreg free
  2503  000536                     
  2504                           ;app.c: 158:     msTicks++;
  2505  000536  0E01               	movlw	1
  2506  000538  2613               	addwf	_msTicks^0,f,c
  2507  00053A  0E00               	movlw	0
  2508  00053C  2214               	addwfc	(_msTicks+1)^0,f,c
  2509  00053E  2215               	addwfc	(_msTicks+2)^0,f,c
  2510  000540  2216               	addwfc	(_msTicks+3)^0,f,c
  2511  000542  2217               	addwfc	(_msTicks+4)^0,f,c
  2512  000544  2218               	addwfc	(_msTicks+5)^0,f,c
  2513  000546  2219               	addwfc	(_msTicks+6)^0,f,c
  2514  000548  221A               	addwfc	(_msTicks+7)^0,f,c
  2515  00054A  0012               	return		;funcret
  2516  00054C                     __end_of_msTick:
  2517                           	callstack 0
  2518                           
  2519 ;; *************** function _rgbButtonTick *****************
  2520 ;; Defined at:
  2521 ;;		line 60 in file "rgbButton.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;		None
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;		None
  2526 ;; Return value:  Size  Location     Type
  2527 ;;                  1    wreg      void 
  2528 ;; Registers used:
  2529 ;;		wreg, status,2, status,0
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2539 ;;Total ram usage:        0 bytes
  2540 ;; Hardware stack levels used: 1
  2541 ;; This function calls:
  2542 ;;		Nothing
  2543 ;; This function is called by:
  2544 ;;		_msTick
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           	psect	text32
  2549  0004BA                     __ptext32:
  2550                           	callstack 0
  2551  0004BA                     _rgbButtonTick:
  2552                           	callstack 22
  2553  0004BA                     
  2554                           ;rgbButton.c: 61:     cButton.ticks.colorRefreshTicks++;
  2555  0004BA  0E01               	movlw	1
  2556  0004BC  260C               	addwf	(_cButton+11)^0,f,c
  2557  0004BE  0E00               	movlw	0
  2558  0004C0  220D               	addwfc	(_cButton+12)^0,f,c
  2559  0004C2  220E               	addwfc	(_cButton+13)^0,f,c
  2560  0004C4  220F               	addwfc	(_cButton+14)^0,f,c
  2561                           
  2562                           ;rgbButton.c: 62:     cButton.ticks.buttonPressedTicks++;
  2563  0004C6  0E01               	movlw	1
  2564  0004C8  2604               	addwf	(_cButton+3)^0,f,c
  2565  0004CA  0E00               	movlw	0
  2566  0004CC  2205               	addwfc	(_cButton+4)^0,f,c
  2567  0004CE  2206               	addwfc	(_cButton+5)^0,f,c
  2568  0004D0  2207               	addwfc	(_cButton+6)^0,f,c
  2569                           
  2570                           ;rgbButton.c: 63:     cButton.ticks.debounceTicks++;
  2571  0004D2  0E01               	movlw	1
  2572  0004D4  2608               	addwf	(_cButton+7)^0,f,c
  2573  0004D6  0E00               	movlw	0
  2574  0004D8  2209               	addwfc	(_cButton+8)^0,f,c
  2575  0004DA  220A               	addwfc	(_cButton+9)^0,f,c
  2576  0004DC  220B               	addwfc	(_cButton+10)^0,f,c
  2577  0004DE  0012               	return		;funcret
  2578  0004E0                     __end_of_rgbButtonTick:
  2579                           	callstack 0
  2580  0000                     
  2581                           	psect	text33
  2582  000000                     __ptext33:
  2583                           	callstack 0
  2584  000000                     
  2585                           	psect	rparam
  2586  0000                     
  2587                           	psect	temp
  2588  000038                     btemp:
  2589                           	callstack 0
  2590  000038                     	ds	1
  2591  0000                     int$flags	set	btemp
  2592  0000                     wtemp8	set	btemp+1
  2593  0000                     ttemp5	set	btemp+1
  2594  0000                     ttemp6	set	btemp+4
  2595  0000                     ttemp7	set	btemp+8
  2596                           
  2597                           	psect	idloc
  2598                           
  2599                           ;Config register IDLOC0 @ 0x200000
  2600                           ;	unspecified, using default values
  2601  200000                     	org	2097152
  2602  200000  FFFF               	dw	65535
  2603                           
  2604                           ;Config register IDLOC1 @ 0x200002
  2605                           ;	unspecified, using default values
  2606  200002                     	org	2097154
  2607  200002  FFFF               	dw	65535
  2608                           
  2609                           ;Config register IDLOC2 @ 0x200004
  2610                           ;	unspecified, using default values
  2611  200004                     	org	2097156
  2612  200004  FFFF               	dw	65535
  2613                           
  2614                           ;Config register IDLOC3 @ 0x200006
  2615                           ;	unspecified, using default values
  2616  200006                     	org	2097158
  2617  200006  FFFF               	dw	65535
  2618                           
  2619                           ;Config register IDLOC4 @ 0x200008
  2620                           ;	unspecified, using default values
  2621  200008                     	org	2097160
  2622  200008  FFFF               	dw	65535
  2623                           
  2624                           ;Config register IDLOC5 @ 0x20000A
  2625                           ;	unspecified, using default values
  2626  20000A                     	org	2097162
  2627  20000A  FFFF               	dw	65535
  2628                           
  2629                           ;Config register IDLOC6 @ 0x20000C
  2630                           ;	unspecified, using default values
  2631  20000C                     	org	2097164
  2632  20000C  FFFF               	dw	65535
  2633                           
  2634                           ;Config register IDLOC7 @ 0x20000E
  2635                           ;	unspecified, using default values
  2636  20000E                     	org	2097166
  2637  20000E  FFFF               	dw	65535
  2638                           
  2639                           ;Config register IDLOC8 @ 0x200010
  2640                           ;	unspecified, using default values
  2641  200010                     	org	2097168
  2642  200010  FFFF               	dw	65535
  2643                           
  2644                           ;Config register IDLOC9 @ 0x200012
  2645                           ;	unspecified, using default values
  2646  200012                     	org	2097170
  2647  200012  FFFF               	dw	65535
  2648                           
  2649                           ;Config register IDLOC10 @ 0x200014
  2650                           ;	unspecified, using default values
  2651  200014                     	org	2097172
  2652  200014  FFFF               	dw	65535
  2653                           
  2654                           ;Config register IDLOC11 @ 0x200016
  2655                           ;	unspecified, using default values
  2656  200016                     	org	2097174
  2657  200016  FFFF               	dw	65535
  2658                           
  2659                           ;Config register IDLOC12 @ 0x200018
  2660                           ;	unspecified, using default values
  2661  200018                     	org	2097176
  2662  200018  FFFF               	dw	65535
  2663                           
  2664                           ;Config register IDLOC13 @ 0x20001A
  2665                           ;	unspecified, using default values
  2666  20001A                     	org	2097178
  2667  20001A  FFFF               	dw	65535
  2668                           
  2669                           ;Config register IDLOC14 @ 0x20001C
  2670                           ;	unspecified, using default values
  2671  20001C                     	org	2097180
  2672  20001C  FFFF               	dw	65535
  2673                           
  2674                           ;Config register IDLOC15 @ 0x20001E
  2675                           ;	unspecified, using default values
  2676  20001E                     	org	2097182
  2677  20001E  FFFF               	dw	65535
  2678                           
  2679                           ;Config register IDLOC16 @ 0x200020
  2680                           ;	unspecified, using default values
  2681  200020                     	org	2097184
  2682  200020  FFFF               	dw	65535
  2683                           
  2684                           ;Config register IDLOC17 @ 0x200022
  2685                           ;	unspecified, using default values
  2686  200022                     	org	2097186
  2687  200022  FFFF               	dw	65535
  2688                           
  2689                           ;Config register IDLOC18 @ 0x200024
  2690                           ;	unspecified, using default values
  2691  200024                     	org	2097188
  2692  200024  FFFF               	dw	65535
  2693                           
  2694                           ;Config register IDLOC19 @ 0x200026
  2695                           ;	unspecified, using default values
  2696  200026                     	org	2097190
  2697  200026  FFFF               	dw	65535
  2698                           
  2699                           ;Config register IDLOC20 @ 0x200028
  2700                           ;	unspecified, using default values
  2701  200028                     	org	2097192
  2702  200028  FFFF               	dw	65535
  2703                           
  2704                           ;Config register IDLOC21 @ 0x20002A
  2705                           ;	unspecified, using default values
  2706  20002A                     	org	2097194
  2707  20002A  FFFF               	dw	65535
  2708                           
  2709                           ;Config register IDLOC22 @ 0x20002C
  2710                           ;	unspecified, using default values
  2711  20002C                     	org	2097196
  2712  20002C  FFFF               	dw	65535
  2713                           
  2714                           ;Config register IDLOC23 @ 0x20002E
  2715                           ;	unspecified, using default values
  2716  20002E                     	org	2097198
  2717  20002E  FFFF               	dw	65535
  2718                           
  2719                           ;Config register IDLOC24 @ 0x200030
  2720                           ;	unspecified, using default values
  2721  200030                     	org	2097200
  2722  200030  FFFF               	dw	65535
  2723                           
  2724                           ;Config register IDLOC25 @ 0x200032
  2725                           ;	unspecified, using default values
  2726  200032                     	org	2097202
  2727  200032  FFFF               	dw	65535
  2728                           
  2729                           ;Config register IDLOC26 @ 0x200034
  2730                           ;	unspecified, using default values
  2731  200034                     	org	2097204
  2732  200034  FFFF               	dw	65535
  2733                           
  2734                           ;Config register IDLOC27 @ 0x200036
  2735                           ;	unspecified, using default values
  2736  200036                     	org	2097206
  2737  200036  FFFF               	dw	65535
  2738                           
  2739                           ;Config register IDLOC28 @ 0x200038
  2740                           ;	unspecified, using default values
  2741  200038                     	org	2097208
  2742  200038  FFFF               	dw	65535
  2743                           
  2744                           ;Config register IDLOC29 @ 0x20003A
  2745                           ;	unspecified, using default values
  2746  20003A                     	org	2097210
  2747  20003A  FFFF               	dw	65535
  2748                           
  2749                           ;Config register IDLOC30 @ 0x20003C
  2750                           ;	unspecified, using default values
  2751  20003C                     	org	2097212
  2752  20003C  FFFF               	dw	65535
  2753                           
  2754                           ;Config register IDLOC31 @ 0x20003E
  2755                           ;	unspecified, using default values
  2756  20003E                     	org	2097214
  2757  20003E  FFFF               	dw	65535
  2758                           
  2759                           ;Config register IDLOC32 @ 0x200040
  2760                           ;	unspecified, using default values
  2761  200040                     	org	2097216
  2762  200040  FFFF               	dw	65535
  2763                           
  2764                           ;Config register IDLOC33 @ 0x200042
  2765                           ;	unspecified, using default values
  2766  200042                     	org	2097218
  2767  200042  FFFF               	dw	65535
  2768                           
  2769                           ;Config register IDLOC34 @ 0x200044
  2770                           ;	unspecified, using default values
  2771  200044                     	org	2097220
  2772  200044  FFFF               	dw	65535
  2773                           
  2774                           ;Config register IDLOC35 @ 0x200046
  2775                           ;	unspecified, using default values
  2776  200046                     	org	2097222
  2777  200046  FFFF               	dw	65535
  2778                           
  2779                           ;Config register IDLOC36 @ 0x200048
  2780                           ;	unspecified, using default values
  2781  200048                     	org	2097224
  2782  200048  FFFF               	dw	65535
  2783                           
  2784                           ;Config register IDLOC37 @ 0x20004A
  2785                           ;	unspecified, using default values
  2786  20004A                     	org	2097226
  2787  20004A  FFFF               	dw	65535
  2788                           
  2789                           ;Config register IDLOC38 @ 0x20004C
  2790                           ;	unspecified, using default values
  2791  20004C                     	org	2097228
  2792  20004C  FFFF               	dw	65535
  2793                           
  2794                           ;Config register IDLOC39 @ 0x20004E
  2795                           ;	unspecified, using default values
  2796  20004E                     	org	2097230
  2797  20004E  FFFF               	dw	65535
  2798                           
  2799                           ;Config register IDLOC40 @ 0x200050
  2800                           ;	unspecified, using default values
  2801  200050                     	org	2097232
  2802  200050  FFFF               	dw	65535
  2803                           
  2804                           ;Config register IDLOC41 @ 0x200052
  2805                           ;	unspecified, using default values
  2806  200052                     	org	2097234
  2807  200052  FFFF               	dw	65535
  2808                           
  2809                           ;Config register IDLOC42 @ 0x200054
  2810                           ;	unspecified, using default values
  2811  200054                     	org	2097236
  2812  200054  FFFF               	dw	65535
  2813                           
  2814                           ;Config register IDLOC43 @ 0x200056
  2815                           ;	unspecified, using default values
  2816  200056                     	org	2097238
  2817  200056  FFFF               	dw	65535
  2818                           
  2819                           ;Config register IDLOC44 @ 0x200058
  2820                           ;	unspecified, using default values
  2821  200058                     	org	2097240
  2822  200058  FFFF               	dw	65535
  2823                           
  2824                           ;Config register IDLOC45 @ 0x20005A
  2825                           ;	unspecified, using default values
  2826  20005A                     	org	2097242
  2827  20005A  FFFF               	dw	65535
  2828                           
  2829                           ;Config register IDLOC46 @ 0x20005C
  2830                           ;	unspecified, using default values
  2831  20005C                     	org	2097244
  2832  20005C  FFFF               	dw	65535
  2833                           
  2834                           ;Config register IDLOC47 @ 0x20005E
  2835                           ;	unspecified, using default values
  2836  20005E                     	org	2097246
  2837  20005E  FFFF               	dw	65535
  2838                           
  2839                           ;Config register IDLOC48 @ 0x200060
  2840                           ;	unspecified, using default values
  2841  200060                     	org	2097248
  2842  200060  FFFF               	dw	65535
  2843                           
  2844                           ;Config register IDLOC49 @ 0x200062
  2845                           ;	unspecified, using default values
  2846  200062                     	org	2097250
  2847  200062  FFFF               	dw	65535
  2848                           
  2849                           ;Config register IDLOC50 @ 0x200064
  2850                           ;	unspecified, using default values
  2851  200064                     	org	2097252
  2852  200064  FFFF               	dw	65535
  2853                           
  2854                           ;Config register IDLOC51 @ 0x200066
  2855                           ;	unspecified, using default values
  2856  200066                     	org	2097254
  2857  200066  FFFF               	dw	65535
  2858                           
  2859                           ;Config register IDLOC52 @ 0x200068
  2860                           ;	unspecified, using default values
  2861  200068                     	org	2097256
  2862  200068  FFFF               	dw	65535
  2863                           
  2864                           ;Config register IDLOC53 @ 0x20006A
  2865                           ;	unspecified, using default values
  2866  20006A                     	org	2097258
  2867  20006A  FFFF               	dw	65535
  2868                           
  2869                           ;Config register IDLOC54 @ 0x20006C
  2870                           ;	unspecified, using default values
  2871  20006C                     	org	2097260
  2872  20006C  FFFF               	dw	65535
  2873                           
  2874                           ;Config register IDLOC55 @ 0x20006E
  2875                           ;	unspecified, using default values
  2876  20006E                     	org	2097262
  2877  20006E  FFFF               	dw	65535
  2878                           
  2879                           ;Config register IDLOC56 @ 0x200070
  2880                           ;	unspecified, using default values
  2881  200070                     	org	2097264
  2882  200070  FFFF               	dw	65535
  2883                           
  2884                           ;Config register IDLOC57 @ 0x200072
  2885                           ;	unspecified, using default values
  2886  200072                     	org	2097266
  2887  200072  FFFF               	dw	65535
  2888                           
  2889                           ;Config register IDLOC58 @ 0x200074
  2890                           ;	unspecified, using default values
  2891  200074                     	org	2097268
  2892  200074  FFFF               	dw	65535
  2893                           
  2894                           ;Config register IDLOC59 @ 0x200076
  2895                           ;	unspecified, using default values
  2896  200076                     	org	2097270
  2897  200076  FFFF               	dw	65535
  2898                           
  2899                           ;Config register IDLOC60 @ 0x200078
  2900                           ;	unspecified, using default values
  2901  200078                     	org	2097272
  2902  200078  FFFF               	dw	65535
  2903                           
  2904                           ;Config register IDLOC61 @ 0x20007A
  2905                           ;	unspecified, using default values
  2906  20007A                     	org	2097274
  2907  20007A  FFFF               	dw	65535
  2908                           
  2909                           ;Config register IDLOC62 @ 0x20007C
  2910                           ;	unspecified, using default values
  2911  20007C                     	org	2097276
  2912  20007C  FFFF               	dw	65535
  2913                           
  2914                           ;Config register IDLOC63 @ 0x20007E
  2915                           ;	unspecified, using default values
  2916  20007E                     	org	2097278
  2917  20007E  FFFF               	dw	65535
  2918                           
  2919                           ;Config register IDLOC64 @ 0x200080
  2920                           ;	unspecified, using default values
  2921  200080                     	org	2097280
  2922  200080  FFFF               	dw	65535
  2923                           
  2924                           ;Config register IDLOC65 @ 0x200082
  2925                           ;	unspecified, using default values
  2926  200082                     	org	2097282
  2927  200082  FFFF               	dw	65535
  2928                           
  2929                           ;Config register IDLOC66 @ 0x200084
  2930                           ;	unspecified, using default values
  2931  200084                     	org	2097284
  2932  200084  FFFF               	dw	65535
  2933                           
  2934                           ;Config register IDLOC67 @ 0x200086
  2935                           ;	unspecified, using default values
  2936  200086                     	org	2097286
  2937  200086  FFFF               	dw	65535
  2938                           
  2939                           ;Config register IDLOC68 @ 0x200088
  2940                           ;	unspecified, using default values
  2941  200088                     	org	2097288
  2942  200088  FFFF               	dw	65535
  2943                           
  2944                           ;Config register IDLOC69 @ 0x20008A
  2945                           ;	unspecified, using default values
  2946  20008A                     	org	2097290
  2947  20008A  FFFF               	dw	65535
  2948                           
  2949                           ;Config register IDLOC70 @ 0x20008C
  2950                           ;	unspecified, using default values
  2951  20008C                     	org	2097292
  2952  20008C  FFFF               	dw	65535
  2953                           
  2954                           ;Config register IDLOC71 @ 0x20008E
  2955                           ;	unspecified, using default values
  2956  20008E                     	org	2097294
  2957  20008E  FFFF               	dw	65535
  2958                           
  2959                           ;Config register IDLOC72 @ 0x200090
  2960                           ;	unspecified, using default values
  2961  200090                     	org	2097296
  2962  200090  FFFF               	dw	65535
  2963                           
  2964                           ;Config register IDLOC73 @ 0x200092
  2965                           ;	unspecified, using default values
  2966  200092                     	org	2097298
  2967  200092  FFFF               	dw	65535
  2968                           
  2969                           ;Config register IDLOC74 @ 0x200094
  2970                           ;	unspecified, using default values
  2971  200094                     	org	2097300
  2972  200094  FFFF               	dw	65535
  2973                           
  2974                           ;Config register IDLOC75 @ 0x200096
  2975                           ;	unspecified, using default values
  2976  200096                     	org	2097302
  2977  200096  FFFF               	dw	65535
  2978                           
  2979                           ;Config register IDLOC76 @ 0x200098
  2980                           ;	unspecified, using default values
  2981  200098                     	org	2097304
  2982  200098  FFFF               	dw	65535
  2983                           
  2984                           ;Config register IDLOC77 @ 0x20009A
  2985                           ;	unspecified, using default values
  2986  20009A                     	org	2097306
  2987  20009A  FFFF               	dw	65535
  2988                           
  2989                           ;Config register IDLOC78 @ 0x20009C
  2990                           ;	unspecified, using default values
  2991  20009C                     	org	2097308
  2992  20009C  FFFF               	dw	65535
  2993                           
  2994                           ;Config register IDLOC79 @ 0x20009E
  2995                           ;	unspecified, using default values
  2996  20009E                     	org	2097310
  2997  20009E  FFFF               	dw	65535
  2998                           
  2999                           ;Config register IDLOC80 @ 0x2000A0
  3000                           ;	unspecified, using default values
  3001  2000A0                     	org	2097312
  3002  2000A0  FFFF               	dw	65535
  3003                           
  3004                           ;Config register IDLOC81 @ 0x2000A2
  3005                           ;	unspecified, using default values
  3006  2000A2                     	org	2097314
  3007  2000A2  FFFF               	dw	65535
  3008                           
  3009                           ;Config register IDLOC82 @ 0x2000A4
  3010                           ;	unspecified, using default values
  3011  2000A4                     	org	2097316
  3012  2000A4  FFFF               	dw	65535
  3013                           
  3014                           ;Config register IDLOC83 @ 0x2000A6
  3015                           ;	unspecified, using default values
  3016  2000A6                     	org	2097318
  3017  2000A6  FFFF               	dw	65535
  3018                           
  3019                           ;Config register IDLOC84 @ 0x2000A8
  3020                           ;	unspecified, using default values
  3021  2000A8                     	org	2097320
  3022  2000A8  FFFF               	dw	65535
  3023                           
  3024                           ;Config register IDLOC85 @ 0x2000AA
  3025                           ;	unspecified, using default values
  3026  2000AA                     	org	2097322
  3027  2000AA  FFFF               	dw	65535
  3028                           
  3029                           ;Config register IDLOC86 @ 0x2000AC
  3030                           ;	unspecified, using default values
  3031  2000AC                     	org	2097324
  3032  2000AC  FFFF               	dw	65535
  3033                           
  3034                           ;Config register IDLOC87 @ 0x2000AE
  3035                           ;	unspecified, using default values
  3036  2000AE                     	org	2097326
  3037  2000AE  FFFF               	dw	65535
  3038                           
  3039                           ;Config register IDLOC88 @ 0x2000B0
  3040                           ;	unspecified, using default values
  3041  2000B0                     	org	2097328
  3042  2000B0  FFFF               	dw	65535
  3043                           
  3044                           ;Config register IDLOC89 @ 0x2000B2
  3045                           ;	unspecified, using default values
  3046  2000B2                     	org	2097330
  3047  2000B2  FFFF               	dw	65535
  3048                           
  3049                           ;Config register IDLOC90 @ 0x2000B4
  3050                           ;	unspecified, using default values
  3051  2000B4                     	org	2097332
  3052  2000B4  FFFF               	dw	65535
  3053                           
  3054                           ;Config register IDLOC91 @ 0x2000B6
  3055                           ;	unspecified, using default values
  3056  2000B6                     	org	2097334
  3057  2000B6  FFFF               	dw	65535
  3058                           
  3059                           ;Config register IDLOC92 @ 0x2000B8
  3060                           ;	unspecified, using default values
  3061  2000B8                     	org	2097336
  3062  2000B8  FFFF               	dw	65535
  3063                           
  3064                           ;Config register IDLOC93 @ 0x2000BA
  3065                           ;	unspecified, using default values
  3066  2000BA                     	org	2097338
  3067  2000BA  FFFF               	dw	65535
  3068                           
  3069                           ;Config register IDLOC94 @ 0x2000BC
  3070                           ;	unspecified, using default values
  3071  2000BC                     	org	2097340
  3072  2000BC  FFFF               	dw	65535
  3073                           
  3074                           ;Config register IDLOC95 @ 0x2000BE
  3075                           ;	unspecified, using default values
  3076  2000BE                     	org	2097342
  3077  2000BE  FFFF               	dw	65535
  3078                           
  3079                           ;Config register IDLOC96 @ 0x2000C0
  3080                           ;	unspecified, using default values
  3081  2000C0                     	org	2097344
  3082  2000C0  FFFF               	dw	65535
  3083                           
  3084                           ;Config register IDLOC97 @ 0x2000C2
  3085                           ;	unspecified, using default values
  3086  2000C2                     	org	2097346
  3087  2000C2  FFFF               	dw	65535
  3088                           
  3089                           ;Config register IDLOC98 @ 0x2000C4
  3090                           ;	unspecified, using default values
  3091  2000C4                     	org	2097348
  3092  2000C4  FFFF               	dw	65535
  3093                           
  3094                           ;Config register IDLOC99 @ 0x2000C6
  3095                           ;	unspecified, using default values
  3096  2000C6                     	org	2097350
  3097  2000C6  FFFF               	dw	65535
  3098                           
  3099                           ;Config register IDLOC100 @ 0x2000C8
  3100                           ;	unspecified, using default values
  3101  2000C8                     	org	2097352
  3102  2000C8  FFFF               	dw	65535
  3103                           
  3104                           ;Config register IDLOC101 @ 0x2000CA
  3105                           ;	unspecified, using default values
  3106  2000CA                     	org	2097354
  3107  2000CA  FFFF               	dw	65535
  3108                           
  3109                           ;Config register IDLOC102 @ 0x2000CC
  3110                           ;	unspecified, using default values
  3111  2000CC                     	org	2097356
  3112  2000CC  FFFF               	dw	65535
  3113                           
  3114                           ;Config register IDLOC103 @ 0x2000CE
  3115                           ;	unspecified, using default values
  3116  2000CE                     	org	2097358
  3117  2000CE  FFFF               	dw	65535
  3118                           
  3119                           ;Config register IDLOC104 @ 0x2000D0
  3120                           ;	unspecified, using default values
  3121  2000D0                     	org	2097360
  3122  2000D0  FFFF               	dw	65535
  3123                           
  3124                           ;Config register IDLOC105 @ 0x2000D2
  3125                           ;	unspecified, using default values
  3126  2000D2                     	org	2097362
  3127  2000D2  FFFF               	dw	65535
  3128                           
  3129                           ;Config register IDLOC106 @ 0x2000D4
  3130                           ;	unspecified, using default values
  3131  2000D4                     	org	2097364
  3132  2000D4  FFFF               	dw	65535
  3133                           
  3134                           ;Config register IDLOC107 @ 0x2000D6
  3135                           ;	unspecified, using default values
  3136  2000D6                     	org	2097366
  3137  2000D6  FFFF               	dw	65535
  3138                           
  3139                           ;Config register IDLOC108 @ 0x2000D8
  3140                           ;	unspecified, using default values
  3141  2000D8                     	org	2097368
  3142  2000D8  FFFF               	dw	65535
  3143                           
  3144                           ;Config register IDLOC109 @ 0x2000DA
  3145                           ;	unspecified, using default values
  3146  2000DA                     	org	2097370
  3147  2000DA  FFFF               	dw	65535
  3148                           
  3149                           ;Config register IDLOC110 @ 0x2000DC
  3150                           ;	unspecified, using default values
  3151  2000DC                     	org	2097372
  3152  2000DC  FFFF               	dw	65535
  3153                           
  3154                           ;Config register IDLOC111 @ 0x2000DE
  3155                           ;	unspecified, using default values
  3156  2000DE                     	org	2097374
  3157  2000DE  FFFF               	dw	65535
  3158                           
  3159                           ;Config register IDLOC112 @ 0x2000E0
  3160                           ;	unspecified, using default values
  3161  2000E0                     	org	2097376
  3162  2000E0  FFFF               	dw	65535
  3163                           
  3164                           ;Config register IDLOC113 @ 0x2000E2
  3165                           ;	unspecified, using default values
  3166  2000E2                     	org	2097378
  3167  2000E2  FFFF               	dw	65535
  3168                           
  3169                           ;Config register IDLOC114 @ 0x2000E4
  3170                           ;	unspecified, using default values
  3171  2000E4                     	org	2097380
  3172  2000E4  FFFF               	dw	65535
  3173                           
  3174                           ;Config register IDLOC115 @ 0x2000E6
  3175                           ;	unspecified, using default values
  3176  2000E6                     	org	2097382
  3177  2000E6  FFFF               	dw	65535
  3178                           
  3179                           ;Config register IDLOC116 @ 0x2000E8
  3180                           ;	unspecified, using default values
  3181  2000E8                     	org	2097384
  3182  2000E8  FFFF               	dw	65535
  3183                           
  3184                           ;Config register IDLOC117 @ 0x2000EA
  3185                           ;	unspecified, using default values
  3186  2000EA                     	org	2097386
  3187  2000EA  FFFF               	dw	65535
  3188                           
  3189                           ;Config register IDLOC118 @ 0x2000EC
  3190                           ;	unspecified, using default values
  3191  2000EC                     	org	2097388
  3192  2000EC  FFFF               	dw	65535
  3193                           
  3194                           ;Config register IDLOC119 @ 0x2000EE
  3195                           ;	unspecified, using default values
  3196  2000EE                     	org	2097390
  3197  2000EE  FFFF               	dw	65535
  3198                           
  3199                           ;Config register IDLOC120 @ 0x2000F0
  3200                           ;	unspecified, using default values
  3201  2000F0                     	org	2097392
  3202  2000F0  FFFF               	dw	65535
  3203                           
  3204                           ;Config register IDLOC121 @ 0x2000F2
  3205                           ;	unspecified, using default values
  3206  2000F2                     	org	2097394
  3207  2000F2  FFFF               	dw	65535
  3208                           
  3209                           ;Config register IDLOC122 @ 0x2000F4
  3210                           ;	unspecified, using default values
  3211  2000F4                     	org	2097396
  3212  2000F4  FFFF               	dw	65535
  3213                           
  3214                           ;Config register IDLOC123 @ 0x2000F6
  3215                           ;	unspecified, using default values
  3216  2000F6                     	org	2097398
  3217  2000F6  FFFF               	dw	65535
  3218                           
  3219                           ;Config register IDLOC124 @ 0x2000F8
  3220                           ;	unspecified, using default values
  3221  2000F8                     	org	2097400
  3222  2000F8  FFFF               	dw	65535
  3223                           
  3224                           ;Config register IDLOC125 @ 0x2000FA
  3225                           ;	unspecified, using default values
  3226  2000FA                     	org	2097402
  3227  2000FA  FFFF               	dw	65535
  3228                           
  3229                           ;Config register IDLOC126 @ 0x2000FC
  3230                           ;	unspecified, using default values
  3231  2000FC                     	org	2097404
  3232  2000FC  FFFF               	dw	65535
  3233                           
  3234                           ;Config register IDLOC127 @ 0x2000FE
  3235                           ;	unspecified, using default values
  3236  2000FE                     	org	2097406
  3237  2000FE  FFFF               	dw	65535
  3238                           
  3239                           	psect	config
  3240                           
  3241                           ;Config register CONFIG1L @ 0x300000
  3242                           ;	External Oscillator mode Selection bits
  3243                           ;	FEXTOSC = OFF, Oscillator not enabled
  3244                           ;	Power-up default value for COSC bits
  3245                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  3246  300000                     	org	3145728
  3247  300000  8C                 	db	140
  3248                           
  3249                           ;Config register CONFIG1H @ 0x300001
  3250                           ;	Clock Out Enable bit
  3251                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3252                           ;	Clock Switch Enable bit
  3253                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3254                           ;	Fail-Safe Clock Monitor Enable bit
  3255                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3256  300001                     	org	3145729
  3257  300001  FF                 	db	255
  3258                           
  3259                           ;Config register CONFIG2L @ 0x300002
  3260                           ;	Master Clear Enable bit
  3261                           ;	MCLRE = EXTMCLR, MCLR pin (RE3) is MCLR
  3262                           ;	Power-up Timer Enable bit
  3263                           ;	PWRTE = OFF, Power up timer disabled
  3264                           ;	Low-power BOR enable bit
  3265                           ;	LPBOREN = OFF, Low power BOR is disabled
  3266                           ;	Brown-out Reset Enable bits
  3267                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  3268  300002                     	org	3145730
  3269  300002  FF                 	db	255
  3270                           
  3271                           ;Config register CONFIG2H @ 0x300003
  3272                           ;	Brown Out Reset Voltage selection bits
  3273                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
  3274                           ;	ZCD Disable bit
  3275                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  3276                           ;	PPSLOCK bit One-Way Set Enable bit
  3277                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  3278                           ;	Stack Full/Underflow Reset Enable bit
  3279                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3280                           ;	Extended Instruction Set Enable bit
  3281                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3282  300003                     	org	3145731
  3283  300003  FF                 	db	255
  3284                           
  3285                           ;Config register CONFIG3L @ 0x300004
  3286                           ;	WDT Period Select bits
  3287                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3288                           ;	WDT operating mode
  3289                           ;	WDTE = OFF, WDT Disabled
  3290  300004                     	org	3145732
  3291  300004  9F                 	db	159
  3292                           
  3293                           ;Config register CONFIG3H @ 0x300005
  3294                           ;	WDT Window Select bits
  3295                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3296                           ;	WDT input clock selector
  3297                           ;	WDTCCS = SC, Software Control
  3298  300005                     	org	3145733
  3299  300005  FF                 	db	255
  3300                           
  3301                           ;Config register CONFIG4L @ 0x300006
  3302                           ;	Write Protection Block 0
  3303                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3304                           ;	Write Protection Block 1
  3305                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3306                           ;	Write Protection Block 2
  3307                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3308                           ;	Write Protection Block 3
  3309                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3310  300006                     	org	3145734
  3311  300006  FF                 	db	255
  3312                           
  3313                           ;Config register CONFIG4H @ 0x300007
  3314                           ;	Configuration Register Write Protection bit
  3315                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  3316                           ;	Boot Block Write Protection bit
  3317                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3318                           ;	Data EEPROM Write Protection bit
  3319                           ;	WRTD = OFF, Data EEPROM not write-protected
  3320                           ;	Scanner Enable bit
  3321                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  3322                           ;	Low Voltage Programming Enable bit
  3323                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  3324  300007                     	org	3145735
  3325  300007  FF                 	db	255
  3326                           
  3327                           ;Config register CONFIG5L @ 0x300008
  3328                           ;	UserNVM Program Memory Code Protection bit
  3329                           ;	CP = OFF, UserNVM code protection disabled
  3330                           ;	DataNVM Memory Code Protection bit
  3331                           ;	CPD = OFF, DataNVM code protection disabled
  3332  300008                     	org	3145736
  3333  300008  FF                 	db	255
  3334                           
  3335                           ;Config register CONFIG5H @ 0x300009
  3336                           ;	unspecified, using default values
  3337  300009                     	org	3145737
  3338  300009  FF                 	db	255
  3339                           
  3340                           ;Config register CONFIG6L @ 0x30000A
  3341                           ;	Table Read Protection Block 0
  3342                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3343                           ;	Table Read Protection Block 1
  3344                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3345                           ;	Table Read Protection Block 2
  3346                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3347                           ;	Table Read Protection Block 3
  3348                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3349  30000A                     	org	3145738
  3350  30000A  FF                 	db	255
  3351                           
  3352                           ;Config register CONFIG6H @ 0x30000B
  3353                           ;	Boot Block Table Read Protection bit
  3354                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3355  30000B                     	org	3145739
  3356  30000B  FF                 	db	255
  3357                           tosu	equ	0xFFF
  3358                           tosh	equ	0xFFE
  3359                           tosl	equ	0xFFD
  3360                           stkptr	equ	0xFFC
  3361                           pclatu	equ	0xFFB
  3362                           pclath	equ	0xFFA
  3363                           pcl	equ	0xFF9
  3364                           tblptru	equ	0xFF8
  3365                           tblptrh	equ	0xFF7
  3366                           tblptrl	equ	0xFF6
  3367                           tablat	equ	0xFF5
  3368                           prodh	equ	0xFF4
  3369                           prodl	equ	0xFF3
  3370                           indf0	equ	0xFEF
  3371                           postinc0	equ	0xFEE
  3372                           postdec0	equ	0xFED
  3373                           preinc0	equ	0xFEC
  3374                           plusw0	equ	0xFEB
  3375                           fsr0h	equ	0xFEA
  3376                           fsr0l	equ	0xFE9
  3377                           wreg	equ	0xFE8
  3378                           indf1	equ	0xFE7
  3379                           postinc1	equ	0xFE6
  3380                           postdec1	equ	0xFE5
  3381                           preinc1	equ	0xFE4
  3382                           plusw1	equ	0xFE3
  3383                           fsr1h	equ	0xFE2
  3384                           fsr1l	equ	0xFE1
  3385                           bsr	equ	0xFE0
  3386                           indf2	equ	0xFDF
  3387                           postinc2	equ	0xFDE
  3388                           postdec2	equ	0xFDD
  3389                           preinc2	equ	0xFDC
  3390                           plusw2	equ	0xFDB
  3391                           fsr2h	equ	0xFDA
  3392                           fsr2l	equ	0xFD9
  3393                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         36
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     13      55
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           31      0       0

Pointer List with Targets:

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> msTick(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> msTick(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_appHandler
    _appInit->_PWM3_LoadDutyValue
    _appInit->_PWM4_LoadDutyValue
    _appHandler->_rgbButtonHandler
    _rgbButtonHandler->_updateColor
    _updateColor->_PWM3_LoadDutyValue
    _updateColor->_PWM4_LoadDutyValue
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2762
                  _SYSTEM_Initialize
                    _TMR4_StartTimer
                         _appHandler
                            _appInit
 ---------------------------------------------------------------------------------
 (1) _appInit                                              0     0      0    1036
                 _PWM1_LoadDutyValue
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _appHandler                                           2     2      0    1454
                                             11 COMRAM     2     2      0
                _getIsButtonChanging
                 _getIsButtonPressed
                   _rgbButtonHandler
                           _setColor
 ---------------------------------------------------------------------------------
 (2) _setColor                                             3     1      2     522
                                              2 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _rgbButtonHandler                                     2     2      0     932
                                              9 COMRAM     2     2      0
                        _updateColor
 ---------------------------------------------------------------------------------
 (3) _updateColor                                          3     3      0     932
                                              6 COMRAM     3     3      0
                 _PWM1_LoadDutyValue
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM4_LoadDutyValue                                   4     2      2     272
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _PWM3_LoadDutyValue                                   4     2      2     272
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _PWM1_LoadDutyValue                                   2     0      2     318
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _getIsButtonPressed                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getIsButtonChanging                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR4_StartTimer                                      0     0      0       0
                         _TMR4_Start
 ---------------------------------------------------------------------------------
 (2) _TMR4_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     272
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR0_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0      98
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR4_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                              4 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     174
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           2     2      0       0
                                              0 COMRAM     2     2      0
                           _TMR0_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR4_ISR                                             0     0      0       0
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                             _msTick *
 ---------------------------------------------------------------------------------
 (8) _msTick                                               0     0      0       0
                      _rgbButtonTick
 ---------------------------------------------------------------------------------
 (9) _rgbButtonTick                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM1_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
   _TMR4_StartTimer
     _TMR4_Start
   _appHandler
     _getIsButtonChanging
     _getIsButtonPressed
     _rgbButtonHandler
       _updateColor
         _PWM1_LoadDutyValue
         _PWM3_LoadDutyValue
         _PWM4_LoadDutyValue
     _setColor
   _appInit
     _PWM1_LoadDutyValue
     _PWM3_LoadDutyValue
     _PWM4_LoadDutyValue
     _TMR0_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _msTick *
         _rgbButtonTick
   _TMR4_ISR
     Absolute function(Fake) *
     _TMR4_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E1E      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      D      37       1       58.5%
BITBANK14           1F      0       0      33        0.0%
BANK14              1F      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      37       6        0.0%
DATA                 0      0      37       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Dec 27 15:21:11 2021

                                      l55 030C                                       l101 04B8  
                                     l104 0562                                       l107 0516  
                                     l203 059E                                       l124 05EA  
                                     l222 058A                                       l208 040E  
                                     l225 03AE                                       l162 0346  
                                     l236 0576                                       l317 05CA  
                                     l430 05DE                                       l239 037A  
                                     l424 0256                                       l433 05E2  
                                     l274 0492                                       l442 02B2  
                                     l187 05D4                                       l283 05E6  
                                     l363 0468                                       l286 05DA  
                                     l439 05C0                                       l387 0192  
                                     u310 01AE                                       u311 01AA  
                                     u320 01E6                                       u305 036C  
                                     u321 01E0                                       u401 00F6  
                                     u330 01E8                                       u340 021C  
                                     u341 0218                                       u270 03F8  
                                     u350 023A                                       u271 03F4  
                                     u351 0236                                       u360 0092  
                                     _PR4 000FB5                                       u361 008E  
                                     u370 00A6                                       u371 00A2  
                                     u380 00C6                                       u285 03FA  
                                     u381 00C2                                       u390 00F0  
                                     u295 03A0                                       u391 00EC  
                 __size_of_PMD_Initialize 001C                           _PWM4_Initialize 0564  
                                     tosl 000FFD                                       wreg 000FE8  
                                    l1210 057C                                      l1300 05D6  
                                    l1160 02B4                                      l1208 0578  
                                    l1170 02EE                                      l1162 02C0  
                                    l1180 02F8                                      l1172 02F0  
                                    l1164 02C2                                      l1500 030E  
                                    l1228 05E4                                      l1182 05E8  
                                    l1174 02F2                                      l1166 02C8  
                                    l1190 0594                                      l1510 0342  
                                    l1502 031A                                      l1254 05DC  
                                    l1176 02F4                                      l1168 02CC  
                                    l1184 04FC                                      l1192 0564  
                                    l1504 0330                                      l1520 01D2  
                                    l1512 0194                                      l1600 04EE  
                                    l1186 054C                                      l1178 02F6  
                                    l1194 0568                                      l1506 0334  
                                    l1258 05E0                                      l1530 0228  
                                    l1522 01D6                                      l1514 01AE  
                                    l1602 04F0                                      l1188 058C  
                                    l1508 0336                                      l1460 040A  
                                    l1452 03E2                                      l1532 023A  
                                    l1524 0208                                      l1516 01BE  
                                    l1540 05BC                                      l1470 05CC  
                                    l1550 04A4                                      l1542 0494  
                                    l1454 03EA                                      l1534 0252  
                                    l1526 021C                                      l1518 01C2  
                                    l1472 05C2                                      l1552 04A8  
                                    l1544 0498                                      l1456 03F8  
                                    l1480 0276                                      l1528 0224  
                                    l1536 05B4                                      l1560 043E  
                                    l1490 0476                                      l1554 04AC  
                                    l1546 049C                                      l1458 0406  
                                    l1466 037C                                      l1482 0288  
                                    l1474 0258                                      l1538 05B8  
                                    l1570 00AA                                      l1562 007A  
                                    l1492 047C                                      l1556 04B0  
                                    l1548 04A0                                      l1468 0348  
                                    l1484 0294                                      l1476 0258  
                                    l1580 0112                                      l1572 00C6  
                                    l1564 007E                                      l1494 0480  
                                    l1558 04B4                                      l1486 02A6  
                                    l1478 026A                                      l1582 0124  
                                    l1566 0092                                      l1574 00CE  
                                    l1496 0482                                      l1488 046A  
                                    l1648 014C                                      l1576 00F0  
                                    l1568 00A6                                      l1592 04E0  
                                    l1498 048E                                      l1578 0100  
                                    l1586 0136                                      l1594 04E4  
                                    l1596 04E8                                      l1598 04EC  
                 __end_of_PWM1_Initialize 05A0                                      _LATA 000F82  
                                    _LATB 000F83                                      _LATC 000F84  
                                    _T4PR 000FB5                                      _PMD0 000EDC  
                                    _PMD1 000EDD                                      _PMD2 000EDE  
                                    _PMD3 000EDF                                      _PMD4 000EE0  
                                    _PMD5 000EE1                                      _TMR4 000FB4  
                                    _WPUA 000F0B                                      _WPUB 000F13  
                                    _WPUC 000F1B                                      _WPUE 000F28  
                                    _main 04E0                                      btemp 0038  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 0076                ??_TMR4_SetInterruptHandler 0029  
                            ___param_bank 000000                   __end_of_TMR0_Initialize 0348  
          ??_TMR0_DefaultInterruptHandler 0025            __size_of_OSCILLATOR_Initialize 0018  
           __end_of_OSCILLATOR_Initialize 0564                                     ?_main 0025  
                                   _T4CON 000FB6                                     _T4HLT 000FB7  
                                   _T4TMR 000FB4                                     i2l134 006A  
                                   i2l135 006A                                     i2l320 05EC  
                                   i2l129 0038                                     i2l314 03E0  
                                   _T4RST 000FB9                                     i2l180 05B0  
                                   i2l190 05EE                                     i2l184 043C  
                                   i2l427 04DE                                     i2l390 054A  
                                   _OSCEN 000ED7                        _PWM4_LoadDutyValue 0348  
                                   _TMR0H 000FD3                                     _TMR0L 000FD2  
                                   _TRISA 000F87                                     _TRISB 000F88  
                                   _TRISC 000F89         __size_of_TMR0_SetInterruptHandler 000A  
                         __end_of_appInit 046A                           _TMR4_Initialize 046A  
               ?_TMR0_SetInterruptHandler 0027                          __end_of_TMR0_ISR 05B2  
                        _rgbButtonHandler 0194                          __end_of_TMR4_ISR 03E2  
                             ?_TMR4_Start 0025                       ?_PWM4_LoadDutyValue 0027  
                 __end_of_PWM3_Initialize 058C                                     pclath 000FFA  
             __size_of_getIsButtonPressed 0004                                     ttemp5 0039  
                                   ttemp6 003C                                     ttemp7 0040  
                                   status 000FD8                                     wtemp8 0039  
                         __initialization 0518                              __end_of_main 04FC  
                    ??_PWM4_LoadDutyValue 0029                   __end_of_PWM4_Initialize 0578  
             ?_INTERRUPT_InterruptManager 0025                                    ??_main 0032  
                           __activetblptr 000002                    __size_of_rgbButtonTick 0026  
                                  _CCPR1H 000FAA                                    _CCPR1L 000FA9  
                                  _ANSELA 000F0C                                    _ANSELB 000F14  
                                  _ANSELC 000F1C                                    _T0CON0 000FD4  
                                  _T0CON1 000FD5                                    _RC1PPS 000EF3  
                                  _RC3PPS 000EF5                          ?_PWM1_Initialize 0025  
                                  _RC5PPS 000EF7                                    _ODCONA 000F0A  
                                  _ODCONB 000F12                                    _ODCONC 000F1A  
                                  i2l1142 0532                                    i2l1136 04BA  
                                  i2l1144 0536                                    i2l1224 0410  
                                  i2l1226 0422                                    i2l1350 0030  
                                  i2l1352 0046                                    i2l1290 05A8  
                                  i2l1354 0054                                    i2l1346 0012  
                                  i2l1292 05AC                                    i2l1356 0062  
                                  i2l1348 0022                                    i2l1286 05A0  
                                  i2l1294 03B0                                    i2l1288 05A4  
                                  i2l1296 03B4                                    i2l1298 03C6  
                                  _INLVLA 000F08                                    _INLVLB 000F10  
                                  _INLVLC 000F18                                    _INLVLE 000F25  
                                  _OSCFRQ 000ED9              __size_of_getIsButtonChanging 0004  
                                  i2u5_40 0422                                    i2u5_41 041E  
                                  i2u6_48 0428                                    i2u6_49 043C  
                         _TMR4_StartTimer 05D6               __size_of_PWM3_LoadDutyValue 0034  
                     __size_of_TMR4_Start 0004                                    _msTick 0532  
                        ?_TMR0_Initialize 0025                   __end_of_TMR4_Initialize 0494  
                                  clear_0 051E                                 ??_appInit 002B  
                                  isa$std 000001                          __end_of_setColor 05C2  
    __end_of_TMR4_DefaultInterruptHandler 05EE     __size_of_TMR4_DefaultInterruptHandler 0002  
            _TMR4_DefaultInterruptHandler 05EC                            _PMD_Initialize 04FC  
                                  tblptru 000FF8                     __end_of_TMR0_CallBack 043E  
TMR4_SetInterruptHandler@InterruptHandler 0027  TMR0_SetInterruptHandler@InterruptHandler 0027  
           __size_of_INTERRUPT_Initialize 0004                          ?_PWM3_Initialize 0025  
                       _SYSTEM_Initialize 0494                                __accesstop 0060  
                 __end_of__initialization 0524                        ?_SYSTEM_Initialize 0025  
                           ___rparam_used 000001                              ?_updateColor 0025  
             PWM1_LoadDutyValue@dutyValue 0027                             _rgbButtonTick 04BA  
                          __pcstackCOMRAM 0025                       ??_SYSTEM_Initialize 002B  
                               ?_TMR0_ISR 0025                                 ?_TMR4_ISR 0025  
                      _PWM1_LoadDutyValue 03E2                          ?_PWM4_Initialize 0025  
                  __end_of_PMD_Initialize 0518               PWM4_LoadDutyValue@dutyValue 0027  
                     ?_PWM1_LoadDutyValue 0027           fp__TMR4_DefaultInterruptHandler 0000  
           ?_TMR4_DefaultInterruptHandler 0025                   __end_of_TMR4_StartTimer 05DC  
               __end_of_SYSTEM_Initialize 04BA                             setColor@green 0027  
                              __pnvCOMRAM 0032                                _appHandler 007A  
                   _TMR4_InterruptHandler 0032                            ?_rgbButtonTick 0025  
                    ??_PWM1_LoadDutyValue 0029                               setColor@red 0029  
                __end_of_rgbButtonHandler 0258          __end_of_TMR0_SetInterruptHandler 05D6  
                              ??_TMR0_ISR 0025                                ??_TMR4_ISR 0025  
                                 _CCP1CON 000FAB                                   ?_msTick 0025  
                        ?_TMR4_Initialize 0025                        appHandler@redValue 0021  
                         ?_PMD_Initialize 0025                                   _OSCCON1 000ED3  
                                 _OSCCON3 000ED5                                   i2u12_40 03C6  
                                 i2u20_40 0030                                   i2u12_41 03C2  
                                 i2u20_41 002C                                   i2u21_40 0046  
                                 i2u21_41 0042                                   i2u13_48 03CC  
                                 i2u22_40 0054                                   i2u13_49 03E0  
                                 i2u22_41 0050                                   i2u23_40 0062  
                                 i2u23_41 005E                                   i2u19_40 0022  
                                 i2u19_41 001E                                   _OSCTUNE 000ED8  
                                 _PWM3DCH 000FA3                                   _PWM3DCL 000FA2  
                                 _PWM4DCH 000FA0                                   _PWM4DCL 000F9F  
                                 _PWM3CON 000FA4                                   _PWM4CON 000FA1  
                                 _SLRCONA 000F09                                   _SLRCONB 000F11  
                                 _SLRCONC 000F19                              ??_TMR4_Start 0027  
                    appHandler@greenValue 0023                                 ?_setColor 0027  
                                 __Hparam 0000                                   __Lparam 0000  
                                 _cButton 0001                                   __pcinit 0518  
                         __size_of_msTick 001A                        __end_of_TMR4_Start 05E8  
                                 _appInit 043E                                   __ramtop 0F00  
                     _getIsButtonChanging 05E0                                   __ptext0 04E0  
                                 __ptext1 043E                                   __ptext2 007A  
                                 __ptext3 05B2                                   __ptext4 0194  
                                 __ptext5 0258                                   __ptext6 0348  
                                 __ptext7 037C                                   __ptext8 03E2  
                                 __ptext9 05DC                     _OSCILLATOR_Initialize 054C  
                                 _msTicks 0013                                 _T4CONbits 000FB6  
                ??_PIN_MANAGER_Initialize 0027         __size_of_TMR4_SetInterruptHandler 000A  
               ?_TMR4_SetInterruptHandler 0027                                 _T4HLTbits 000FB7  
              __end_of_getIsButtonPressed 05E0                __size_of_SYSTEM_Initialize 0026  
                        ?_TMR4_StartTimer 0025                      end_of_initialization 0524  
          ??_TMR4_DefaultInterruptHandler 0025                                 _T4RSTbits 000FB9  
                    ?_getIsButtonChanging 0025                             __Lmediumconst 0000  
                         ??_rgbButtonTick 0025                               ?_appHandler 0025  
                              ??_setColor 0029           updateColor@calculatedColorValue 002C  
                    __size_of_updateColor 005C                                   postinc0 000FEE  
                                 postinc2 000FDE               __size_of_PWM4_LoadDutyValue 0034  
                _TMR0_SetInterruptHandler 05CC                                 _PORTAbits 000F8C  
                   ??_getIsButtonChanging 0027                               _CCP1CONbits 000FAB  
              __end_of_PWM3_LoadDutyValue 03B0                  __size_of_PWM1_Initialize 0014  
                    _timer0ReloadVal16bit 0036              __end_of_INTERRUPT_Initialize 05EC  
                       __size_of_TMR0_ISR 0012                         __size_of_TMR4_ISR 0032  
                  ?_OSCILLATOR_Initialize 0025                            __end_of_msTick 054C  
                     __size_of_appHandler 011A                       start_initialization 0518  
                __size_of_TMR0_Initialize 003A           __size_of_PIN_MANAGER_Initialize 005A  
                __size_of_PWM3_Initialize 0014                          ??_PMD_Initialize 0027  
                       ?_rgbButtonHandler 0025            rgbButtonHandler@debounceBuffer 001B  
                             _CCPTMRSbits 000FAD                    __size_of_TMR0_CallBack 002E  
                      ??_rgbButtonHandler 002E                                  ??_msTick 0025  
                             __pbssCOMRAM 0001                  __size_of_PWM4_Initialize 0014  
                            setColor@blue 0028                     _TMR0_InterruptHandler 0034  
             __size_of_PWM1_LoadDutyValue 002E                    _PIN_MANAGER_Initialize 02B4  
                     appHandler@blueValue 001F                         __size_of_setColor 0010  
                               __pintcode 0008          __end_of_TMR4_SetInterruptHandler 05CC  
                                ?_appInit 0025                         ??_PWM1_Initialize 0027  
            ??_INTERRUPT_InterruptManager 0025                  __size_of_TMR4_Initialize 002A  
                           _TMR0_CallBack 0410                                  _T4CLKCON 000FB8  
                    _INTERRUPT_Initialize 05E8                         ??_TMR0_Initialize 0029  
                            ??_appHandler 0030                                  _PIE0bits 000EBD  
                                _PIE4bits 000EC1                        _getIsButtonPressed 05DC  
     __size_of_INTERRUPT_InterruptManager 006E                ??_TMR0_SetInterruptHandler 0029  
                                _PIR0bits 000EC5                                  _PIR4bits 000EC9  
                                _TMR0_ISR 05A0                                  _TMR4_ISR 03B0  
                     ?_getIsButtonPressed 0025                         ??_PWM3_Initialize 0027  
                               fp__msTick 0000                        __end_of_appHandler 0194  
                          ?_TMR0_CallBack 0025                     ?_INTERRUPT_Initialize 0025  
                    ??_getIsButtonPressed 0027                         ??_PWM4_Initialize 0027  
                           ??_updateColor 002B                     __end_of_rgbButtonTick 04E0  
                __size_of_TMR4_StartTimer 0006                                  __Hrparam 0000  
                         appHandler@state 001D                __end_of_PWM4_LoadDutyValue 037C  
                                __Lrparam 0000                   ??_OSCILLATOR_Initialize 0027  
                _TMR4_SetInterruptHandler 05C2                          __size_of_appInit 002C  
                      _PWM3_LoadDutyValue 037C                                _T0CON0bits 000FD4  
             __end_of_getIsButtonChanging 05E4                                  __ptext10 05E0  
                                __ptext11 05D6                                  __ptext20 058C  
                                __ptext12 05E4                                  __ptext21 04FC  
                                __ptext13 0494                                  __ptext30 05EE  
                                __ptext22 02B4                                  __ptext14 046A  
                                __ptext31 0532                                  __ptext23 054C  
                                __ptext15 05C2                                  __ptext32 04BA  
                                __ptext24 05E8                                  __ptext16 030E  
                                __ptext33 0000                                  __ptext17 05CC  
                                __ptext26 03B0                                  __ptext18 0564  
                                __ptext27 05EC                                  __ptext19 0578  
                                __ptext28 05A0                                  __ptext29 0410  
                     ?_PWM3_LoadDutyValue 0027                         ??_TMR4_Initialize 0029  
                           __size_of_main 001C      __end_of_TMR0_DefaultInterruptHandler 05F0  
   __size_of_TMR0_DefaultInterruptHandler 0002              _TMR0_DefaultInterruptHandler 05EE  
                                _setColor 05B2                      ??_PWM3_LoadDutyValue 0029  
                                isa$xinst 000000                                  int$flags 0038  
                     __end_of_updateColor 02B4        __end_of_INTERRUPT_InterruptManager 0076  
              _INTERRUPT_InterruptManager 0008                                _INTCONbits 000FF2  
                         ??_TMR0_CallBack 0025                 __size_of_rgbButtonHandler 00C4  
                  ??_INTERRUPT_Initialize 0027                                  intlevel2 0000  
                 ?_PIN_MANAGER_Initialize 0025                           _PWM1_Initialize 058C  
         fp__TMR0_DefaultInterruptHandler 0000             ?_TMR0_DefaultInterruptHandler 0025  
             PWM3_LoadDutyValue@dutyValue 0027                         ??_TMR4_StartTimer 0027  
                         _TMR0_Initialize 030E                                _TMR4_Start 05E4  
          __end_of_PIN_MANAGER_Initialize 030E                __end_of_PWM1_LoadDutyValue 0410  
                         _PWM3_Initialize 0578                               _updateColor 0258  
